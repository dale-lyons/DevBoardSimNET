//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Assembler.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


#pragma warning disable 3021

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="AssemblerParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IAssemblerListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] AssemblerParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] AssemblerParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] AssemblerParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] AssemblerParser.LineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruction([NotNull] AssemblerParser.InstructionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruction([NotNull] AssemblerParser.InstructionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.opcode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpcode([NotNull] AssemblerParser.OpcodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.opcode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpcode([NotNull] AssemblerParser.OpcodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.register_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRegister_([NotNull] AssemblerParser.Register_Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.register_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRegister_([NotNull] AssemblerParser.Register_Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirective([NotNull] AssemblerParser.DirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirective([NotNull] AssemblerParser.DirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.assemblerdirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssemblerdirective([NotNull] AssemblerParser.AssemblerdirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.assemblerdirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssemblerdirective([NotNull] AssemblerParser.AssemblerdirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.lbl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLbl([NotNull] AssemblerParser.LblContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.lbl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLbl([NotNull] AssemblerParser.LblContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.expressionlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionlist([NotNull] AssemblerParser.ExpressionlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.expressionlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionlist([NotNull] AssemblerParser.ExpressionlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel([NotNull] AssemblerParser.LabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel([NotNull] AssemblerParser.LabelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] AssemblerParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] AssemblerParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.arithop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithop([NotNull] AssemblerParser.ArithopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.arithop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithop([NotNull] AssemblerParser.ArithopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.unaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryop([NotNull] AssemblerParser.UnaryopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.unaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryop([NotNull] AssemblerParser.UnaryopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] AssemblerParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] AssemblerParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.dollar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDollar([NotNull] AssemblerParser.DollarContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.dollar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDollar([NotNull] AssemblerParser.DollarContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] AssemblerParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] AssemblerParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName([NotNull] AssemblerParser.NameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName([NotNull] AssemblerParser.NameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] AssemblerParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] AssemblerParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComment([NotNull] AssemblerParser.CommentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComment([NotNull] AssemblerParser.CommentContext context);
}
