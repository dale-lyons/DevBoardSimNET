//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Assembler.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


#pragma warning disable 3021


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IAssemblerListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class AssemblerBaseListener : IAssemblerListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] AssemblerParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] AssemblerParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] AssemblerParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] AssemblerParser.LineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.instruction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruction([NotNull] AssemblerParser.InstructionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.instruction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruction([NotNull] AssemblerParser.InstructionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.opcode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpcode([NotNull] AssemblerParser.OpcodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.opcode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpcode([NotNull] AssemblerParser.OpcodeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.register_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRegister_([NotNull] AssemblerParser.Register_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.register_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRegister_([NotNull] AssemblerParser.Register_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirective([NotNull] AssemblerParser.DirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirective([NotNull] AssemblerParser.DirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.assemblerdirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssemblerdirective([NotNull] AssemblerParser.AssemblerdirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.assemblerdirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssemblerdirective([NotNull] AssemblerParser.AssemblerdirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.lbl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLbl([NotNull] AssemblerParser.LblContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.lbl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLbl([NotNull] AssemblerParser.LblContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.expressionlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionlist([NotNull] AssemblerParser.ExpressionlistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.expressionlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionlist([NotNull] AssemblerParser.ExpressionlistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabel([NotNull] AssemblerParser.LabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabel([NotNull] AssemblerParser.LabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] AssemblerParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] AssemblerParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.arithop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArithop([NotNull] AssemblerParser.ArithopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.arithop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArithop([NotNull] AssemblerParser.ArithopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.unaryop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryop([NotNull] AssemblerParser.UnaryopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.unaryop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryop([NotNull] AssemblerParser.UnaryopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] AssemblerParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] AssemblerParser.ArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.dollar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDollar([NotNull] AssemblerParser.DollarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.dollar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDollar([NotNull] AssemblerParser.DollarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] AssemblerParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] AssemblerParser.StringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterName([NotNull] AssemblerParser.NameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitName([NotNull] AssemblerParser.NameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] AssemblerParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] AssemblerParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AssemblerParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComment([NotNull] AssemblerParser.CommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AssemblerParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComment([NotNull] AssemblerParser.CommentContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
