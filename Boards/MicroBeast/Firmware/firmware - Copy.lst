0001   0000             ;
0002   0000             ; MicroBeast Firmware - boot MicroBeast and launch embedded monitor, bios and other systems
0003   0000             ;
0004   0000             ;
0005   0000             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0006   0000             ;
0007   0000             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0008   0000             ;
0009   0000             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0010   0000             ; of this software and associated documentation files (the "Software"), to deal
0011   0000             ; in the Software without restriction, including without limitation the rights
0012   0000             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0013   0000             ; copies of the Software, and to permit persons to whom the Software is
0014   0000             ; furnished to do so, subject to the following conditions:
0015   0000             ; 
0016   0000             ; The above copyright notice and this permission notice shall be included in all
0017   0000             ; copies or substantial portions of the Software.
0018   0000             ; 
0019   0000             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0020   0000             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0021   0000             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0022   0000             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0023   0000             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0024   0000             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0025   0000             ; SOFTWARE.
0026   0000             ;
0027   0000                                 .MODULE  main
0028   0000                                 .INCLUDE "ports.asm"
0001+  0000             ;
0002+  0000             ; Port definintions
0003+  0000             ;
0004+  0000             ;
0005+  0000             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0006+  0000             ;
0007+  0000             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0008+  0000             ;
0009+  0000             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0010+  0000             ; of this software and associated documentation files (the "Software"), to deal
0011+  0000             ; in the Software without restriction, including without limitation the rights
0012+  0000             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0013+  0000             ; copies of the Software, and to permit persons to whom the Software is
0014+  0000             ; furnished to do so, subject to the following conditions:
0015+  0000             ; 
0016+  0000             ; The above copyright notice and this permission notice shall be included in all
0017+  0000             ; copies or substantial portions of the Software.
0018+  0000             ; 
0019+  0000             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0020+  0000             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0021+  0000             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0022+  0000             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0023+  0000             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0024+  0000             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0025+  0000             ; SOFTWARE.
0026+  0000             ;
0027+  0000             
0028+  0000             BACKSPACE_CHAR      .EQU  08h
0029+  0000             CARRIAGE_RETURN     .EQU  0Dh
0030+  0000             NEWLINE             .EQU  0Ah
0031+  0000             ESCAPE_CHAR         .EQU  1Bh
0032+  0000             CPM_NUM             .EQU  1Fh
0033+  0000             
0034+  0000             ;=================================== UART ============================================
0035+  0000             UART_TX_RX          .EQU    020h    ; Read: receiver buffer, Write: transmitter buffer
0036+  0000             UART_INT_ENABLE     .EQU    021h    ; Interrupt enable register
0037+  0000             UART_INT_ID         .EQU    022h    ; Read: Interrupt identification register
0038+  0000             UART_FIFO_CTRL      .EQU    022h    ; Write: FIFO Control register
0039+  0000             UART_LINE_CTRL      .EQU    023h    ; Line control register
0040+  0000             UART_MODEM_CTRL     .EQU    024h    ; Modem control
0041+  0000             UART_LINE_STATUS    .EQU    025h    ; Line status
0042+  0000             UART_MODEM_STATUS   .EQU    026h    ; Modem status
0043+  0000             UART_SCRATCH        .EQU    027h    ; Scratch register
0044+  0000             
0045+  0000             ;==================================== PIO ============================================
0046+  0000             PIO_A_DATA          .EQU  010h
0047+  0000             PIO_A_CTRL          .EQU  012h
0048+  0000             
0049+  0000             PIO_B_DATA          .EQU  011h
0050+  0000             PIO_B_CTRL          .EQU  013h
0051+  0000             
0052+  0000             PIO_MODE_0          .EQU  00Fh      ; Mode 0: All outputs
0053+  0000             PIO_MODE_1          .EQU  04fh      ; Mode 1: All inputs
0054+  0000             PIO_MODE_2          .EQU  080h      ; Mode 2 (Port A only): Bi-directional
0055+  0000             PIO_MODE_3          .EQU  0CFh      ; Mode 3: Per-pin I/O on the given port - write an additional word with bits set (1) for input, reset (0) for output on the matching pin.
0056+  0000             
0057+  0000             PIO_SET_INTERRUPT   .EQU  007h      ; Set interrupt control world. By itself, this wil disable interrupts on the given port. OR with the following constants to change this
0058+  0000             PIO_ENABLE_INT      .EQU  080h      ; Enable interrupts on the given port, when OR'd with the PIO_SET_INTERRUPT control word.
0059+  0000             PIO_INT_MASK        .EQU  010h      ; When OR'd with the PIO_SET_INTERRUPT control word, the following word will enable interrupts for pins where the matching bit is zero
0060+  0000             
0061+  0000             ;================================== AUDIO ============================================
0062+  0000             ; Constants for Audio output
0063+  0000             AUDIO_PIO           .EQU  1         ; Audio on PIO (rev. 0.1 boards)
0064+  0000             AUDIO_UART          .EQU  2         ; Audio on UART (rev. 0.2 boards)
0065+  0000             
0066+  0000             AUDIO_VERSION       .EQU  AUDIO_UART
0067+  0000             
0068+  0000~            #IF AUDIO_VERSION = AUDIO_PIO
0069+  0000~            PORT_B_IOMASK       .EQU  0EFh      ; All inputs, apart from bit 4 (audio out)
0070+  0000~            AUDIO_MASK          .EQU  010h      ; Bitmask for audio output on Port B. The bit is set for the output pin.
0071+  0000~            AUDIO_PORT          .EQU  PIO_B_DATA
0072+  0000~            
0073+  0000             #ELSE
0074+  0000             PORT_B_IOMASK       .EQU  0FFh      ; All inputs
0075+  0000             AUDIO_MASK          .EQU  008h      ; Bitmask for audio output on UART Out 2. The bit is set for the output pin
0076+  0000             AUDIO_PORT          .EQU  UART_MODEM_CTRL
0077+  0000             
0078+  0000             #ENDIF
0079+  0000             
0080+  0000             
0081+  0000             ;=================================== MEMORY PAGING ===================================
0082+  0000             IO_MEM_0            .EQU    070h      ; Page 0: 0000h - 3fffh
0083+  0000             IO_MEM_1            .EQU    071h      ; Page 1: 4000h - 7fffh
0084+  0000             IO_MEM_2            .EQU    072h      ; Page 2: 8000h - bfffh
0085+  0000             IO_MEM_3            .EQU    073h      ; Page 3: c000h - ffffh
0086+  0000             
0087+  0000             IO_MEM_CTRL         .EQU    074h      ; Paging enable register
0088+  0000             IO_MEM_ENABLE       .EQU    1
0089+  0000             IO_MEM_DISABLE      .EQU    0 
0090+  0000             
0091+  0000             RAM_PAGE_0          .EQU    020h
0092+  0000             RAM_PAGE_1          .EQU    021h
0093+  0000             RAM_PAGE_2          .EQU    022h
0094+  0000             RAM_PAGE_3          .EQU    023h
0095+  0000             
0096+  0000             RAM_PAGE_16         .EQU    030h
0097+  0000             RAM_PAGE_31         .EQU    03Fh
0098+  0000             
0099+  0000             ROM_PAGE_0          .EQU    000h
0100+  0000             ROM_PAGE_16         .EQU    010h
0101+  0000             
0102+  0000             PAGE_1_START        .EQU    4000h
0103+  0000             
0104+  0000             ;====================================== I2C DEVICES ===================================
0105+  0000             I2C_DATA_BIT            .equ    7
0106+  0000             I2C_CLK_BIT             .equ    6
0107+  0000             
0108+  0000             I2C_DATA_MASK           .equ    1 << I2C_DATA_BIT
0109+  0000             I2C_CLK_MASK            .equ    1 << I2C_CLK_BIT
0110+  0000             
0111+  0000             ; Display
0112+  0000             ;==========
0113+  0000             DL_ADDRESS              .EQU    050h     ; Left  Matrix controller I2C address
0114+  0000             DR_ADDRESS              .EQU    053h     ; Right Matrix controller I2C address
0115+  0000             
0116+  0000             DISP_REG_CRWL           .EQU    0FEh     ; Command Register write lock
0117+  0000             DISP_UNLOCK             .EQU    0C5h     ; Unlock command
0118+  0000             
0119+  0000             DISP_DEFAULT_BRIGHTNESS .EQU    080h     ; Default brightness
0120+  0000             DISP_DIMMED             .EQU    018h     ; Dimmed
0121+  0000             
0122+  0000             DISPLAY_WIDTH           .EQU    24       ; 24 characters
0123+  0000             
0124+  0000             ; RTC
0125+  0000             ;==========
0126+  0000             RTC_ADDRESS             .EQU    06fh
0127+  0000             
0128+  0000             RTC_REG_SEC             .EQU    000h    ; Also has oscillator enable bit in B7, 1 = run
0129+  0000             RTC_REG_MIN             .EQU    001h
0130+  0000             RTC_REG_HOUR            .EQU    002h    ; B6: 1 = 12hr/ 0 = 24hr clock (r/w) 
0131+  0000                                                     ;        If 12 hr clock, B5: 1 = PM/ 0 = AM. B4: hour tens. Otherwise B5-4: hour tens, B3-0: hour units
0132+  0000             RTC_REG_WKDAY           .EQU    003h    ; Oscillator status bit in B5, 1 = enabled and running. 
0133+  0000                                                     ;   B4: 1 = power was lost, write 0 to clear (timestamp registers are set)
0134+  0000                                                     ;   B3: 1 = enable external battery supply (VBAT)
0135+  0000                                                     ;   B2-0: Weekday, from 1 to 7 
0136+  0000             RTC_REG_DATE            .EQU    004h    ; BCD Date (1 to 31)
0137+  0000             RTC_REG_MTH             .EQU    005h    ; B5: 1 = Leap year (read only). B4: month tens, B3-0: month units  (Month is 1 to 12)
0138+  0000             RTC_REG_YEAR            .EQU    006h    ; BCD Year
0139+  0000             
0140+  0000             RTC_REG_CTRL            .EQU    007h    ; B7: If Square wave and Alarm 0 and Alarm 1 are disabled, sets Output Pin level
0141+  0000                                                     ;   B6: SQWEN, 1 = Enable square wave on Output Pin, Alarms disabled
0142+  0000                                                     ;   B5, B4: Alarm 1, 0 Enable. 1 = Alarm is enabled
0143+  0000                                                     ;   B3: 1 = Use external oscillator
0144+  0000                                                     ;   B2: CRSTRIM, 1 = Coarse trim mode, Output pin is 64Hz
0145+  0000                                                     ;   B1-0: If SQWEN = 1 & CRSTRIM = 0, sets Output pin freq. 00 -> 1Hz, 01 -> 4.096kHz, 10 -> 8.192kHz, 11 -> 32.768kHz
0146+  0000             RTC_REG_TRIM            .EQU    008h    ; Trim, initially 0. B7: Sign, 1=Add, 0=Subtract clock cycles.  
0147+  0000                                                     ;   B6-0: Trim amount/2. Applied 1 every minute in fine trim, 128 times a second in coarse trim mode. 0 = disable trim
0148+  0000             
0149+  0000             RTC_64HZ_ENABLED        .EQU    044h    ; Value for RTC_REG_CTRL to enable 64Hz interrupt output
0150+  0000             
0151+  0000             RTC_WEEKDAY_RUNNING     .EQU    008h    ; Value for RTC_REG_WKDAY for normall running of clock0029   0000                                 .INCLUDE "shared_data.asm"
0001+  0000             ;
0002+  0000             ; Shared data - common state data for routines
0003+  0000             ;
0004+  0000             ;
0005+  0000             
0006+  0000             
0007+  0000             ; I2C/Port B routines
0008+  0000             port_b_mode         .equ    0FF00h
0009+  0000             port_b_dir          .equ    0FF01h
0010+  0000             port_b_data         .equ    0FF02h
0011+  0000             
0012+  0000             ; Boot 
0013+  0000             boot_mode           .equ    0FF03h          ; Zero = normal boot, non-zero = delete pressed
0014+  0000             temp_byte           .equ    0FF04h
0015+  0000             
0016+  0000             ; Display functions
0017+  0000             display_address     .equ    0FF05h          ; byte - address of the display driver (right or left) being written to
0018+  0000             
0019+  0000             ;
0020+  0000             ; Stuff
0021+  0000             timer               .equ    0FF06h          ; Word
0022+  0000             
0023+  0000             ; General I/O
0024+  0000             ;
0025+  0000             ; This MUST start with keyboard_state, and will all be reset to zero when io_init is called
0026+  0000             ;
0027+  0000             _key_state_size     .EQU    8               ; 8 key rollover
0028+  0000             
0029+  0000             keyboard_state      .EQU    0FF08h          ; state buffer - 8 bytes containing raw key codes for keys currently pressed
0030+  0000             keyboard_pos        .EQU    0FF10h          ; Internal state
0031+  0000             key_shift_state     .EQU    0FF12h          ; Holds state of shift and control keys in bits 0 and 1 respectively
0032+  0000             last_keycode        .EQU    0FF13h          ; The last keycode that was pressed, for repeats..
0033+  0000             key_repeat_time     .EQU    0FF14h            ; How many poll events since the key state last changed
0034+  0000             
0035+  0000             _input_buffer_size  .EQU    16
0036+  0000             input_buffer        .EQU    0FF15h          ; 16 byte input buffer. Note wraparound is handled by bitmasks, so don't change this length
0037+  0000             input_pos           .EQU    0FF25h          ; Next read position in input buffer
0038+  0000             input_free          .EQU    0FF26h          ; Next write position in input buffer
0039+  0000             input_size          .EQU    0FF27h          ; Bytes occupied in the input buffer
0040+  0000             
0041+  0000             io_data_end         .EQU    0FF28h          ; Byte after IO data block, used to reset values to zero
0042+  0000             
0043+  0000             control_key_pressed .EQU    0FF29h
0044+  0000             
0045+  0000             scratch_pad         .EQU    0FF2Ah          ; 26 byte scratch area used for composing display output (eg. rtc time display etc.)
0046+  0000             
0047+  0000             temp_data           .EQU    0FF44h          ; 8 byte general data area
0048+  0000             
0049+  0000             menu_start          .EQU    0FF4Ch          ; Start address of current menu definition
0050+  0000             menu_item_start     .EQU    0FF4Eh          ; Start address of first item in menu
0051+  0000             menu_count          .EQU    0FF50h          ; Number of items in menu
0052+  0000             menu_index          .EQU    0FF51h          ; Current menu item
0053+  0000             menu_timer          .EQU    0FF52h          ; Time since menu was displayed
0054+  0000             menu_enabled        .EQU    0FF53h          ; D0 - D7 -> Menu item 1 to 8 set enabled (1) or disabled (0) 
0055+  0000             
0056+  0000             cursor_pos          .EQU    0FF54h          ; Position of cursor for prompt
0057+  0000             
0058+  0000             ;
0059+  0000             ; Panic codes
0060+  0000             ;
0061+  0000             PANIC_0001          .EQU    0F001h
0062+  0000             PANIC_0002          .EQU    0F002h
0063+  0000             PANIC_0003          .EQU    0F003h
0064+  0000             PANIC_0004          .EQU    0F004h0030   0000             
0031   0000             
0032   0000                                 .org 0h
0033   0000 F3                              DI                              ; Disable Z80 interrupts
0034   0001 18 17                           JR      _start
0035   0003             
0036   0003 46 69 72 6D                     .DB     "Firmware 1.6 02/04/24",0,0
0036   0007 77 61 72 65 
0036   000B 20 31 2E 36 
0036   000F 20 30 32 2F 
0036   0013 30 34 2F 32 
0036   0017 34 00 00 
0037   001A             
0038   001A 31 00 00    _start              LD      SP, 0h                  ; Set SP
0039   001D             
0040   001D                                 .INCLUDE    "boot_seq.asm"
0001+  001D             ;
0002+  001D             ; Boot sequence
0003+  001D             ;
0004+  001D             ;
0005+  001D             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0006+  001D             ;
0007+  001D             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0008+  001D             ;
0009+  001D             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0010+  001D             ; of this software and associated documentation files (the "Software"), to deal
0011+  001D             ; in the Software without restriction, including without limitation the rights
0012+  001D             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0013+  001D             ; copies of the Software, and to permit persons to whom the Software is
0014+  001D             ; furnished to do so, subject to the following conditions:
0015+  001D             ; 
0016+  001D             ; The above copyright notice and this permission notice shall be included in all
0017+  001D             ; copies or substantial portions of the Software.
0018+  001D             ; 
0019+  001D             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0020+  001D             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0021+  001D             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0022+  001D             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0023+  001D             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0024+  001D             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0025+  001D             ; SOFTWARE.
0026+  001D             ;
0027+  001D                                 .MODULE  boot_sequence
0028+  001D             ;
0029+  001D             ; TODO: PIO setup should happen after the initial beep. Do it here for now, until new boards are available.
0030+  001D             ;
0031+  001D 3E 07                           LD      A, PIO_SET_INTERRUPT    ; Ports A/B Interrupt control - no interrupts
0032+  001F D3 12                           OUT     (PIO_A_CTRL), A         ; Set control twice in case a reset interrupted a control sequence
0033+  0021 D3 12                           OUT     (PIO_A_CTRL), A
0034+  0023 D3 13                           OUT     (PIO_B_CTRL), A
0035+  0025 D3 13                           OUT     (PIO_B_CTRL), A
0036+  0027             
0037+  0027 3E CF                           LD      A, PIO_MODE_3           ; Port A Mode 3 
0038+  0029 D3 12                           OUT     (PIO_A_CTRL), A
0039+  002B 3E FF                           LD      A, 0FFh                 ; All inputs
0040+  002D D3 12                           OUT     (PIO_A_CTRL), A
0041+  002F             
0042+  002F             
0043+  002F 3E CF                           LD      A, PIO_MODE_3           ; Port B mode 3
0044+  0031 D3 13                           OUT     (PIO_B_CTRL), A
0045+  0033 3E FF                           LD      A, PORT_B_IOMASK        ; All inputs, apart from bit 4 (audio out)
0046+  0035 D3 13                           OUT     (PIO_B_CTRL), A
0047+  0037             
0048+  0037 21 80 0E                        LD     HL, 0E80h                ; Approx middle C
0049+  003A             ;
0050+  003A             ; Beep to show we've booted
0051+  003A             ;
0052+  003A DB 24       _boot_beep          IN      A, (AUDIO_PORT)         ; Check the state of the audio port,,
0053+  003C 57                              LD      D, A                 
0054+  003D 1E 64                           LD      E, 100                  ; 100 cycles = 1/3 of a sec
0055+  003F 7A          _beep_loop          LD      A, D
0056+  0040 EE 08                           XOR     AUDIO_MASK
0057+  0042 D3 24                           OUT     (AUDIO_PORT), A
0058+  0044             
0059+  0044 4D                              LD      C, L
0060+  0045 44          _beep_delay0        LD      B, H
0061+  0046 10 FE       _beep_delay1        DJNZ    _beep_delay1            ; 13 * (count-2) + 8
0062+  0048 0D                              DEC     C
0063+  0049 20 FA                           JR      NZ, _beep_delay0
0064+  004B             
0065+  004B 7A                              LD      A, D
0066+  004C D3 24                           OUT     (AUDIO_PORT), A
0067+  004E             
0068+  004E 4D                              LD      C, L
0069+  004F 44          _beep_delay2        LD      B, H
0070+  0050 10 FE       _beep_delay3        DJNZ    _beep_delay3            ; 13 * (count-2) + 8
0071+  0052 0D                              DEC     C
0072+  0053 20 FA                           JR      NZ, _beep_delay2      
0073+  0055             
0074+  0055 1D                              DEC     E
0075+  0056 20 E7                           JR      NZ, _beep_loop
0076+  0058             
0077+  0058             ;
0078+  0058             ; Now initialise the UART
0079+  0058             ;
0080+  0058             ;
0081+  0058 01 26 00                        LD      BC, UART_19200 | UART_MODE_AUTO  ;;; TODO This is sooooo wrong - sets C (divisor) to 38 
0082+  005B 3E 80                           LD      A, 80h                      ; Divisor Latch Setting Mode
0083+  005D D3 23                           OUT     (UART_LINE_CTRL), A         ;  - entered by writing 1 to bit 7 of LCR
0084+  005F 00                              NOP
0085+  0060 00                              NOP
0086+  0061 79                              LD      A, C
0087+  0062 D3 20                           OUT     (UART_TX_RX), A
0088+  0064 00                              NOP
0089+  0065 00                              NOP
0090+  0066 AF                              XOR     A
0091+  0067 D3 21                           OUT     (UART_INT_ENABLE), A
0092+  0069 00                              NOP
0093+  006A 00                              NOP
0094+  006B             
0095+  006B 3E 03                           LD      A, UART_8N1                 ; Set 8N1 and exit divisor latch setting mode
0096+  006D D3 23                           OUT     (UART_LINE_CTRL), A
0097+  006F             
0098+  006F 3E 07                           LD      A, 07h                      ; Enable and clear FIFO registers
0099+  0071 D3 22                           OUT     (UART_FIFO_CTRL), A
0100+  0073             
0101+  0073 78                              LD      A, B
0102+  0074 A7                              AND     A
0103+  0075 28 02                           JR      Z, _no_flowcontrol
0104+  0077             
0105+  0077 D3 24                           OUT     (UART_MODEM_CTRL), A
0106+  0079             
0107+  0079 00          _no_flowcontrol     NOP
0108+  007A 00                              NOP
0109+  007B             
0110+  007B             ;
0111+  007B             ; Send 'OK' to UART
0112+  007B             ;
0113+  007B             ;
0114+  007B 01 50 C3                        LD      BC, UART_TIMEOUT
0115+  007E DB 25       _check_ready1       IN      A, (UART_LINE_STATUS)
0116+  0080 CB 6F                           BIT     5, A
0117+  0082 20 0C                           JR      NZ, _uart_ready1            ; Bit 5 is set when the UART is ready
0118+  0084 0B                              DEC     BC
0119+  0085 78                              LD      A, B
0120+  0086 B1                              OR      C
0121+  0087 C2 7E 00                        JP      NZ, _check_ready1
0122+  008A             
0123+  008A 21 C0 07                        LD      HL, 07C0h                   ; #C1
0124+  008D C3 3A 00                        JP      _boot_beep                  ; Beep again if we can't get ready on the UART
0125+  0090             
0126+  0090 3E 4F       _uart_ready1        LD      A, 'O'
0127+  0092 D3 20                           OUT     (UART_TX_RX), A
0128+  0094                                 
0129+  0094             
0130+  0094 01 50 C3                        LD      BC, UART_TIMEOUT
0131+  0097 DB 25       _check_ready2       IN      A, (UART_LINE_STATUS)
0132+  0099 CB 6F                           BIT     5, A
0133+  009B 20 0C                           JR      NZ, _uart_ready2             ; Bit 5 is set when the UART is ready
0134+  009D 0B                              DEC     BC
0135+  009E 78                              LD      A, B
0136+  009F B1                              OR      C
0137+  00A0 C2 97 00                        JP      NZ, _check_ready2
0138+  00A3             
0139+  00A3 21 C0 07                        LD      HL, 07C0h                   ; #C1
0140+  00A6 C3 3A 00                        JP      _boot_beep                  ; Beep again if we can't get ready on the UART
0141+  00A9             
0142+  00A9 3E 4B       _uart_ready2        LD      A, 'K'
0143+  00AB D3 20                           OUT     (UART_TX_RX), A
0144+  00AD             
0145+  00AD             
0146+  00AD 01 50 C3                        LD      BC, UART_TIMEOUT
0147+  00B0 DB 25       _check_ready3       IN      A, (UART_LINE_STATUS)
0148+  00B2 CB 6F                           BIT     5, A
0149+  00B4 20 0C                           JR      NZ, _uart_ready3             ; Bit 5 is set when the UART is ready
0150+  00B6 0B                              DEC     BC
0151+  00B7 78                              LD      A, B
0152+  00B8 B1                              OR      C
0153+  00B9 C2 B0 00                        JP      NZ, _check_ready3
0154+  00BC             
0155+  00BC 21 C0 07                        LD      HL, 07C0h                   ; #C1
0156+  00BF C3 3A 00                        JP      _boot_beep                  ; Beep again if we can't get ready on the UART
0157+  00C2             
0158+  00C2             
0159+  00C2 3E 0D       _uart_ready3        LD      A, CARRIAGE_RETURN
0160+  00C4 D3 20                           OUT     (UART_TX_RX), A
0161+  00C6             
0162+  00C6             
0163+  00C6 01 50 C3                        LD      BC, UART_TIMEOUT
0164+  00C9 DB 25       _check_ready4       IN      A, (UART_LINE_STATUS)
0165+  00CB CB 6F                           BIT     5, A
0166+  00CD 20 0C                           JR      NZ, _uart_ready4             ; Bit 5 is set when the UART is ready
0167+  00CF 0B                              DEC     BC
0168+  00D0 78                              LD      A, B
0169+  00D1 B1                              OR      C
0170+  00D2 C2 C9 00                        JP      NZ, _check_ready4
0171+  00D5             
0172+  00D5 21 C0 07                        LD      HL, 07C0h                   ; #C1
0173+  00D8 C3 3A 00                        JP      _boot_beep                  ; Beep again if we can't get ready on the UART
0174+  00DB             
0175+  00DB             
0176+  00DB 3E 0A       _uart_ready4        LD      A, NEWLINE
0177+  00DD D3 20                           OUT     (UART_TX_RX), A
0178+  00DF             
0179+  00DF 00                              NOP
0180+  00E0 00                              NOP
0181+  00E1             
0182+  00E1 01 50 C3                        LD      BC, UART_TIMEOUT            ; Make sure the character is sent before we re-initialise the UART later
0183+  00E4 DB 25       _check_ready5       IN      A, (UART_LINE_STATUS)
0184+  00E6 CB 6F                           BIT     5, A
0185+  00E8 20 06                           JR      NZ, _uart_ready5            ; Bit 5 is set when the UART is ready
0186+  00EA 0B                              DEC     BC
0187+  00EB 78                              LD      A, B
0188+  00EC B1                              OR      C
0189+  00ED C2 E4 00                        JP      NZ, _check_ready5
0190+  00F0             
0191+  00F0             _uart_ready5
0192+  00F0             ;
0193+  00F0             ; Now enable RAM in page 3 and test
0194+  00F0             ;
0195+  00F0             ;
0196+  00F0 3E 00                           LD      A, ROM_PAGE_0
0197+  00F2 D3 70                           OUT     (IO_MEM_0), A           ; Page 0 is Flash 0
0198+  00F4 3E 23                           LD      A, RAM_PAGE_3
0199+  00F6 D3 73                           OUT     (IO_MEM_3), A           ; Page 3 is RAM 0
0200+  00F8             
0201+  00F8 3E 01                           LD      A, IO_MEM_ENABLE
0202+  00FA D3 74                           OUT     (IO_MEM_CTRL), A
0203+  00FC             
0204+  00FC 3E 37                           LD      A, 37h                  ; Can we write and read a value from Page 3?
0205+  00FE 32 02 FF                        LD      (0FF02h), A
0206+  0101             
0207+  0101 3A 02 FF                        LD      A, (0FF02h)
0208+  0104 21 E0 03                        LD      HL, 03E0h               ; #C2
0209+  0107 FE 37                           CP      37h
0210+  0109             
0211+  0109 C2 3A 00                        JP      NZ, _boot_beep          ; Beep again if we don't see the value we've written
0212+  010C 3C                              INC     A
0213+  010D 32 02 FF                        LD      (0FF02h), A
0214+  0110 3A 02 FF                        LD      A, (0FF02h)
0215+  0113 FE 38                           CP      38h
0216+  0115             
0217+  0115 C2 3A 00                        JP      NZ, _boot_beep
0218+  0118             
0219+  0118 CD 46 09                        CALL    uart_init               ; Reinitialise the UART to make sure we've not missed anything
0220+  011B             ;
0221+  011B             ; Now check keys all read as un-pressed, apart from DELETE
0222+  011B             ;
0223+  011B AF                              XOR     A                       ; Reset boot mode
0224+  011C 32 03 FF                        LD      (boot_mode), A
0225+  011F             
0226+  011F 01 00 F7                        LD      BC, 0F700h
0227+  0122 ED 78       _key_loop           IN      A, (C)
0228+  0124 E6 3F                           AND     03Fh
0229+  0126 FE 3F                           CP      03Fh
0230+  0128 CA 58 01                        JP      Z, _key_ok
0231+  012B             
0232+  012B 6F                              LD      L, A
0233+  012C 78                              LD      A, B
0234+  012D FE EF                           CP      0EFh
0235+  012F CA 36 01                        JP      Z, _delete_row
0236+  0132             
0237+  0132 60                              LD      H,B                 ; If it's not the delete row, the panic code is the row and key mask
0238+  0133 C3 8F 01                        JP      panic
0239+  0136             
0240+  0136 7D          _delete_row         LD      A, L
0241+  0137 FE 1F                           CP      01Fh                ; If it is the delete row and not the delete key, panic 0004
0242+  0139 21 04 F0                        LD      HL, PANIC_0004
0243+  013C C2 8F 01                        JP      NZ, panic
0244+  013F             
0245+  013F 3E FF                           LD      A, 0FFh
0246+  0141 32 03 FF                        LD      (boot_mode), A
0247+  0144             
0248+  0144 CD CB 09                        CALL    uart_inline
0249+  0147 4D 65 6D 6F                     .DB     "Memory test\r\n", 0
0249+  014B 72 79 20 74 
0249+  014F 65 73 74 0D 
0249+  0153 0A 00 
0250+  0155             
0251+  0155 CD E9 09                        CALL    mem_test_start
0252+  0158             
0253+  0158 CB 08       _key_ok             RRC     B
0254+  015A 78                              LD      A, B
0255+  015B FE F7                           CP      0F7h
0256+  015D C2 22 01                        JP      NZ, _key_loop
0257+  0160             
0258+  0160 CD CB 09                        CALL    uart_inline
0259+  0163 4B 65 79 62                     .DB     "Keyboard OK\r\n", 0
0259+  0167 6F 61 72 64 
0259+  016B 20 4F 4B 0D 
0259+  016F 0A 00 
0260+  0171             
0261+  0171             ;
0262+  0171             ; At this stage we should have a working UART and memory.. we can start calling routines..
0263+  0171             ;
0264+  0171 CD CB 09                        CALL    uart_inline
0265+  0174 4D 69 63 72                     .DB     "MicroBeast starting...\n\r",0
0265+  0178 6F 42 65 61 
0265+  017C 73 74 20 73 
0265+  0180 74 61 72 74 
0265+  0184 69 6E 67 2E 
0265+  0188 2E 2E 0A 0D 
0265+  018C 00 
0266+  018D             
0267+  018D 18 25                           JR      _continue
0268+  018F             
0269+  018F CD CB 09    panic               CALL    uart_inline
0270+  0192 50 61 6E 69                     .DB     "Panic\n\r",0
0270+  0196 63 0A 0D 00 
0271+  019A 7C                              LD      A, H
0272+  019B CD AC 09                        CALL    uart_hex
0273+  019E 7D                              LD      A, L
0274+  019F CD AC 09                        CALL    uart_hex
0275+  01A2 11 00 04    _beep               LD      DE, 0400h
0276+  01A5 0E 05                           LD      C, 5
0277+  01A7 CD 01 08                        CALL    play_note
0278+  01AA 11 06 05                        LD      DE, 0506h
0279+  01AD 0E 05                           LD      C, 5
0280+  01AF CD 01 08                        CALL    play_note
0281+  01B2 18 EE                           JR      _beep
0282+  01B4             
0283+  01B4 CD 91 05    _continue           CALL    init_portb
0284+  01B7 CD A7 05                        CALL    i2c_bus_reset
0285+  01BA             ;
0286+  01BA             ; Now: Port B should be all inputs, so D7 (i2c data) should be high
0287+  01BA             ;                   
0288+  01BA 06 FF                           LD      B, 0ffh
0289+  01BC 10 FE                           DJNZ    $
0290+  01BE             
0291+  01BE DB 11                           IN      A, (PIO_B_DATA)
0292+  01C0 E6 80                           AND     I2C_DATA_MASK           ; TODO - No panic code
0293+  01C2 28 CB                           JR      Z, panic
0294+  01C4             
0295+  01C4 CD 9C 06                        CALL    i2c_sda_low             ; Set data low
0296+  01C7 DB 11                           IN      A, (PIO_B_DATA)
0297+  01C9 E6 80                           AND     I2C_DATA_MASK           ; TODO - No panic code
0298+  01CB 20 C2                           JR      NZ, panic
0299+  01CD             
0300+  01CD CD CB 09                        CALL    uart_inline
0301+  01D0 44 65 74 65                     .DB     "Detected PIO\r\n",0
0301+  01D4 63 74 65 64 
0301+  01D8 20 50 49 4F 
0301+  01DC 0D 0A 00 
0302+  01DF             
0303+  01DF             ;
0304+  01DF             ; All good, let's see what's on the bus...
0305+  01DF             ;
0306+  01DF CD A7 05                        CALL    i2c_bus_reset
0307+  01E2             
0308+  01E2 CD B6 05                        CALL    i2c_start
0309+  01E5 3E 50                           LD      A, DL_ADDRESS
0310+  01E7 CD 0F 06                        CALL    i2c_address_w
0311+  01EA 21 01 F0                        LD      HL, PANIC_0001
0312+  01ED             ;                    JR      NC, panic
0313+  01ED CD C5 05                        CALL    i2c_stop
0314+  01F0             
0315+  01F0 CD CB 09                        CALL    uart_inline
0316+  01F3 44 65 74 65                     .DB     "Detected Display 1/2\r\n", 0
0316+  01F7 63 74 65 64 
0316+  01FB 20 44 69 73 
0316+  01FF 70 6C 61 79 
0316+  0203 20 31 2F 32 
0316+  0207 0D 0A 00 
0317+  020A             
0318+  020A CD B6 05                        CALL    i2c_start
0319+  020D 3E 53                           LD      A, DR_ADDRESS
0320+  020F CD 0F 06                        CALL    i2c_address_w
0321+  0212 21 02 F0                        LD      HL, PANIC_0002
0322+  0215             ;                    JP      NC, panic
0323+  0215 CD C5 05                        CALL    i2c_stop
0324+  0218             
0325+  0218 CD CB 09                        CALL    uart_inline
0326+  021B 44 65 74 65                     .DB     "Detected Display 2/2\r\n", 0
0326+  021F 63 74 65 64 
0326+  0223 20 44 69 73 
0326+  0227 70 6C 61 79 
0326+  022B 20 32 2F 32 
0326+  022F 0D 0A 00 
0327+  0232             
0328+  0232 CD B6 05                        CALL    i2c_start
0329+  0235 3E 6F                           LD      A, RTC_ADDRESS
0330+  0237 CD 0F 06                        CALL    i2c_address_w
0331+  023A 21 03 F0                        LD      HL, PANIC_0003
0332+  023D D2 8F 01                        JP      NC, panic
0333+  0240 CD C5 05                        CALL    i2c_stop
0334+  0243             
0335+  0243 CD CB 09                        CALL    uart_inline
0336+  0246 44 65 74 65                     .DB     "Detected RTC\r\n", 0
0336+  024A 63 74 65 64 
0336+  024E 20 52 54 43 
0336+  0252 0D 0A 00 
0337+  0255             
0338+  0255                                 .MODULE main
0041   0255             
0042   0255 CD 91 05    _main               CALL    init_portb
0043   0258 CD A7 05                        CALL    i2c_bus_reset
0044   025B                                 
0045   025B CD 76 03                        CALL    display_init
0046   025E                      
0047   025E 1E 00                           LD      E, 0                    ; Set brightness to zero
0048   0260 CD B6 03                        CALL    disp_brightness
0049   0263             
0050   0263 3E 00                           LD      A,  0
0051   0265 21 44 03                        LD      HL, welcome
0052   0268 CD B4 04                        CALL    disp_string
0053   026B             
0054   026B                                 ;; Animate it
0055   026B 3E 50                           LD      A, DL_ADDRESS           ; Put both controllers in brightness mode
0056   026D 32 05 FF                        LD      (display_address), A
0057   0270 2E 01                           LD      L, BRIGHT_PAGE
0058   0272 CD F1 03                        CALL    disp_page
0059   0275             
0060   0275 3E 53                           LD      A, DR_ADDRESS
0061   0277 32 05 FF                        LD      (display_address), A
0062   027A 2E 01                           LD      L, BRIGHT_PAGE
0063   027C CD F1 03                        CALL    disp_page
0064   027F             
0065   027F 3E 00                           LD      A, 0                    ; Current animation from 0-24
0066   0281 32 04 FF                        LD      (temp_byte), A
0067   0284                                 
0068   0284                                 ; Update display
0069   0284 CD B6 05    _frame_loop         CALL    i2c_start
0070   0287 3E 50                           LD      A, DL_ADDRESS
0071   0289 CD 0F 06                        CALL    i2c_address_w
0072   028C AF                              XOR     A                       ; First digit in display
0073   028D CD 11 06                        CALL    i2c_write
0074   0290             
0075   0290 06 0C                           LD      B, 12
0076   0292 3A 04 FF                        LD      A, (temp_byte)
0077   0295 4F                              LD      C, A
0078   0296             
0079   0296 C5          _l_char_loop        PUSH    BC
0080   0297 06 00                           LD      B, 0
0081   0299 21 11 03                        LD      HL, little_sin
0082   029C 09                              ADD     HL, BC 
0083   029D                                 
0084   029D 1E 10                           LD      E, 16
0085   029F 7E          _write_l_char       LD      A, (HL)
0086   02A0 CD 11 06                        CALL    i2c_write
0087   02A3 1D                              DEC     E
0088   02A4 20 F9                           JR      NZ, _write_l_char
0089   02A6             
0090   02A6 C1                              POP     BC
0091   02A7 0C                              INC     C
0092   02A8 0C                              INC     C
0093   02A9 79                              LD      A, C
0094   02AA FE 18                           CP      24
0095   02AC 38 03                           JR      C, _no_loop_l
0096   02AE DE 18                           SBC     A, 24
0097   02B0 4F                              LD      C, A
0098   02B1 10 E3       _no_loop_l          DJNZ    _l_char_loop
0099   02B3 CD C5 05                        CALL    i2c_stop
0100   02B6             
0101   02B6 C5                              PUSH    BC
0102   02B7 CD B6 05                        CALL    i2c_start
0103   02BA 3E 53                           LD      A, DR_ADDRESS
0104   02BC CD 0F 06                        CALL    i2c_address_w
0105   02BF AF                              XOR     A
0106   02C0 CD 11 06                        CALL    i2c_write
0107   02C3             
0108   02C3 C1                              POP     BC
0109   02C4 06 0C                           LD      B, 12
0110   02C6             
0111   02C6 C5          _r_char_loop        PUSH    BC
0112   02C7 06 00                           LD      B, 0
0113   02C9 21 11 03                        LD      HL, little_sin
0114   02CC 09                              ADD     HL, BC 
0115   02CD             
0116   02CD 1E 10                           LD      E, 16
0117   02CF 7E          _write_r_char       LD      A, (HL)
0118   02D0 CD 11 06                        CALL    i2c_write
0119   02D3 1D                              DEC     E
0120   02D4 20 F9                           JR      NZ, _write_r_char
0121   02D6             
0122   02D6 C1                              POP     BC
0123   02D7 0C                              INC     C
0124   02D8 0C                              INC     C
0125   02D9 79                              LD      A, C
0126   02DA FE 18                           CP      24
0127   02DC 38 03                           JR      C, _no_loop_r
0128   02DE DE 18                           SBC     A, 24
0129   02E0 4F                              LD      C, A
0130   02E1 10 E3       _no_loop_r          DJNZ    _r_char_loop
0131   02E3 CD C5 05                        CALL    i2c_stop
0132   02E6             
0133   02E6 3A 04 FF    _next_frame         LD      A, (temp_byte)
0134   02E9 3C                              INC     A
0135   02EA 32 04 FF                        LD      (temp_byte), A
0136   02ED FE 18                           CP      24
0137   02EF C2 84 02                        JP      NZ, _frame_loop
0138   02F2             
0139   02F2 1E 80                           LD      E, DISP_DEFAULT_BRIGHTNESS      ; Reset brightness
0140   02F4 CD B6 03                        CALL    disp_brightness
0141   02F7             
0142   02F7 3E 00                           LD      A, 0
0143   02F9 21 5D 03                        LD      HL, welcome2
0144   02FC CD B4 04                        CALL    disp_string
0145   02FF             
0146   02FF CD 2B 03                        CALL    wait_key
0147   0302             
0148   0302             ;======================================== SETUP BIOS ========================================
0149   0302             
0150   0302 21 AE 0A                        LD      HL, bios_seg+4
0151   0305 ED 5B AA 0A                     LD      DE, (bios_seg)
0152   0309 D5                              PUSH    DE
0153   030A ED 4B AC 0A                     LD      BC, (bios_seg+2)
0154   030E ED B0                           LDIR
0155   0310 C9                              RET
0156   0311                                 
0157   0311 00 03 09 13 little_sin          .DB     0, 3, 9, 19, 32, 48, 64, 81, 96, 110, 120, 126, 128, 126, 120, 110, 96, 81, 65, 48, 33, 19, 9, 3  ; 24 values
0157   0315 20 30 40 51 
0157   0319 60 6E 78 7E 
0157   031D 80 7E 78 6E 
0157   0321 60 51 41 30 
0157   0325 21 13 09 03 
0158   0329             
0159   0329 18 FE       halt                JR      halt
0160   032B             
0161   032B 01 00 00    wait_key            LD      BC, 0000h   ; Keyboard all rows
0162   032E ED 78       _wait_key           IN      A, (C)
0163   0330 E6 3F                           AND     3fh
0164   0332 FE 3F                           CP      3fh
0165   0334             ;                    JP      Z, _wait_key
0166   0334             
0167   0334 16 64       _wait_up            LD      D, 100
0168   0336 ED 78       _wait_loop          IN      A, (C)
0169   0338 E6 3F                           AND     3fh
0170   033A FE 3F                           CP      3fh
0171   033C C2 34 03                        JP      NZ, _wait_up
0172   033F 15                              DEC     D
0173   0340 C2 36 03                        JP      NZ, _wait_loop
0174   0343 C9                              RET
0175   0344             
0176   0344 2A 2A 2A 2A welcome             .db "************************", 0
0176   0348 2A 2A 2A 2A 
0176   034C 2A 2A 2A 2A 
0176   0350 2A 2A 2A 2A 
0176   0354 2A 2A 2A 2A 
0176   0358 2A 2A 2A 2A 
0176   035C 00 
0177   035D 2A 20 4D 49 welcome2            .db "* MICRO BEAST  Ver 1_6 *", 0
0177   0361 43 52 4F 20 
0177   0365 42 45 41 53 
0177   0369 54 20 20 56 
0177   036D 65 72 20 31 
0177   0371 5F 36 20 2A 
0177   0375 00 
0178   0376             
0179   0376             ; =============================================== Font =====================================================
0180   0376             ;
0181   0376                                 .INCLUDE disp.asm
0001+  0376             ; ========================================== Display Routines ===============================================
0002+  0376             ;
0003+  0376             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0004+  0376             ;
0005+  0376             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0006+  0376             ;
0007+  0376             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0008+  0376             ; of this software and associated documentation files (the "Software"), to deal
0009+  0376             ; in the Software without restriction, including without limitation the rights
0010+  0376             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0011+  0376             ; copies of the Software, and to permit persons to whom the Software is
0012+  0376             ; furnished to do so, subject to the following conditions:
0013+  0376             ; 
0014+  0376             ; The above copyright notice and this permission notice shall be included in all
0015+  0376             ; copies or substantial portions of the Software.
0016+  0376             ; 
0017+  0376             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0018+  0376             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0019+  0376             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0020+  0376             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0021+  0376             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0022+  0376             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0023+  0376             ; SOFTWARE.
0024+  0376             ;
0025+  0376                                 .MODULE disp
0026+  0376             
0027+  0376             CONFIG_PAGE         .EQU    3
0028+  0376             BRIGHT_PAGE         .EQU    1
0029+  0376             LED_PAGE            .EQU    0 
0030+  0376             
0031+  0376 CD C3 04    display_init        CALL    disp_clear
0032+  0379 1E 80                           LD      E, DISP_DEFAULT_BRIGHTNESS
0033+  037B CD B6 03                        CALL    disp_brightness
0034+  037E             
0035+  037E CD 8A 03                        CALL    disp_select_l
0036+  0381 CD 96 03                        CALL    disp_config
0037+  0384             
0038+  0384 CD 90 03                        CALL    disp_select_r
0039+  0387 CD 96 03                        CALL    disp_config
0040+  038A             
0041+  038A 3E 50       disp_select_l       LD      A, DL_ADDRESS
0042+  038C 32 05 FF                        LD      (display_address), A
0043+  038F C9                              RET
0044+  0390             
0045+  0390 3E 53       disp_select_r       LD      A, DR_ADDRESS
0046+  0392 32 05 FF                        LD      (display_address), A
0047+  0395 C9                              RET
0048+  0396             
0049+  0396 2E 03       disp_config         LD      L, CONFIG_PAGE
0050+  0398 CD F1 03                        CALL    disp_page
0051+  039B CD B6 05                        CALL    i2c_start
0052+  039E 3A 05 FF                        LD      A, (display_address)
0053+  03A1 CD 0F 06                        CALL    i2c_address_w
0054+  03A4 3E 00                           LD      A, 000h
0055+  03A6 CD 11 06                        CALL    i2c_write
0056+  03A9 3E 01                           LD      A, 001h         ; Turn display on
0057+  03AB CD 11 06                        CALL    i2c_write
0058+  03AE 3E 78                           LD      A, 078h         ; 0.020mA
0059+  03B0 CD 11 06                        CALL    i2c_write
0060+  03B3 C3 C5 05                        JP      i2c_stop
0061+  03B6             
0062+  03B6             ;
0063+  03B6             ; Sets the brightness for the display
0064+  03B6             ; Enter with E set to the desired brightness for all segments
0065+  03B6             ;
0066+  03B6 CD 8A 03    disp_brightness     CALL    disp_select_l
0067+  03B9 CD BF 03                        CALL    _set_bright
0068+  03BC CD 90 03                        CALL    disp_select_r
0069+  03BF 2E 01       _set_bright         LD      L, BRIGHT_PAGE
0070+  03C1 CD F1 03                        CALL    disp_page
0071+  03C4 2E 0C                           LD      L, 12
0072+  03C6 CD B6 05    _bright_loop        CALL    i2c_start
0073+  03C9 3A 05 FF                        LD      A, (display_address)
0074+  03CC CD 0F 06                        CALL    i2c_address_w
0075+  03CF 7D                              LD      A, L
0076+  03D0 3D                              DEC     A
0077+  03D1 CB 27                           SLA     A
0078+  03D3 CB 27                           SLA     A
0079+  03D5 CB 27                           SLA     A
0080+  03D7 CB 27                           SLA     A
0081+  03D9 CD 11 06                        CALL    i2c_write
0082+  03DC 26 10                           LD      H, 010h
0083+  03DE 7B          _bright_byte        LD      A, E
0084+  03DF CD 11 06                        CALL    i2c_write
0085+  03E2 25                              DEC     H
0086+  03E3 20 F9                           JR      NZ, _bright_byte
0087+  03E5 CD C5 05                        CALL    i2c_stop
0088+  03E8 2D                              DEC     L
0089+  03E9 20 DB                           JR      NZ, _bright_loop
0090+  03EB 2E 00                           LD      L, LED_PAGE
0091+  03ED CD F1 03                        CALL    disp_page
0092+  03F0 C9                              RET
0093+  03F1             
0094+  03F1             ; Set the Page number
0095+  03F1             ; Call with page number in L
0096+  03F1             ;
0097+  03F1             ; Uses A, B, C, D
0098+  03F1 CD 09 04    disp_page           CALL    disp_unlock
0099+  03F4 CD B6 05                        CALL    i2c_start
0100+  03F7 3A 05 FF                        LD      A, (display_address)
0101+  03FA CD 0F 06                        CALL    i2c_address_w
0102+  03FD 3E FD                           LD      A, 0FDh
0103+  03FF CD 11 06                        CALL    i2c_write
0104+  0402 7D                              LD      A, L
0105+  0403 CD 11 06                        CALL    i2c_write
0106+  0406 C3 C5 05                        JP      i2c_stop
0107+  0409             
0108+  0409 CD B6 05    disp_unlock         CALL    i2c_start           ; Must be called before switching pages
0109+  040C 3A 05 FF                        LD      A, (display_address)
0110+  040F CD 0F 06                        CALL    i2c_address_w
0111+  0412 3E FE                           LD      A, DISP_REG_CRWL
0112+  0414 CD 11 06                        CALL    i2c_write
0113+  0417 3E C5                           LD      A, DISP_UNLOCK
0114+  0419 CD 11 06                        CALL    i2c_write
0115+  041C C3 C5 05                        JP      i2c_stop
0116+  041F             
0117+  041F             ; Set the character at column A to brightness C
0118+  041F             ;
0119+  041F             ;
0120+  041F C5          disp_char_bright    PUSH    BC
0121+  0420 06 50                           LD      B, DL_ADDRESS
0122+  0422 FE 0C                           CP      12
0123+  0424 DA 2B 04                        JP      C, _bright_left
0124+  0427 06 53                           LD      B, DR_ADDRESS
0125+  0429 D6 0C                           SUB     12
0126+  042B 5F          _bright_left        LD      E, A
0127+  042C 78                              LD      A, B
0128+  042D 32 05 FF                        LD      (display_address), A
0129+  0430 2E 01                           LD      L, BRIGHT_PAGE
0130+  0432 CD F1 03                        CALL    disp_page
0131+  0435             
0132+  0435 CD B6 05                        CALL    i2c_start
0133+  0438 3A 05 FF                        LD      A, (display_address)
0134+  043B CD 0F 06                        CALL    i2c_address_w
0135+  043E 7B                              LD      A, E
0136+  043F CB 27                           SLA     A
0137+  0441 CB 27                           SLA     A
0138+  0443 CB 27                           SLA     A
0139+  0445 CB 27                           SLA     A
0140+  0447 CD 11 06                        CALL    i2c_write
0141+  044A E1                              POP     HL
0142+  044B 26 10                           LD      H, 010h
0143+  044D 7D          _bright_char_loop   LD      A, L
0144+  044E CD 11 06                        CALL    i2c_write
0145+  0451 25                              DEC     H
0146+  0452 20 F9                           JR      NZ, _bright_char_loop
0147+  0454 CD C5 05                        CALL    i2c_stop
0148+  0457             
0149+  0457 2E 00                           LD      L, LED_PAGE
0150+  0459 CD F1 03                        CALL    disp_page
0151+  045C C9                              RET
0152+  045D                                 
0153+  045D             ; Display a single character A at column C
0154+  045D             ;
0155+  045D             ; Returns with A pointing to next column
0156+  045D             ;
0157+  045D FE 20       disp_character      CP      32
0158+  045F F2 69 04                        JP      P, _not_control
0159+  0462             
0160+  0462 21 61 48    _invalid_char       LD      HL, INVALID_CHAR_BITMASK
0161+  0465 79                              LD      A, C
0162+  0466 C3 7E 04                        JP      disp_bitmask
0163+  0469             
0164+  0469 CB 7F       _not_control        BIT     7, A
0165+  046B C2 62 04                        JP      NZ, _invalid_char
0166+  046E D6 20                           SUB     32
0167+  0470             
0168+  0470 16 00                           LD      D, 0
0169+  0472 5F                              LD      E, A
0170+  0473 CB 23                           SLA     E                   ; Don't need to shift into D, since bit 7 is zero
0171+  0475 21 D1 04                        LD      HL, font  
0172+  0478 19                              ADD     HL, DE
0173+  0479 56                              LD      D, (HL)
0174+  047A 23                              INC     HL
0175+  047B 66                              LD      H, (HL)
0176+  047C 6A                              LD      L, D
0177+  047D 79                              LD      A, C
0178+  047E                                 ; Fall into disp_bitmask
0179+  047E             
0180+  047E             ; Display a bitmask in HL at column A (0 - 23)
0181+  047E             ;
0182+  047E             ; Returns with A pointing to next column
0183+  047E             ;
0184+  047E             ; Uses A, B, C, D, E
0185+  047E F5          disp_bitmask        PUSH    AF
0186+  047F 06 50                           LD      B, DL_ADDRESS
0187+  0481 FE 0C                           CP      12
0188+  0483 DA 8A 04                        JP      C, _disp_left
0189+  0486 06 53                           LD      B, DR_ADDRESS
0190+  0488 D6 0C                           SUB     12
0191+  048A 5F          _disp_left          LD      E, A
0192+  048B CD B6 05                        CALL    i2c_start
0193+  048E 78                              LD      A, B
0194+  048F CD 0F 06                        CALL    i2c_address_w
0195+  0492 7B                              LD      A, E
0196+  0493 CB 27                           SLA     A
0197+  0495 CD 11 06                        CALL    i2c_write
0198+  0498 7D                              LD      A, L
0199+  0499 CD 11 06                        CALL    i2c_write
0200+  049C 7C                              LD      A, H
0201+  049D CD 11 06                        CALL    i2c_write
0202+  04A0 CD C5 05                        CALL    i2c_stop
0203+  04A3 F1                              POP     AF
0204+  04A4 3C                              INC     A
0205+  04A5 C9                              RET
0206+  04A6             
0207+  04A6             
0208+  04A6 C3 7E 04                        JP      disp_bitmask
0209+  04A9             ;
0210+  04A9             ; Clear the display and show an inline string from column 0
0211+  04A9             ;
0212+  04A9 CD C3 04    disp_clear_inline   CALL    disp_clear
0213+  04AC AF                              XOR     A
0214+  04AD             ;
0215+  04AD             ; Display an inline string to column A->
0216+  04AD             ;
0217+  04AD E3          disp_inline         EX      (SP), HL
0218+  04AE CD B4 04                        CALL    disp_string
0219+  04B1 23                              INC     HL
0220+  04B2 E3                              EX      (SP), HL
0221+  04B3 C9                              RET
0222+  04B4             
0223+  04B4             ; Display a string pointed to by HL to column A->
0224+  04B4             ; Note string should be zero terminated...
0225+  04B4             ; Returns with HL pointing to the 0 terminator
0226+  04B4             ;
0227+  04B4 4F          disp_string         LD      C, A
0228+  04B5 7E                              LD      A, (HL)
0229+  04B6 B7                              OR      A
0230+  04B7 C2 BB 04                        JP      NZ, _char_ok
0231+  04BA C9                              RET
0232+  04BB             
0233+  04BB E5          _char_ok            PUSH    HL
0234+  04BC CD 5D 04                        CALL    disp_character
0235+  04BF E1                              POP     HL
0236+  04C0 23                              INC     HL
0237+  04C1 18 F1                           JR      disp_string
0238+  04C3             
0239+  04C3             ; Clear the display
0240+  04C3             ;
0241+  04C3 3E 00       disp_clear          LD      A, 0
0242+  04C5 21 00 00                        LD      HL, 0
0243+  04C8 CD 7E 04    _clear_loop         CALL    disp_bitmask
0244+  04CB FE 18                           CP      24
0245+  04CD C2 C8 04                        JP      NZ, _clear_loop
0246+  04D0 C9                              RET
0247+  04D1             
0248+  04D1                                 .MODULE main0182   04D1                                 .INCLUDE font.asm
0001+  04D1             ;
0002+  04D1             ; Font definition
0003+  04D1             ;
0004+  04D1             ;
0005+  04D1             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0006+  04D1             ;
0007+  04D1             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0008+  04D1             ;
0009+  04D1             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0010+  04D1             ; of this software and associated documentation files (the "Software"), to deal
0011+  04D1             ; in the Software without restriction, including without limitation the rights
0012+  04D1             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0013+  04D1             ; copies of the Software, and to permit persons to whom the Software is
0014+  04D1             ; furnished to do so, subject to the following conditions:
0015+  04D1             ; 
0016+  04D1             ; The above copyright notice and this permission notice shall be included in all
0017+  04D1             ; copies or substantial portions of the Software.
0018+  04D1             ; 
0019+  04D1             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0020+  04D1             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0021+  04D1             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0022+  04D1             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0023+  04D1             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0024+  04D1             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0025+  04D1             ; SOFTWARE.
0026+  04D1             ;
0027+  04D1             
0028+  04D1             INVALID_CHAR_BITMASK    .EQU 04861h
0029+  04D1             
0030+  04D1             font
0031+  04D1 00 00                           .dw     0000h
0032+  04D3 00 49                           .dw     4900h   ; !
0033+  04D5 02 02                           .dw     0202h   ; "
0034+  04D7 CE 12                           .dw     12ceh   ; #
0035+  04D9 ED 12                           .dw     12edh   ; $
0036+  04DB E4 2D                           .dw     2de4h   ; %
0037+  04DD 59 0B                           .dw     0b59h   ; &
0038+  04DF 00 02                           .dw     0200h   ; '
0039+  04E1 00 0C                           .dw     0c00h   ; (
0040+  04E3 00 21                           .dw     2100h   ; )
0041+  04E5 C0 3F                           .dw     3fc0h   ; *
0042+  04E7 C0 12                           .dw     12c0h   ; +
0043+  04E9 00 20                           .dw     2000h   ; ,
0044+  04EB C0 00                           .dw     00c0h   ; -
0045+  04ED 00 40                           .dw     4000h   ; .
0046+  04EF 00 24                           .dw     2400h   ; /
0047+  04F1             
0048+  04F1 3F 24                           .dw     243fh   ; 0
0049+  04F3 06 04                           .dw     0406h   ; 1
0050+  04F5 DB 00                           .dw     00dbh   ; 2
0051+  04F7 8F 00                           .dw     008fh   ; 3
0052+  04F9 E6 00                           .dw     00e6h   ; 4
0053+  04FB 69 08                           .dw     0869h   ; 5
0054+  04FD FD 00                           .dw     00fdh   ; 6
0055+  04FF 01 14                           .dw     1401h   ; 7
0056+  0501 FF 00                           .dw     00ffh   ; 8
0057+  0503 EF 00                           .dw     00efh   ; 9
0058+  0505 40 00                           .dw     0040h   ; :
0059+  0507 00 22                           .dw     2200h   ; ;
0060+  0509 40 0C                           .dw     0c40h   ; <
0061+  050B C8 00                           .dw     00c8h   ; = 
0062+  050D 80 21                           .dw     2180h   ; >
0063+  050F 83 50                           .dw     5083h   ; ?
0064+  0511             
0065+  0511 BB 02                           .dw     02bbh   ; @
0066+  0513 F7 00                           .dw     00f7h   ; A
0067+  0515 8F 12                           .dw     128fh   ; B
0068+  0517 39 00                           .dw     0039h   ; C
0069+  0519 0F 12                           .dw     120fh   ; D
0070+  051B 79 00                           .dw     0079h   ; E
0071+  051D 71 00                           .dw     0071h   ; F
0072+  051F BD 00                           .dw     00bdh   ; G
0073+  0521 F6 00                           .dw     00f6h   ; H
0074+  0523 09 12                           .dw     1209h   ; I
0075+  0525 1E 00                           .dw     001eh   ; J
0076+  0527 70 0C                           .dw     0c70h   ; K
0077+  0529 38 00                           .dw     0038h   ; L
0078+  052B 36 05                           .dw     0536h   ; M
0079+  052D 36 09                           .dw     0936h   ; N
0080+  052F 3F 00                           .dw     003fh   ; O
0081+  0531             
0082+  0531 F3 00                           .dw     00f3h   ; P
0083+  0533 3F 08                           .dw     083fh   ; Q
0084+  0535 F3 08                           .dw     08f3h   ; R
0085+  0537 ED 00                           .dw     00edh   ; S
0086+  0539 01 12                           .dw     1201h   ; T
0087+  053B 3E 00                           .dw     003eh   ; U
0088+  053D 30 24                           .dw     2430h   ; V
0089+  053F 36 28                           .dw     2836h   ; W
0090+  0541 00 2D                           .dw     2d00h   ; X
0091+  0543 EE 00                           .dw     00eeh   ; Y
0092+  0545 09 24                           .dw     2409h   ; Z
0093+  0547 39 00                           .dw     0039h   ; [
0094+  0549 00 09                           .dw     0900h   ; \
0095+  054B 0F 00                           .dw     000fh   ; ]
0096+  054D 00 28                           .dw     2800h   ; ^
0097+  054F 08 00                           .dw     0008h   ; _
0098+  0551             
0099+  0551 00 01                           .dw     0100h   ; `
0100+  0553 8C 20                           .dw     208ch   ; a
0101+  0555 78 08                           .dw     0878h   ; b
0102+  0557 D8 00                           .dw     00d8h   ; c
0103+  0559 8E 20                           .dw     208eh   ; d 
0104+  055B 58 20                           .dw     2058h   ; e 
0105+  055D C0 14                           .dw     14c0h   ; f
0106+  055F 8E 04                           .dw     048eh   ; g
0107+  0561 70 10                           .dw     1070h   ; h
0108+  0563 00 10                           .dw     1000h   ; i
0109+  0565 10 22                           .dw     2210h   ; j
0110+  0567 00 1E                           .dw     1e00h   ; k
0111+  0569 00 12                           .dw     1200h   ; l
0112+  056B D4 10                           .dw     10d4h   ; m
0113+  056D 50 10                           .dw     1050h   ; n
0114+  056F DC 00                           .dw     00dch   ; o
0115+  0571             
0116+  0571 70 01                           .dw     0170h   ; p
0117+  0573 86 04                           .dw     0486h   ; q
0118+  0575 50 00                           .dw     0050h   ; r
0119+  0577 88 08                           .dw     0888h   ; s
0120+  0579 78 00                           .dw     0078h   ; t
0121+  057B 1C 00                           .dw     001ch   ; u
0122+  057D 10 20                           .dw     2010h   ; v
0123+  057F 14 28                           .dw     2814h   ; w
0124+  0581 00 2D                           .dw     2d00h   ; x
0125+  0583 8E 02                           .dw     028eh   ; y
0126+  0585 48 20                           .dw     2048h   ; z
0127+  0587 49 21                           .dw     2149h   ; {
0128+  0589 00 12                           .dw     1200h   ; |
0129+  058B 89 0C                           .dw     0c89h   ; }
0130+  058D C0 24                           .dw     24c0h   ; ~
0131+  058F 00 00                           .dw     0000h   ; 0183   0591                                 .INCLUDE  i2c.asm
0001+  0591             ; ============================================ I2C Routines =================================================
0002+  0591             ; Software driven I2C for Z80 PIO
0003+  0591             ;
0004+  0591             ; Assume I2C clock is on Port B bit 6
0005+  0591             ;            data is on Port B bit 7
0006+  0591             ;
0007+  0591             ;
0008+  0591             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0009+  0591             ;
0010+  0591             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0011+  0591             ;
0012+  0591             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0013+  0591             ; of this software and associated documentation files (the "Software"), to deal
0014+  0591             ; in the Software without restriction, including without limitation the rights
0015+  0591             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0016+  0591             ; copies of the Software, and to permit persons to whom the Software is
0017+  0591             ; furnished to do so, subject to the following conditions:
0018+  0591             ; 
0019+  0591             ; The above copyright notice and this permission notice shall be included in all
0020+  0591             ; copies or substantial portions of the Software.
0021+  0591             ; 
0022+  0591             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0023+  0591             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0024+  0591             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0025+  0591             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0026+  0591             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0027+  0591             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0028+  0591             ; SOFTWARE.
0029+  0591             ;
0030+  0591                                 .MODULE i2c
0031+  0591             
0032+  0591 3E CF       init_portb          LD      A, PIO_MODE_3           ; Port B mode 3
0033+  0593 32 00 FF                        LD      (port_b_mode), A
0034+  0596 D3 13                           OUT     (PIO_B_CTRL), A
0035+  0598             
0036+  0598 3E FF                           LD      A, PORT_B_IOMASK        ;
0037+  059A 32 01 FF                        LD      (port_b_dir), A
0038+  059D D3 13                           OUT     (PIO_B_CTRL), A
0039+  059F             
0040+  059F 3E 3F                           LD      A, 03Fh                 ; All bits high apart from D7, D6
0041+  05A1 32 02 FF                        LD      (port_b_data),A
0042+  05A4 D3 11                           OUT     (PIO_B_DATA), A         ; Changing D7 or D6 to an output will drive the lines low
0043+  05A6 C9                              RET
0044+  05A7             
0045+  05A7             ; Reset the bus
0046+  05A7             ;
0047+  05A7             ; Uses A, B, D
0048+  05A7 06 0A       i2c_bus_reset       LD      B, 0ah          ; ten cycles
0049+  05A9 CD BC 06    _loop_b             CALL    i2c_scl_cycle
0050+  05AC 10 FB                           DJNZ    _loop_b
0051+  05AE CD AC 06                        CALL    i2c_scl_high
0052+  05B1 06 F0                           LD      B, 0F0h
0053+  05B3 10 FE                           DJNZ    $
0054+  05B5 C9                              RET
0055+  05B6             
0056+  05B6             ;
0057+  05B6             ; Uses A
0058+  05B6 CD 8C 06    i2c_start           CALL    i2c_sda_high
0059+  05B9 CD AC 06                        CALL    i2c_scl_high
0060+  05BC CD 9C 06                        CALL    i2c_sda_low     ; Drive data low
0061+  05BF C3 7C 06                        JP      i2c_scl_low     ; Drive clock low
0062+  05C2             
0063+  05C2             
0064+  05C2             ;
0065+  05C2             ; Read a byte from Device address H, Register L into A
0066+  05C2             ; Calls i2c_start, sets address, reads byte and then calls i2c_stop
0067+  05C2             ; Returns With Carry SET and A containing the register value, or Carry CLEAR if no acknowledge
0068+  05C2             ; Uses A, B, C, D, H, L
0069+  05C2             ; Preserves H, L
0070+  05C2 CD DC 05    i2c_read_byte       CALL    i2c_read_from
0071+  05C5                                 ; Fall through into stop
0072+  05C5                             
0073+  05C5             ;
0074+  05C5             ; Uses A
0075+  05C5 CD 9C 06    i2c_stop            CALL    i2c_sda_low     ; Drive data low
0076+  05C8 CD AC 06                        CALL    i2c_scl_high
0077+  05CB C3 8C 06                        JP      i2c_sda_high
0078+  05CE             
0079+  05CE             ; Write a byte in C to Device address H, register L
0080+  05CE             ; Returns with Carry SET if OK, CLEAR if no acknowledgement
0081+  05CE             ; Calls i2c_stop when done..
0082+  05CE             ;
0083+  05CE             ; Preserves H, L
0084+  05CE C5          i2c_write_byte      PUSH    BC
0085+  05CF CD FD 05                        CALL    i2c_write_to
0086+  05D2 C1                              POP     BC
0087+  05D3 D2 C5 05                        JP      NC, i2c_stop
0088+  05D6 79                              LD      A, C
0089+  05D7 CD 11 06                        CALL    i2c_write
0090+  05DA 18 E9                           JR      i2c_stop
0091+  05DC                                 
0092+  05DC             ;
0093+  05DC             ; Read a byte from Device address H, Register L
0094+  05DC             ; Calls i2c_start, but does NOT call i2c_stop
0095+  05DC             ; Returns With Carry SET and A containing the register value, or Carry CLEAR if no acknowledge
0096+  05DC             ; Uses A, B, C, D, H, L
0097+  05DC             ; Preserves H, L
0098+  05DC CD B6 05    i2c_read_from       CALL    i2c_start
0099+  05DF 7C                              LD      A, H
0100+  05E0 CD 0F 06                        CALL    i2c_address_w
0101+  05E3 30 17                           JR      NC, _read_end
0102+  05E5 7D                              LD      A, L
0103+  05E6 CD 11 06                        CALL    i2c_write
0104+  05E9 30 11                           JR      NC, _read_end
0105+  05EB 06 32                           LD      B, 50
0106+  05ED 10 FE       _read_pause         DJNZ    _read_pause
0107+  05EF CD B6 05                        CALL    i2c_start
0108+  05F2 7C                              LD      A, H
0109+  05F3 CD 09 06                        CALL    i2c_address_r
0110+  05F6 30 04                           JR      NC, _read_end
0111+  05F8 CD 1E 06                        CALL    i2c_read
0112+  05FB 37                              SCF
0113+  05FC C9          _read_end           RET
0114+  05FD             
0115+  05FD             
0116+  05FD             ;
0117+  05FD             ; Prepare to write to Device address H, Register L
0118+  05FD             ; Calls i2c_start, but does NOT call i2c_stop
0119+  05FD             ; Returns with Carry SET if OK, CLEAR if no acknowledgement
0120+  05FD             ;
0121+  05FD             ; Preserves H, L
0122+  05FD CD B6 05    i2c_write_to        CALL    i2c_start
0123+  0600 7C                              LD      A, H
0124+  0601 CD 0F 06                        CALL    i2c_address_w
0125+  0604 D0                              RET     NC
0126+  0605 7D                              LD      A, L
0127+  0606 C3 11 06                        JP      i2c_write
0128+  0609             
0129+  0609             ; Start reading from device address held in A
0130+  0609             ;
0131+  0609             ; Uses A, B, C, D
0132+  0609 CB 27       i2c_address_r       SLA     A
0133+  060B F6 01                           OR      1
0134+  060D 18 02                           JR      i2c_write
0135+  060F             
0136+  060F             ; Start writing to device address held in A
0137+  060F             ;
0138+  060F             ; Uses A, B, C, D
0139+  060F CB 27       i2c_address_w       SLA     A
0140+  0611             
0141+  0611             ; Write A as a byte to i2c bus
0142+  0611             ; Returns Carry CLEAR if no acknowledge
0143+  0611             ;
0144+  0611             ; Uses A, B, C, D
0145+  0611 CD 39 06    i2c_write           CALL    i2c_send_byte
0146+  0614 CB 7A                           BIT     I2C_DATA_BIT, D     ; D contains acknowledge bit
0147+  0616 37                              SCF
0148+  0617 C8                              RET     Z               ; Return with carry set if acknowledge bit is low
0149+  0618             
0150+  0618 CD C5 05                        CALL    i2c_stop        ; Stop bus if error
0151+  061B 37                              SCF
0152+  061C 3F                              CCF
0153+  061D C9                              RET                     ; Clear carry if acknowledge is high
0154+  061E             
0155+  061E             ; Read byte from i2C into A, without ACK
0156+  061E             ;
0157+  061E             ; Uses A, B, C, D
0158+  061E 06 08       i2c_read            LD      B, 8h
0159+  0620 DB 11       _loop_r             IN      A, (PIO_B_DATA)
0160+  0622 37                              SCF
0161+  0623 CB 7F                           BIT     I2C_DATA_BIT, A
0162+  0625 20 01                           JR      NZ, _data_high
0163+  0627 3F                              CCF
0164+  0628 CB 11       _data_high          RL      C
0165+  062A CD BC 06                        CALL    i2c_scl_cycle
0166+  062D 10 F1                           DJNZ    _loop_r
0167+  062F                                 ; CALL    i2c_scl_cycle
0168+  062F             
0169+  062F 79                              LD      A, C
0170+  0630 C9                              RET
0171+  0631             
0172+  0631             ;
0173+  0631             ; Send an ACK..
0174+  0631             ;
0175+  0631 CD 9C 06    i2c_ack             CALL    i2c_sda_low
0176+  0634 CD BC 06                        CALL    i2c_scl_cycle
0177+  0637 18 53                           JR      i2c_sda_high
0178+  0639             
0179+  0639             ;
0180+  0639             ; Send a byte in A, returning the ACK state in D
0181+  0639             ; Uses A, B, C,
0182+  0639             ;
0183+  0639 E5          i2c_send_byte       PUSH    HL
0184+  063A D5                              PUSH    DE
0185+  063B 2A 00 FF                        LD      HL, (port_b_mode)           ; L = port_b_mode, H = port_b_dir
0186+  063E 57                              LD      D, A
0187+  063F                                 
0188+  063F 3E 3F                           LD      A, ~(I2C_DATA_MASK|I2C_CLK_MASK)           ; Set SDA and SCL (port_b_dir bit) LOW
0189+  0641 A4                              AND     H
0190+  0642 CB 27                           SLA     A
0191+  0644 67                              LD      H, A
0192+  0645             
0193+  0645 0E 13                           LD      C, PIO_B_CTRL
0194+  0647 06 08                           LD      B, 8
0195+  0649             
0196+  0649 1E 40                           LD      E, I2C_CLK_MASK
0197+  064B             
0198+  064B 7C          _fast_loop          LD      A, H
0199+  064C CB 22                           SLA     D
0200+  064E CB 1F                           RR      A
0201+  0650 ED 69                           OUT     (C),L
0202+  0652 D3 13                           OUT     (PIO_B_CTRL), A
0203+  0654             
0204+  0654 B3                              OR      E
0205+  0655 ED 69                           OUT     (C), L
0206+  0657 D3 13                           OUT     (PIO_B_CTRL), A                 ; Clock high
0207+  0659             
0208+  0659 AB                              XOR     E
0209+  065A ED 69                           OUT     (C), L
0210+  065C D3 13                           OUT     (PIO_B_CTRL),A                  ; Clock low
0211+  065E 10 EB                           DJNZ    _fast_loop
0212+  0660             
0213+  0660 7C                              LD      A, H
0214+  0661 37                              SCF
0215+  0662 CB 1F                           RR      A
0216+  0664 ED 69                           OUT     (C),L                           ; Release SDA
0217+  0666 D3 13                           OUT     (PIO_B_CTRL), A
0218+  0668             
0219+  0668 B3                              OR      E
0220+  0669 ED 69                           OUT     (C), L
0221+  066B D3 13                           OUT     (PIO_B_CTRL), A                 ; Clock high
0222+  066D             
0223+  066D ED 69                           OUT     (C), L
0224+  066F AB                              XOR     E
0225+  0670 6F                              LD      L, A
0226+  0671 32 01 FF                        LD      (port_b_dir), A
0227+  0674             
0228+  0674 DB 11                           IN      A, (PIO_B_DATA)                 ; Read ACK
0229+  0676 ED 69                           OUT     (C),L                           ; Clock low
0230+  0678             
0231+  0678 D1                              POP     DE
0232+  0679 E1                              POP     HL
0233+  067A 57                              LD      D, A
0234+  067B C9                              RET
0235+  067C             
0236+  067C             ; SCL/SDA toggle routines
0237+  067C             ;
0238+  067C             ; All use A
0239+  067C 3A 00 FF    i2c_scl_low         LD      A, (port_b_mode)
0240+  067F D3 13                           OUT     (PIO_B_CTRL), A
0241+  0681             
0242+  0681 3A 01 FF                        LD      A, (port_b_dir)
0243+  0684 CB B7                           RES     I2C_CLK_BIT, A
0244+  0686 D3 13                           OUT     (PIO_B_CTRL), A
0245+  0688 32 01 FF                        LD      (port_b_dir), A
0246+  068B C9                              RET
0247+  068C             
0248+  068C 3A 00 FF    i2c_sda_high        LD      A, (port_b_mode)
0249+  068F D3 13                           OUT     (PIO_B_CTRL), A
0250+  0691             
0251+  0691 3A 01 FF                        LD      A, (port_b_dir)
0252+  0694 CB FF                           SET     I2C_DATA_BIT, A
0253+  0696 D3 13                           OUT     (PIO_B_CTRL), A
0254+  0698 32 01 FF                        LD      (port_b_dir), A
0255+  069B C9                              RET
0256+  069C             
0257+  069C 3A 00 FF    i2c_sda_low         LD      A, (port_b_mode)
0258+  069F D3 13                           OUT     (PIO_B_CTRL), A
0259+  06A1             
0260+  06A1 3A 01 FF                        LD      A, (port_b_dir)
0261+  06A4 CB BF                           RES     I2C_DATA_BIT, A
0262+  06A6 D3 13                           OUT     (PIO_B_CTRL), A
0263+  06A8 32 01 FF                        LD      (port_b_dir), A
0264+  06AB C9                              RET
0265+  06AC             
0266+  06AC 3A 00 FF    i2c_scl_high        LD      A, (port_b_mode)
0267+  06AF D3 13                           OUT     (PIO_B_CTRL), A
0268+  06B1             
0269+  06B1 3A 01 FF                        LD      A, (port_b_dir)
0270+  06B4 CB F7                           SET     I2C_CLK_BIT, A
0271+  06B6 D3 13                           OUT     (PIO_B_CTRL), A
0272+  06B8 32 01 FF                        LD      (port_b_dir), A
0273+  06BB C9                              RET
0274+  06BC             
0275+  06BC C5          i2c_scl_cycle       PUSH   BC
0276+  06BD 01 13 00                        LD     BC, PIO_B_CTRL
0277+  06C0 3A 00 FF                        LD     A, (port_b_mode)
0278+  06C3 57                              LD     D, A
0279+  06C4 3A 01 FF                        LD     A, (port_b_dir)
0280+  06C7             
0281+  06C7 CB B7                           RES    I2C_CLK_BIT, A
0282+  06C9 32 01 FF                        LD     (port_b_dir), A
0283+  06CC ED 51                           OUT    (C), D
0284+  06CE D3 13                           OUT    (PIO_B_CTRL), A
0285+  06D0                                 
0286+  06D0 CB F7                           SET    I2C_CLK_BIT, A
0287+  06D2 ED 51                           OUT    (C), D
0288+  06D4 D3 13                           OUT    (PIO_B_CTRL), A
0289+  06D6                                 
0290+  06D6 DB 11                           IN     A, (PIO_B_DATA)
0291+  06D8 ED 51                           OUT    (C), D
0292+  06DA 57                              LD     D, A
0293+  06DB 3A 01 FF                        LD     A, (port_b_dir)
0294+  06DE D3 13                           OUT    (PIO_B_CTRL), A
0295+  06E0 C1                              POP    BC
0296+  06E1 C9                              RET
0297+  06E2             
0298+  06E2                                 .MODULE main
0184   06E2                                 .INCLUDE  io.asm
0001+  06E2             ;
0002+  06E2             ; I/O routines.. specifically keyboard and serial
0003+  06E2             ;
0004+  06E2             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0005+  06E2             ;
0006+  06E2             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0007+  06E2             ;
0008+  06E2             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0009+  06E2             ; of this software and associated documentation files (the "Software"), to deal
0010+  06E2             ; in the Software without restriction, including without limitation the rights
0011+  06E2             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0012+  06E2             ; copies of the Software, and to permit persons to whom the Software is
0013+  06E2             ; furnished to do so, subject to the following conditions:
0014+  06E2             ; 
0015+  06E2             ; The above copyright notice and this permission notice shall be included in all
0016+  06E2             ; copies or substantial portions of the Software.
0017+  06E2             ; 
0018+  06E2             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0019+  06E2             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0020+  06E2             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0021+  06E2             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0022+  06E2             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0023+  06E2             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0024+  06E2             ; SOFTWARE.
0025+  06E2             ;
0026+  06E2             
0027+  06E2             
0028+  06E2 21 08 FF    keyboard_init       LD      HL, keyboard_state
0029+  06E5 06 20                           LD      B, io_data_end - keyboard_state
0030+  06E7 AF                              XOR     A
0031+  06E8 77          _init_loop          LD      (HL),A
0032+  06E9 23                              INC     HL
0033+  06EA 05                              DEC     B
0034+  06EB 20 FB                           JR      NZ, _init_loop
0035+  06ED AF                              XOR     A
0036+  06EE 32 27 FF                        LD      (input_size),A
0037+  06F1 32 26 FF                        LD      (input_free),A
0038+  06F4 32 25 FF                        LD      (input_pos),A
0039+  06F7 C9                              RET
0040+  06F8             
0041+  06F8             ; Poll the keyboard, adding raw codes to the keyboard_state buffer, and decoded characters to the input_buffer
0042+  06F8             ;
0043+  06F8 01 00 FD    keyboard_poll       LD      BC, 0FD00h          ; Check shift key
0044+  06FB 3A 12 FF                        LD      A, (key_shift_state)
0045+  06FE E6 FC                           AND     ~(KEY_SHIFT_BIT | KEY_CTRL_BIT)
0046+  0700 57                              LD      D, A
0047+  0701             
0048+  0701 ED 78                           IN      A, (C)
0049+  0703 E6 20                           AND     020h
0050+  0705 20 04                           JR      NZ, _check_ctrl_key
0051+  0707 3E 01                           LD      A, KEY_SHIFT_BIT
0052+  0709 B2                              OR      D
0053+  070A 57                              LD      D, A
0054+  070B             
0055+  070B 01 00 FE    _check_ctrl_key     LD      BC, 0FE00h          ; Keyboard row 0
0056+  070E ED 78                           IN      A, (C)
0057+  0710 E6 10                           AND     010h
0058+  0712 20 04                           JR      NZ, _store_modifiers
0059+  0714 3E 02                           LD      A, KEY_CTRL_BIT
0060+  0716 B2                              OR      D
0061+  0717 57                              LD      D, A
0062+  0718             
0063+  0718 7A          _store_modifiers    LD      A, D
0064+  0719 32 12 FF                        LD      (key_shift_state), A
0065+  071C             
0066+  071C             
0067+  071C 21 86 08                        LD      HL, keyboard
0068+  071F ED 78       _poll_loop          IN      A, (C)              ; BC -> Keyboard row port..
0069+  0721 16 01                           LD      D, 1                ; D -> Current Bit
0070+  0723 5F                              LD      E, A                ; E -> Key row bit set
0071+  0724 22 10 FF    _next_key           LD      (keyboard_pos), HL
0072+  0727 A2                              AND     D
0073+  0728 20 3F                           JR      NZ, _released
0074+  072A                                                             ; Key is pressed... add it to state buffer
0075+  072A C5                              PUSH    BC
0076+  072B 7E                              LD      A, (HL)             ; Raw key code in A
0077+  072C             
0078+  072C 21 08 FF                        LD      HL, keyboard_state
0079+  072F 06 08                           LD      B, _key_state_size
0080+  0731 BE          _check_pressed      CP      (HL)
0081+  0732 CA 82 07                        JP      Z, _do_nothing      ; Key already in state table - nothing to do..
0082+  0735 23                              INC     HL
0083+  0736 05                              DEC     B
0084+  0737 20 F8                           JR      NZ, _check_pressed
0085+  0739                                                             ; Key wasn't pressed, so add it to the first free slot
0086+  0739 21 08 FF                        LD      HL, keyboard_state
0087+  073C 06 08                           LD      B, _key_state_size
0088+  073E 4F                              LD      C, A
0089+  073F AF                              XOR     A
0090+  0740 BE          _find_free          CP      (HL)
0091+  0741 28 07                           JR      Z, _key_pressed
0092+  0743 23                              INC     HL
0093+  0744 05                              DEC     B
0094+  0745 20 F9                           JR      NZ, _find_free
0095+  0747 C3 82 07                        JP      _do_nothing         ; No free slots, so ignore the key
0096+  074A             
0097+  074A 71          _key_pressed        LD      (HL), C             ; Found free slot, store the raw key code
0098+  074B             
0099+  074B                                 ; Reset repeat counter       
0100+  074B             
0101+  074B 2A 10 FF                        LD      HL, (keyboard_pos)  ; Get the current keyboard character location
0102+  074E 01 30 00                        LD      BC, _keyboard_size
0103+  0751 3A 12 FF                        LD      A, (key_shift_state)
0104+  0754 A7                              AND     A
0105+  0755 28 04                           JR      Z, _got_keycode
0106+  0757 09          _modifier_offset    ADD     HL, BC
0107+  0758 3D                              DEC     A
0108+  0759 20 FC                           JR      NZ, _modifier_offset
0109+  075B             
0110+  075B 7E          _got_keycode        LD      A, (HL) 
0111+  075C 32 13 FF                        LD      (last_keycode), A
0112+  075F CD B2 07                        CALL    _store_key
0113+  0762 AF                              XOR     A
0114+  0763 32 14 FF                        LD      (key_repeat_time), A
0115+  0766             
0116+  0766 C1                              POP     BC
0117+  0767 18 1A                           JR      _poll_next
0118+  0769             
0119+  0769                                                             ; Key is not pressed... remove it from the state buffer if it was pressed (key up event)
0120+  0769                                                             ; TODO: This is rather inefficient...
0121+  0769 C5          _released           PUSH    BC
0122+  076A 7E                              LD      A, (HL)             ; Raw key code in A
0123+  076B A7                              AND     A
0124+  076C 28 14                           JR      Z, _do_nothing      ; Ignore character zero
0125+  076E             
0126+  076E 21 08 FF                        LD      HL, keyboard_state
0127+  0771 06 08                           LD      B, _key_state_size
0128+  0773 BE          _check_released     CP      (HL)
0129+  0774 28 06                           JR      Z, _handle_release
0130+  0776 23                              INC     HL
0131+  0777 05                              DEC     B
0132+  0778 20 F9                           JR      NZ, _check_released
0133+  077A 18 06                           JR      _do_nothing         ; Code not in state buffer, not released
0134+  077C             
0135+  077C 4F          _handle_release     LD      C, A
0136+  077D AF                              XOR     A
0137+  077E 77                              LD      (HL), A             ; Remove it from the buffer 
0138+  077F 32 13 FF                        LD      (last_keycode), A
0139+  0782                                                             ; TODO: We should probably tell someone about this...
0140+  0782 C1          _do_nothing         POP     BC
0141+  0783             
0142+  0783 2A 10 FF    _poll_next          LD      HL, (keyboard_pos)
0143+  0786 7B                              LD      A, E                ; Get the bitmask back
0144+  0787 23                              INC     HL
0145+  0788 CB 22                           SLA     D
0146+  078A CB 72                           BIT     6, D
0147+  078C CA 24 07                        JP      Z, _next_key
0148+  078F             
0149+  078F CB 00                           RLC     B                   ; Move to the next key row
0150+  0791 3E FE                           LD      A, 0FEh
0151+  0793 B8                              CP      B
0152+  0794 C2 1F 07                        JP      NZ, _poll_loop
0153+  0797             
0154+  0797 3A 13 FF                        LD      A, (last_keycode)
0155+  079A A7                              AND     A
0156+  079B C8                              RET     Z
0157+  079C 3A 14 FF                        LD      A, (key_repeat_time)
0158+  079F 3C                              INC     A
0159+  07A0 32 14 FF                        LD      (key_repeat_time), A
0160+  07A3 FE 28                           CP      KEY_REPEAT_DELAY
0161+  07A5 28 08                           JR      Z, _do_repeat
0162+  07A7 FE 2F                           CP      KEY_REPEAT_AFTER
0163+  07A9 C0                              RET     NZ
0164+  07AA 3E 28                           LD      A, KEY_REPEAT_DELAY
0165+  07AC 32 14 FF                        LD      (key_repeat_time),A
0166+  07AF 3A 13 FF    _do_repeat          LD      A, (last_keycode)
0167+  07B2             
0168+  07B2             
0169+  07B2             ; Store the decoded keycode in A to the relevant buffer...
0170+  07B2 4F          _store_key          LD      C, A
0171+  07B3 E6 F8                           AND     CTRL_KEY_MASK       ; Check for special control characters 
0172+  07B5 FE 90                           CP      CTRL_KEY_CHECK
0173+  07B7 20 05                           JR      NZ, _get_key
0174+  07B9             
0175+  07B9 79                              LD      A, C                ; Store them in a separate location
0176+  07BA 32 29 FF                        LD      (control_key_pressed), A
0177+  07BD C9                              RET
0178+  07BE                                                             ; Write the character to the input buffer
0179+  07BE 79          _get_key            LD      A, C                ; Get the actual character...
0180+  07BF A7                              AND     A                   ; Skip blank character codes
0181+  07C0 C8                              RET     Z
0182+  07C1             
0183+  07C1 6F                              LD      L, A                ; Store it in L
0184+  07C2             
0185+  07C2 3A 27 FF                        LD      A, (input_size)     ; Now check we have space
0186+  07C5 FE 10                           CP      _input_buffer_size
0187+  07C7 C8                              RET     Z
0188+  07C8             
0189+  07C8 3C                              INC     A
0190+  07C9 32 27 FF                        LD      (input_size), A
0191+  07CC             
0192+  07CC 06 00                           LD      B, 0
0193+  07CE 3A 26 FF                        LD      A, (input_free)
0194+  07D1 4F                              LD      C, A
0195+  07D2 7D                              LD      A, L                ; Get the character from L
0196+  07D3 21 15 FF                        LD      HL, input_buffer
0197+  07D6 09                              ADD     HL, BC
0198+  07D7 77                              LD      (HL), A             ; Store the character
0199+  07D8             
0200+  07D8 0C                              INC     C                   ; Point to next byte in input
0201+  07D9 3E 0F                           LD      A, 0Fh
0202+  07DB A1                              AND     C
0203+  07DC 32 26 FF                        LD      (input_free), A
0204+  07DF C9                              RET
0205+  07E0             
0206+  07E0             ;
0207+  07E0             ; Reads the next available character in A, returning that or 0 if none are available
0208+  07E0             ; Z flag is set if no character
0209+  07E0             ; Uses HL, BC, A
0210+  07E0 3A 27 FF    read_character      LD      A, (input_size)
0211+  07E3 A7                              AND     A
0212+  07E4 C8                              RET     Z
0213+  07E5             
0214+  07E5 F3                              DI                          ; Make sure we don't get into a race condition..
0215+  07E6 3A 27 FF                        LD      A, (input_size)
0216+  07E9 3D                              DEC     A
0217+  07EA 32 27 FF                        LD      (input_size),A
0218+  07ED 3A 25 FF                        LD      A, (input_pos)
0219+  07F0 4F                              LD      C, A
0220+  07F1 3C                              INC     A
0221+  07F2 E6 0F                           AND     0Fh
0222+  07F4 32 25 FF                        LD      (input_pos),A
0223+  07F7 06 00                           LD      B, 0
0224+  07F9 21 15 FF                        LD      HL, input_buffer
0225+  07FC 09                              ADD     HL, BC
0226+  07FD 7E                              LD      A, (HL)
0227+  07FE B7                              OR      A
0228+  07FF FB                              EI
0229+  0800 C9                              RET
0230+  0801                                 
0231+  0801             ;;
0232+  0801             ; D = Octave 2-6
0233+  0801             ; E = Note 0-11
0234+  0801             ; C = 1-15 duration, ~tenths of a second
0235+  0801             ;
0236+  0801 3E 07       play_note           LD      A, 7
0237+  0803 92                              SUB     D
0238+  0804 16 00                           LD      D, 0
0239+  0806 21 48 08                        LD      HL, _note_table
0240+  0809 19                              ADD     HL, DE
0241+  080A 19                              ADD     HL, DE
0242+  080B             
0243+  080B 5E                              LD      E, (HL)
0244+  080C 23                              INC     HL
0245+  080D 56                              LD      D, (HL)
0246+  080E             
0247+  080E A7          _note_octave        AND     A
0248+  080F 28 07                           JR      Z, _note_shifted
0249+  0811             
0250+  0811 CB 3A                           SRL     D
0251+  0813 CB 1B                           RR      E
0252+  0815 3D                              DEC     A
0253+  0816 18 F6                           JR      _note_octave
0254+  0818             
0255+  0818 41          _note_shifted       LD      B, C
0256+  0819 4F                              LD      C, A        ; A is zero from previous octave calc
0257+  081A CB 20                           SLA     B    
0258+  081C CB 20                           SLA     B    
0259+  081E CB 20                           SLA     B    
0260+  0820 CB 20                           SLA     B           ; Now BC = 4096 * C
0261+  0822             
0262+  0822 DB 24                           IN      A, (AUDIO_PORT)
0263+  0824 32 35 08                        LD      (_tone_val+1), A
0264+  0827 F3                              DI
0265+  0828             
0266+  0828             _tone_loop          ; 186 T-states          
0267+  0828 19                              ADD     HL, DE              ; 11
0268+  0829 1F                              RRA                         ; 4   Carry into bit 7
0269+  082A CB 2F                           SRA     A                   ; 8   Copy to bit 6
0270+  082C CB 2F                           SRA     A                   ; 8   ..5
0271+  082E CB 2F                           SRA     A                   ; 8   ..4
0272+  0830 CB 2F                           SRA     A                   ; 8   ..3
0273+  0832             
0274+  0832 E6 08                           AND     AUDIO_MASK          ; 7
0275+  0834 EE 00       _tone_val           XOR     0                   ; 7
0276+  0836 32 35 08                        LD      (_tone_val+1), A    ; 13
0277+  0839             
0278+  0839 D3 24                           OUT     (AUDIO_PORT),A      ; 12
0279+  083B             
0280+  083B 78                              LD      A, B                ; 4
0281+  083C 06 05                           LD      B, 5                ; 7
0282+  083E 10 FE                           DJNZ    $                   ; 4 * 13 + 7 = 59
0283+  0840 47                              LD      B, A                ; 4
0284+  0841             
0285+  0841 0B                              DEC     BC                  ; 6
0286+  0842 78                              LD      A, B                ; 4
0287+  0843 B1                              OR      C                   ; 4
0288+  0844 20 E2                           JR      NZ, _tone_loop      ; 12
0289+  0846             
0290+  0846 FB                              EI
0291+  0847 C9                              RET
0292+  0848             
0293+  0848 EB 18       _note_table         .DW 6379
0294+  084A 65 1A                           .DW 6757
0295+  084C F6 1B                           .DW 7158
0296+  084E A1 1D                           .DW 7585
0297+  0850 63 1F                           .DW 8035
0298+  0852 40 21                           .DW 8512
0299+  0854 3F 23                           .DW 9023
0300+  0856 51 25                           .DW 9553
0301+  0858 8C 27                           .DW 10124
0302+  085A EA 29                           .DW 10730
0303+  085C 60 2C                           .DW 11360
0304+  085E 0D 2F                           .DW 12045
0305+  0860 00 00                           .DW 0
0306+  0862             
0307+  0862             ;
0308+  0862             ; Get the next key press
0309+  0862             ;
0310+  0862 CD E0 07    get_key             CALL    read_character
0311+  0865 06 00                           LD      B, 0
0312+  0867 10 FE                           DJNZ    $
0313+  0869 28 F7                           JR      Z, get_key
0314+  086B C9                              RET
0315+  086C             ;
0316+  086C             ; Wait for a key to be pressed and released
0317+  086C             ;
0318+  086C             ;
0319+  086C CD E0 07    wait_for_key        CALL    read_character
0320+  086F 06 00                           LD      B, 0
0321+  0871 10 FE                           DJNZ    $
0322+  0873 28 F7                           JR      Z, wait_for_key
0323+  0875             
0324+  0875             ;
0325+  0875             ; wait until there are no keys being pressed
0326+  0875             ;
0327+  0875             ;
0328+  0875 CD E0 07    wait_no_keys        CALL    read_character
0329+  0878 20 FB                           JR      NZ, wait_no_keys
0330+  087A 01 00 00                        LD      BC, 0h              ; Make sure key is released
0331+  087D ED 78                           IN      A, (C)
0332+  087F E6 3F                           AND     03Fh
0333+  0881 FE 3F                           CP      03Fh
0334+  0883 20 F0                           JR      NZ, wait_no_keys
0335+  0885 C9                              RET
0336+  0886             
0337+  0886             ; Non-printing key codes
0338+  0886             ;
0339+  0886             KEY_ENTER       .EQU    13
0340+  0886             KEY_DELETE      .EQU    127
0341+  0886             KEY_CTRL_C      .EQU    03h
0342+  0886             KEY_CTRL_E      .EQU    05h
0343+  0886             
0344+  0886             KEY_CTRL_P      .EQU    10h
0345+  0886             KEY_CTRL_R      .EQU    12h
0346+  0886             KEY_CTRL_S      .EQU    13h
0347+  0886             KEY_CTRL_U      .EQU    15h
0348+  0886             KEY_CTRL_X      .EQU    18h
0349+  0886             KEY_CTRL_Z      .EQU    1Ah
0350+  0886             
0351+  0886             KEY_BACKSPACE   .EQU    08h
0352+  0886             
0353+  0886             ; Modifier and special keys have key codes with the top bit set..
0354+  0886             ;
0355+  0886             KEY_UP          .EQU    128
0356+  0886             KEY_DOWN        .EQU    129
0357+  0886             KEY_LEFT        .EQU    130
0358+  0886             KEY_RIGHT       .EQU    131
0359+  0886             KEY_SHIFT       .EQU    132
0360+  0886             KEY_CTRL        .EQU    134
0361+  0886             
0362+  0886             ; 144 = 90h
0363+  0886             ;
0364+  0886             CTRL_KEY_MASK   .EQU    0F8h
0365+  0886             CTRL_KEY_CHECK  .EQU    090h
0366+  0886             
0367+  0886             KEY_CTRL_UP     .EQU    144             ; These characters start on an exact multiple of 8 so they 
0368+  0886             KEY_CTRL_DOWN   .EQU    145             ; Can easily be detected
0369+  0886             KEY_CTRL_LEFT   .EQU    146
0370+  0886             KEY_CTRL_RIGHT  .EQU    147
0371+  0886             KEY_CTRL_ENTER  .EQU    148
0372+  0886             KEY_CTRL_SPACE  .EQU    149 
0373+  0886             
0374+  0886             _keyboard_size  .EQU    48
0375+  0886             
0376+  0886             KEY_SHIFT_BIT   .EQU    1
0377+  0886             KEY_CTRL_BIT    .EQU    2
0378+  0886             
0379+  0886             KEY_REPEAT_DELAY .EQU   40
0380+  0886             KEY_REPEAT_AFTER .EQU   KEY_REPEAT_DELAY+7
0381+  0886             
0382+  0886 76 63 78 7A keyboard        .DB    "vcxz", 0, 0
0382+  088A 00 00 
0383+  088C 67 66 64 73                 .DB    "gfdsa", 0
0383+  0890 61 00 
0384+  0892 74 72 65 77                 .DB    "trewq", KEY_DOWN
0384+  0896 71 81 
0385+  0898 35 34 33 32                 .DB    "54321", KEY_UP  
0385+  089C 31 80 
0386+  089E 36 37 38 39                 .DB    "67890", KEY_BACKSPACE
0386+  08A2 30 08 
0387+  08A4 79 75 69 6F                 .DB    "yuiop:"
0387+  08A8 70 3A 
0388+  08AA 68 6A 6B 6C                 .DB    "hjkl.", KEY_ENTER
0388+  08AE 2E 0D 
0389+  08B0 62 6E 6D 20                 .DB    "bnm ", KEY_LEFT, KEY_RIGHT
0389+  08B4 82 83 
0390+  08B6             
0391+  08B6 56 43 58 5A _shifted        .DB     "VCXZ", 0, 0
0391+  08BA 00 00 
0392+  08BC 47 46 44 53                 .DB     "GFDSA", 0
0392+  08C0 41 00 
0393+  08C2 54 52 45 57                 .DB     "TREWQ", 0              ; Shift + down?
0393+  08C6 51 00 
0394+  08C8 25 24 23 22                 .DB     "%$", 35, 34, "!", 0    ; Shift + up
0394+  08CC 21 00 
0395+  08CE 5E 26 2A 28                 .DB     "^&*()", 0              ; Shift + delete
0395+  08D2 29 00 
0396+  08D4 59 55 49 4F                 .DB     "YUIOP;"
0396+  08D8 50 3B 
0397+  08DA 48 4A 4B 4C                 .DB     "HJKL,", 0              ; Shift + enter
0397+  08DE 2C 00 
0398+  08E0 42 4E 4D 00                 .DB     "BNM", 0,0,0            ; Shift left + right
0398+  08E4 00 00 
0399+  08E6             
0400+  08E6 00 03 18 1A _ctrl           .DB    0,KEY_CTRL_C,KEY_CTRL_X,KEY_CTRL_Z,0,0
0400+  08EA 00 00 
0401+  08EC 00 00 00 13                 .DB    0,0,0,KEY_CTRL_S,0,0
0401+  08F0 00 00 
0402+  08F2 00 12 05 00                 .DB    0,KEY_CTRL_R,KEY_CTRL_E,0,0,KEY_CTRL_DOWN
0402+  08F6 00 91 
0403+  08F8 00 00 00 27                 .DB    0,0,0,27h,7Ch,KEY_CTRL_UP ; Vertical bar, single quote
0403+  08FC 7C 90 
0404+  08FE 7B 7D 60 5B                 .DB    "{}`[]",KEY_DELETE
0404+  0902 5D 7F 
0405+  0904 00 15 2B 3D                 .DB    0,KEY_CTRL_U, "+=-", 0
0405+  0908 2D 00 
0406+  090A 00 3C 40 3E                 .DB    0, "<@>_", KEY_CTRL_ENTER
0406+  090E 5F 94 
0407+  0910 5C 3F 2F 95                 .DB    "\\?/", KEY_CTRL_SPACE,KEY_CTRL_LEFT,KEY_CTRL_RIGHT
0407+  0914 92 93 
0408+  0916             
0409+  0916 00 00 00 00 _shift_ctrl     .DB    0,0,0,0,0,0
0409+  091A 00 00 
0410+  091C 00 00 00 00                 .DB    0,0,0,0,0,0
0410+  0920 00 00 
0411+  0922 00 00 00 00                 .DB    0,0,0,0,0,0
0411+  0926 00 00 
0412+  0928 00 00 00 00                 .DB    0,0,0,0,0,0
0412+  092C 00 00 
0413+  092E 00 00 00 00                 .DB    0,0,0,0,0,0
0413+  0932 00 00 
0414+  0934 00 00 00 00                 .DB    0,0,0,0,KEY_CTRL_P,0
0414+  0938 10 00 
0415+  093A 00 00 00 00                 .DB    0,0,0,0,0,0
0415+  093E 00 00 
0416+  0940 00 00 00 00                 .DB    0,0,0,0,0,0
0416+  0944 00 00 
0185   0946                                 .INCLUDE  uart.asm
0001+  0946             ;
0002+  0946             ; UART routines..
0003+  0946             ;
0004+  0946             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0005+  0946             ;
0006+  0946             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0007+  0946             ;
0008+  0946             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0009+  0946             ; of this software and associated documentation files (the "Software"), to deal
0010+  0946             ; in the Software without restriction, including without limitation the rights
0011+  0946             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0012+  0946             ; copies of the Software, and to permit persons to whom the Software is
0013+  0946             ; furnished to do so, subject to the following conditions:
0014+  0946             ; 
0015+  0946             ; The above copyright notice and this permission notice shall be included in all
0016+  0946             ; copies or substantial portions of the Software.
0017+  0946             ; 
0018+  0946             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0019+  0946             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0020+  0946             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0021+  0946             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0022+  0946             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0023+  0946             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0024+  0946             ; SOFTWARE.
0025+  0946             ;
0026+  0946                                 .MODULE     uart
0027+  0946             
0028+  0946             ;
0029+  0946             ; Baud rates, assuming 1.8432Mhz crystal
0030+  0946             ;
0031+  0946             UART_9600           .EQU    12
0032+  0946             UART_19200          .EQU    6
0033+  0946             UART_38400          .EQU    3
0034+  0946             
0035+  0946             UART_MODE_AUTO      .EQU    022h   ; Auto flow mode
0036+  0946             UART_MODE_NO_FLOW   .EQU    000h   ; Auto RTS and CTS disabled
0037+  0946             UART_MODE_DIAG      .EQU    030h   ; Loopback mode
0038+  0946             
0039+  0946             ;
0040+  0946             ; Various constants
0041+  0946             ;
0042+  0946             UART_8N1            .EQU    003h
0043+  0946             UART_TIMEOUT        .EQU    50000
0044+  0946             
0045+  0946             _CTS_STATUS_MASK    .EQU    010h
0046+  0946             
0047+  0946             ;
0048+  0946             ; Set up the UART. Assume it has had time to settle after reset...
0049+  0946             ;
0050+  0946             ;
0051+  0946 01 06 00    uart_init           LD      BC, UART_19200              ; B is flow control, 0 -> No auto flow control
0052+  0949             
0053+  0949 DB 26                           IN      A,(UART_MODEM_STATUS)       ; If CTS is enabled, assume we can use flow control
0054+  094B E6 10                           AND     _CTS_STATUS_MASK
0055+  094D 28 02                           JR      Z, _no_listener
0056+  094F             
0057+  094F 06 22                           LD      B, UART_MODE_AUTO
0058+  0951                                     
0059+  0951 3E 80       _no_listener        LD      A, 80h                      ; Divisor Latch Setting Mode
0060+  0953 D3 23                           OUT     (UART_LINE_CTRL), A         ;  - entered by writing 1 to bit 7 of LCR
0061+  0955 00                              NOP
0062+  0956 00                              NOP
0063+  0957 79                              LD      A, C
0064+  0958 D3 20                           OUT     (UART_TX_RX), A
0065+  095A 00                              NOP
0066+  095B 00                              NOP
0067+  095C AF                              XOR     A
0068+  095D D3 21                           OUT     (UART_INT_ENABLE), A
0069+  095F 00                              NOP
0070+  0960 00                              NOP
0071+  0961             
0072+  0961 3E 03                           LD      A, UART_8N1                 ; Set 8N1 and exit divisor latch setting mode
0073+  0963 D3 23                           OUT     (UART_LINE_CTRL), A
0074+  0965             
0075+  0965 3E 07                           LD      A, 07h                      ; Enable and clear FIFO registers
0076+  0967 D3 22                           OUT     (UART_FIFO_CTRL), A
0077+  0969             
0078+  0969 78                              LD      A, B
0079+  096A A7                              AND     A
0080+  096B 28 02                           JR      Z, _no_flowcontrol
0081+  096D             
0082+  096D D3 24                           OUT     (UART_MODEM_CTRL), A
0083+  096F             
0084+  096F 00          _no_flowcontrol     NOP
0085+  0970 00                              NOP
0086+  0971 C9                              RET
0087+  0972             
0088+  0972             ;
0089+  0972             ; Send character in A to UART
0090+  0972             ; Preserves all registers
0091+  0972             ;
0092+  0972             ; Carry flag is set on return if the UART send succeeded, clear if it timed out
0093+  0972             ;
0094+  0972 C5          uart_send           PUSH    BC
0095+  0973 F5                              PUSH    AF
0096+  0974 01 50 C3                        LD      BC, UART_TIMEOUT
0097+  0977 DB 25       _check_ready        IN      A, (UART_LINE_STATUS)
0098+  0979 CB 6F                           BIT     5, A
0099+  097B C2 89 09                        JP      NZ, _uart_ready             ; Bit 5 is set when the UART is ready
0100+  097E 0B                              DEC     BC
0101+  097F 78                              LD      A, B
0102+  0980 B1                              OR      C
0103+  0981 C2 77 09                        JP      NZ, _check_ready
0104+  0984             
0105+  0984 F1                              POP     AF
0106+  0985 C1                              POP     BC
0107+  0986 37                              SCF
0108+  0987 3F                              CCF
0109+  0988 C9                              RET
0110+  0989             
0111+  0989 F1          _uart_ready         POP     AF
0112+  098A C1                              POP     BC
0113+  098B D3 20                           OUT     (UART_TX_RX), A
0114+  098D 37                              SCF
0115+  098E C9                              RET
0116+  098F             
0117+  098F             ;
0118+  098F             ; Check to see if there are any characters to receive
0119+  098F             ; Preserves all registers
0120+  098F             ;
0121+  098F             ; Returns with carry set if there are characters ready, clear if not
0122+  098F             ;
0123+  098F F5          uart_ready          PUSH    AF
0124+  0990 DB 25                           IN      A, (UART_LINE_STATUS)
0125+  0992 CB 47                           BIT     0, A
0126+  0994 CA 9A 09                        JP      Z, _not_ready
0127+  0997 F1                              POP     AF
0128+  0998 37                              SCF
0129+  0999 C9                              RET
0130+  099A             
0131+  099A F1          _not_ready          POP     AF
0132+  099B 37                              SCF
0133+  099C 3F                              CCF
0134+  099D C9                              RET
0135+  099E             
0136+  099E             ;
0137+  099E             ; Receive a character from the UART in A
0138+  099E             ; 
0139+  099E             ; Returns with a character in A and the carry flag set. If no characters
0140+  099E             ; are available, returns with the carry flag clear.
0141+  099E             ;
0142+  099E DB 25       uart_receive        IN      A, (UART_LINE_STATUS)
0143+  09A0 CB 47                           BIT     0, A
0144+  09A2 CA A9 09                        JP      Z, _no_character
0145+  09A5 DB 20                           IN      A, (UART_TX_RX)
0146+  09A7 37                              SCF
0147+  09A8 C9                              RET
0148+  09A9             
0149+  09A9 37          _no_character       SCF
0150+  09AA 3F                              CCF
0151+  09AB C9                              RET
0152+  09AC             
0153+  09AC             ;
0154+  09AC             ; Write A as a hex byte
0155+  09AC             ; Overwrites A...
0156+  09AC             ;
0157+  09AC F5          uart_hex            PUSH    AF
0158+  09AD CB 2F                           SRA     A
0159+  09AF CB 2F                           SRA     A
0160+  09B1 CB 2F                           SRA     A
0161+  09B3 CB 2F                           SRA     A
0162+  09B5 CD C2 09                        CALL    to_hex
0163+  09B8 CD 72 09                        CALL    uart_send
0164+  09BB F1                              POP     AF
0165+  09BC CD C2 09                        CALL    to_hex
0166+  09BF C3 72 09                        JP      uart_send
0167+  09C2             ;
0168+  09C2             ; Returns the low nibble of A as a hex digit
0169+  09C2             ;
0170+  09C2 E6 0F       to_hex              AND $0F      ;LOW NIBBLE ONLY
0171+  09C4 C6 90                           ADD A,$90
0172+  09C6 27                              DAA 
0173+  09C7 CE 40                           ADC A,$40
0174+  09C9 27                              DAA 
0175+  09CA C9                              RET 
0176+  09CB             ;
0177+  09CB             ; Inline send. Sends the zero terminated string immediately following the call to this function to the UART.
0178+  09CB             ;  e.g.             CALL    uart_inline
0179+  09CB             ;                   .DB     "My text to send", 0
0180+  09CB             ;                   <code continues after message...>
0181+  09CB             ; Returns with Carry set if the string was successfully sent, otherwise, carry is clear.
0182+  09CB             ;
0183+  09CB             ; Uses A 
0184+  09CB             ;
0185+  09CB E3          uart_inline         EX      (SP), HL
0186+  09CC CD DA 09                        CALL    uart_string
0187+  09CF DA D8 09                        JP      C, _inline_end      
0188+  09D2 7E          _find_end           LD      A, (HL)             ; Get the current character  (Carry preserved)
0189+  09D3 23                              INC     HL                  ; Point to next character    (Carry preserved)
0190+  09D4 A7                              AND     A                   ; Test if the current character was zero (Clears carry)
0191+  09D5 C2 D2 09                        JP      NZ, _find_end       ; If it was, we're done, otherwise repeat
0192+  09D8 E3          _inline_end         EX      (SP), HL
0193+  09D9 C9                              RET
0194+  09DA             ;
0195+  09DA             ; Send a zero terminated string pointed to by HL to the UART
0196+  09DA             ;
0197+  09DA             ; Returns with Carry Set if the string was sent sucessfully, clear otherwise
0198+  09DA             ;                    
0199+  09DA 7E          uart_string         LD      A,(HL)
0200+  09DB 23                              INC     HL
0201+  09DC A7                              AND     A
0202+  09DD CA E7 09                        JP      Z, _string_end
0203+  09E0 CD 72 09                        CALL    uart_send
0204+  09E3 DA DA 09                        JP      C, uart_string
0205+  09E6 C9                              RET
0206+  09E7 37          _string_end         SCF
0207+  09E8 C9                              RET
0208+  09E9             
0209+  09E9                                 .MODULE main0186   09E9                                 .include  memory_test.asm
0001+  09E9             ;
0002+  09E9             ; Copyright (c) 2023 Andy Toone for Feersum Technology Ltd.
0003+  09E9             ;
0004+  09E9             ; Part of the MicroBeast Z80 kit computer project. Support hobby electronics.
0005+  09E9             ;
0006+  09E9             ; Permission is hereby granted, free of charge, to any person obtaining a copy
0007+  09E9             ; of this software and associated documentation files (the "Software"), to deal
0008+  09E9             ; in the Software without restriction, including without limitation the rights
0009+  09E9             ; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
0010+  09E9             ; copies of the Software, and to permit persons to whom the Software is
0011+  09E9             ; furnished to do so, subject to the following conditions:
0012+  09E9             ; 
0013+  09E9             ; The above copyright notice and this permission notice shall be included in all
0014+  09E9             ; copies or substantial portions of the Software.
0015+  09E9             ; 
0016+  09E9             ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0017+  09E9             ; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
0018+  09E9             ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
0019+  09E9             ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
0020+  09E9             ; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
0021+  09E9             ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
0022+  09E9             ; SOFTWARE.
0023+  09E9             ;
0024+  09E9                                 .MODULE     memory_test
0025+  09E9 F3          mem_test_start      DI 
0026+  09EA 01 E1 E9                        LD          BC, 0E9E1h         ; POP HL, JP (HL)
0027+  09ED ED 43 00 C0                     LD          (0C000h), BC
0028+  09F1 3A 00 C0                        LD          A, (0C000h)
0029+  09F4 FE E1                           CP          0E1h
0030+  09F6 28 06                           JR          Z, _locate_ok
0031+  09F8             
0032+  09F8 3E 4C                           LD          A, 'L'
0033+  09FA D3 20                           OUT         (UART_TX_RX), A
0034+  09FC 18 FE                           JR          $
0035+  09FE             
0036+  09FE CD 00 C0    _locate_ok          CALL        0C000h
0037+  0A01 7C                              LD          A, H
0038+  0A02 E6 C0                           AND         0C0h
0039+  0A04 57                              LD          D, A            ; D = our page, to avoid
0040+  0A05             
0041+  0A05 1E 00                           LD          E, 0            ; E = Which page we're testing
0042+  0A07             
0043+  0A07 7B          _test_loop          LD          A, E            ; Don't test the page we're in
0044+  0A08 C6 30                           ADD         A, '0'
0045+  0A0A D3 20                           OUT         (UART_TX_RX), A
0046+  0A0C E6 03                           AND         03h
0047+  0A0E 0F                              RRCA
0048+  0A0F 0F                              RRCA
0049+  0A10             
0050+  0A10 BA                              CP          D
0051+  0A11             
0052+  0A11 4F                              LD          C, A
0053+  0A12 3E 0D                           LD          A, CARRIAGE_RETURN
0054+  0A14 D3 20                           OUT         (UART_TX_RX), A
0055+  0A16 3E 0A                           LD          A, NEWLINE
0056+  0A18 D3 20                           OUT         (UART_TX_RX), A
0057+  0A1A 79                              LD          A, C
0058+  0A1B                                 
0059+  0A1B 28 43                           JR          Z, _test_next
0060+  0A1D             
0061+  0A1D 67                              LD          H, A            ; HL = start of page
0062+  0A1E 2E 00                           LD          L, 0
0063+  0A20             
0064+  0A20 3E 70                           LD          A, IO_MEM_0     ; C = the IO port controlling it..
0065+  0A22 83                              ADD         A, E
0066+  0A23 4F                              LD          C, A
0067+  0A24             
0068+  0A24 06 20                           LD          B, 32           ; B = the physical page we're paging in..
0069+  0A26             
0070+  0A26 05          _test_page_loop     DEC         B
0071+  0A27 78                              LD          A, B
0072+  0A28 C6 20                           ADD         A, RAM_PAGE_0
0073+  0A2A ED 79                           OUT         (C), A
0074+  0A2C             
0075+  0A2C                                 ; Now we have a page in place.. report it and check it can be written and read..
0076+  0A2C DB 25       _wait_uart          IN          A, (UART_LINE_STATUS)
0077+  0A2E CB 6F                           BIT         5, A
0078+  0A30 28 FA                           JR          Z, _wait_uart           ; Bit 5 is set when the UART is ready
0079+  0A32             
0080+  0A32 3E 6F                           LD          A, 'o'
0081+  0A34 D3 20                           OUT         (UART_TX_RX), A
0082+  0A36 78                              LD          A, B
0083+  0A37 CB 3F                           SRL         A
0084+  0A39 CB 3F                           SRL         A
0085+  0A3B CB 3F                           SRL         A
0086+  0A3D C6 30                           ADD         A, '0'
0087+  0A3F D3 20                           OUT         (UART_TX_RX), A
0088+  0A41 78                              LD          A, B
0089+  0A42 E6 07                           AND         07h
0090+  0A44 C6 30                           ADD         A, '0'
0091+  0A46 D3 20                           OUT         (UART_TX_RX), A
0092+  0A48 FE 30                           CP          '0'
0093+  0A4A 20 08                           JR          NZ, _no_cr
0094+  0A4C 3E 0D                           LD          A, CARRIAGE_RETURN
0095+  0A4E D3 20                           OUT         (UART_TX_RX), A
0096+  0A50 3E 0A                           LD          A, NEWLINE
0097+  0A52 D3 20                           OUT         (UART_TX_RX), A
0098+  0A54             
0099+  0A54 AF          _no_cr              XOR         A
0100+  0A55 3D          _test_write         DEC         A
0101+  0A56 77                              LD          (HL), A
0102+  0A57 BE                              CP          (HL)
0103+  0A58 20 0E                           JR          NZ, _test_fail
0104+  0A5A B8                              CP          B
0105+  0A5B 20 F8                           JR          NZ, _test_write
0106+  0A5D             
0107+  0A5D A7                              AND         A
0108+  0A5E 20 C6                           JR          NZ, _test_page_loop
0109+  0A60             
0110+  0A60 1C          _test_next          INC         E
0111+  0A61 3E 04                           LD          A, 4
0112+  0A63 BB                              CP          E
0113+  0A64 20 A1                           JR          NZ, _test_loop
0114+  0A66             
0115+  0A66 18 06                           JR          _test_read_page
0116+  0A68             
0117+  0A68 3E 78       _test_fail          LD          A, 'x'
0118+  0A6A D3 20                           OUT         (UART_TX_RX), A
0119+  0A6C 18 FE                           JR          $
0120+  0A6E             
0121+  0A6E 3E 79       _test_read_page     LD          A, 'y'
0122+  0A70 D3 20                           OUT         (UART_TX_RX), A
0123+  0A72 3E 0D                           LD          A, CARRIAGE_RETURN
0124+  0A74 D3 20                           OUT         (UART_TX_RX), A
0125+  0A76 3E 0A                           LD          A, NEWLINE
0126+  0A78 D3 20                           OUT         (UART_TX_RX), A
0127+  0A7A             
0128+  0A7A 06 00                           LD          B, 0           ; B = the physical page we're paging in..
0129+  0A7C             
0130+  0A7C 78          _read_page_loop     LD          A, B
0131+  0A7D C6 20                           ADD         A, RAM_PAGE_0
0132+  0A7F ED 79                           OUT         (C), A          ; C still points to the last valid page we wrote
0133+  0A81             
0134+  0A81 7E                              LD          A, (HL)
0135+  0A82 B8                              CP          B
0136+  0A83 20 21                           JR          NZ, _read_fail
0137+  0A85             
0138+  0A85 DB 25       _wait_uart2         IN          A, (UART_LINE_STATUS)
0139+  0A87 CB 6F                           BIT         5, A
0140+  0A89 28 FA                           JR          Z, _wait_uart2           ; Bit 5 is set when the UART is ready
0141+  0A8B             
0142+  0A8B 78                              LD          A, B
0143+  0A8C E6 07                           AND         07h
0144+  0A8E C6 30                           ADD         A, '0'
0145+  0A90 D3 20                           OUT         (UART_TX_RX), A
0146+  0A92 FE 37                           CP          '7'
0147+  0A94 20 04                           JR          NZ, _no_space
0148+  0A96 3E 20                           LD          A, ' '
0149+  0A98 D3 20                           OUT         (UART_TX_RX), A
0150+  0A9A             
0151+  0A9A 04          _no_space           INC         B
0152+  0A9B 3E 20                           LD          A, 32
0153+  0A9D B8                              CP          B
0154+  0A9E 20 DC                           JR          NZ, _read_page_loop
0155+  0AA0             
0156+  0AA0 3E 79                           LD          A, 'y'
0157+  0AA2 D3 20       _test_complete      OUT         (UART_TX_RX), A
0158+  0AA4 18 FE                           JR          $
0159+  0AA6             
0160+  0AA6 3E 21       _read_fail          LD          A, '!'
0161+  0AA8 18 F8                           JR          _test_complete
0162+  0AAA             
0163+  0AAA                                 .END0187   0AAA             
0188   0AAA             bios_seg            .INCLUDE  build/monitor.inc
0001+  0AAA             ; Autogenerated by hex2inc from monitor.obj
0002+  0AAA             ;
0003+  0AAA             ; Start address DF00, endAddress FDFC - total bytes 7933
0004+  0AAA             ;
0005+  0AAA 00 DF FD 1E                      .DW 0df00h, 01EFDh ; Start, length 
0006+  0AAE             
0007+  0AAE CD E1 F3 3E                      .DB 0CDh, 0E1h, 0F3h, 03Eh, 001h, 032h, 003h, 000h, 03Eh, 024h, 032h, 038h, 0FFh, 021h, 037h, 0E9h, 022h, 0FEh, 0FDh, 03Eh, 001h, 032h, 004h, 0FFh
0007+  0AB2 01 32 03 00 
0007+  0AB6 3E 24 32 38 
0007+  0ABA FF 21 37 E9 
0007+  0ABE 22 FE FD 3E 
0007+  0AC2 01 32 04 FF 
0008+  0AC6 3E 03 CD 28                      .DB 03Eh, 003h, 0CDh, 028h, 0E9h, 079h, 0B0h, 020h, 00Ah, 0CDh, 0C9h, 0F3h, 02Eh, 000h, 0CDh, 00Dh, 0F5h, 018h, 0E2h, 03Eh, 007h, 0CDh, 028h, 0E9h
0008+  0ACA E9 79 B0 20 
0008+  0ACE 0A CD C9 F3 
0008+  0AD2 2E 00 CD 0D 
0008+  0AD6 F5 18 E2 3E 
0008+  0ADA 07 CD 28 E9 
0009+  0ADE 79 B0 28 ED                      .DB 079h, 0B0h, 028h, 0EDh, 0C5h, 0E1h, 00Eh, 00Dh, 0CDh, 044h, 0E9h, 0E5h, 0D1h, 0CDh, 051h, 0E9h, 03Ah, 089h, 0E9h, 0FEh, 006h, 038h, 011h, 02Ah
0009+  0AE2 C5 E1 0E 0D 
0009+  0AE6 CD 44 E9 E5 
0009+  0AEA D1 CD 51 E9 
0009+  0AEE 3A 89 E9 FE 
0009+  0AF2 06 38 11 2A 
0010+  0AF6 8A E9 06 04                      .DB 08Ah, 0E9h, 006h, 004h, 07Eh, 03Ch, 077h, 0FEh, 00Ah, 038h, 005h, 0AFh, 077h, 023h, 010h, 0F4h, 03Ah, 08Ch, 0E9h, 0A7h, 028h, 005h, 0C6h, 030h
0010+  0AFA 7E 3C 77 FE 
0010+  0AFE 0A 38 05 AF 
0010+  0B02 77 23 10 F4 
0010+  0B06 3A 8C E9 A7 
0010+  0B0A 28 05 C6 30 
0011+  0B0E 32 8A DF 3A                      .DB 032h, 08Ah, 0DFh, 03Ah, 08Bh, 0E9h, 0C6h, 030h, 032h, 08Bh, 0DFh, 03Ah, 08Ah, 0E9h, 0C6h, 030h, 032h, 08Dh, 0DFh, 001h, 060h, 000h, 0CDh, 011h
0011+  0B12 8B E9 C6 30 
0011+  0B16 32 8B DF 3A 
0011+  0B1A 8A E9 C6 30 
0011+  0B1E 32 8D DF 01 
0011+  0B22 60 00 CD 11 
0012+  0B26 E9 CD C9 F3                      .DB 0E9h, 0CDh, 0C9h, 0F3h, 00Ah, 00Dh, 043h, 06Ch, 06Fh, 063h, 06Bh, 020h, 073h, 070h, 065h, 065h, 064h, 020h, 020h, 030h, 02Ch, 030h, 04Dh, 068h
0012+  0B2A 0A 0D 43 6C 
0012+  0B2E 6F 63 6B 20 
0012+  0B32 73 70 65 65 
0012+  0B36 64 20 20 30 
0012+  0B3A 2C 30 4D 68 
0013+  0B3E 7A 00 21 B6                      .DB 07Ah, 000h, 021h, 0B6h, 0F4h, 022h, 0FEh, 0FDh, 001h, 060h, 000h, 0CDh, 011h, 0E9h, 0CDh, 0C9h, 0F3h, 00Ah, 00Dh, 04Dh, 069h, 063h, 072h, 06Fh
0013+  0B42 F4 22 FE FD 
0013+  0B46 01 60 00 CD 
0013+  0B4A 11 E9 CD C9 
0013+  0B4E F3 0A 0D 4D 
0013+  0B52 69 63 72 6F 
0014+  0B56 42 65 61 73                      .DB 042h, 065h, 061h, 073h, 074h, 020h, 04Dh, 06Fh, 06Eh, 069h, 074h, 06Fh, 072h, 020h, 031h, 02Eh, 036h, 000h, 001h, 060h, 000h, 0CDh, 011h, 0E9h
0014+  0B5A 74 20 4D 6F 
0014+  0B5E 6E 69 74 6F 
0014+  0B62 72 20 31 2E 
0014+  0B66 36 00 01 60 
0014+  0B6A 00 CD 11 E9 
0015+  0B6E 0E 0A CD 00                      .DB 00Eh, 00Ah, 0CDh, 000h, 0F0h, 0CDh, 08Eh, 0E9h, 001h, 040h, 000h, 0CDh, 011h, 0E9h, 0CDh, 071h, 0EFh, 0A7h, 028h, 0F1h, 0CDh, 09Ah, 0EFh, 021h
0015+  0B72 F0 CD 8E E9 
0015+  0B76 01 40 00 CD 
0015+  0B7A 11 E9 CD 71 
0015+  0B7E EF A7 28 F1 
0015+  0B82 CD 9A EF 21 
0016+  0B86 FE DF CD 42                      .DB 0FEh, 0DFh, 0CDh, 042h, 0E8h, 018h, 0E6h, 0CDh, 0C9h, 0F3h, 00Ah, 00Dh, 046h, 06Fh, 072h, 06Dh, 061h, 074h, 020h, 052h, 041h, 04Dh, 020h, 064h
0016+  0B8A E8 18 E6 CD 
0016+  0B8E C9 F3 0A 0D 
0016+  0B92 46 6F 72 6D 
0016+  0B96 61 74 20 52 
0016+  0B9A 41 4D 20 64 
0017+  0B9E 69 73 6B 00                      .DB 069h, 073h, 06Bh, 000h, 0CDh, 073h, 0E7h, 021h, 0F1h, 0EEh, 0E5h, 0C3h, 031h, 0EFh, 053h, 065h, 06Ch, 065h, 063h, 074h, 020h, 061h, 063h, 074h
0017+  0BA2 CD 73 E7 21 
0017+  0BA6 F1 EE E5 C3 
0017+  0BAA 31 EF 53 65 
0017+  0BAE 6C 65 63 74 
0017+  0BB2 20 61 63 74 
0018+  0BB6 69 6F 6E 00                      .DB 069h, 06Fh, 06Eh, 000h, 0DFh, 0DFh, 04Ch, 061h, 075h, 06Eh, 063h, 068h, 020h, 043h, 050h, 02Fh, 04Dh, 000h, 078h, 0E5h, 04Dh, 065h, 06Dh, 06Fh
0018+  0BBA DF DF 4C 61 
0018+  0BBE 75 6E 63 68 
0018+  0BC2 20 43 50 2F 
0018+  0BC6 4D 00 78 E5 
0018+  0BCA 4D 65 6D 6F 
0019+  0BCE 72 79 20 45                      .DB 072h, 079h, 020h, 045h, 064h, 069h, 074h, 06Fh, 072h, 000h, 0B2h, 0E1h, 059h, 02Dh, 04Dh, 06Fh, 064h, 065h, 06Dh, 020h, 054h, 072h, 061h, 06Eh
0019+  0BD2 64 69 74 6F 
0019+  0BD6 72 00 B2 E1 
0019+  0BDA 59 2D 4D 6F 
0019+  0BDE 64 65 6D 20 
0019+  0BE2 54 72 61 6E 
0020+  0BE6 73 66 65 72                      .DB 073h, 066h, 065h, 072h, 000h, 055h, 0E0h, 053h, 065h, 074h, 020h, 044h, 061h, 074h, 065h, 000h, 01Ch, 0E1h, 053h, 065h, 074h, 020h, 054h, 069h
0020+  0BEA 00 55 E0 53 
0020+  0BEE 65 74 20 44 
0020+  0BF2 61 74 65 00 
0020+  0BF6 1C E1 53 65 
0020+  0BFA 74 20 54 69 
0021+  0BFE 6D 65 00 00                      .DB 06Dh, 065h, 000h, 000h, 000h, 03Ah, 02Dh, 0FFh, 0C6h, 01Fh, 032h, 075h, 0E0h, 032h, 088h, 0E0h, 0CDh, 0C9h, 0F3h, 00Dh, 044h, 061h, 074h, 065h
0021+  0C02 00 3A 2D FF 
0021+  0C06 C6 1F 32 75 
0021+  0C0A E0 32 88 E0 
0021+  0C0E CD C9 F3 0D 
0021+  0C12 44 61 74 65 
0022+  0C16 20 59 59 2F                      .DB 020h, 059h, 059h, 02Fh, 04Dh, 04Dh, 02Fh, 044h, 044h, 01Bh, 04Bh, 01Bh, 059h, 000h, 025h, 000h, 021h, 063h, 0E1h, 0CDh, 071h, 0E1h, 03Eh, 001h
0022+  0C1A 4D 4D 2F 44 
0022+  0C1E 44 1B 4B 1B 
0022+  0C22 59 00 25 00 
0022+  0C26 21 63 E1 CD 
0022+  0C2A 71 E1 3E 01 
0023+  0C2E 32 69 E1 CD                      .DB 032h, 069h, 0E1h, 0CDh, 0C9h, 0F3h, 01Bh, 059h, 000h, 02Fh, 000h, 03Ah, 069h, 0E1h, 047h, 021h, 027h, 0EAh, 010h, 00Ah, 07Eh, 023h, 0A7h, 028h
0023+  0C32 C9 F3 1B 59 
0023+  0C36 00 2F 00 3A 
0023+  0C3A 69 E1 47 21 
0023+  0C3E 27 EA 10 0A 
0023+  0C42 7E 23 A7 28 
0024+  0C46 0C CD D6 F3                      .DB 00Ch, 0CDh, 0D6h, 0F3h, 018h, 0F6h, 07Eh, 023h, 0A7h, 020h, 0FBh, 018h, 0EDh, 0CDh, 071h, 0EFh, 0A7h, 028h, 0FAh, 0CDh, 09Ah, 0EFh, 0FEh, 080h
0024+  0C4A 18 F6 7E 23 
0024+  0C4E A7 20 FB 18 
0024+  0C52 ED CD 71 EF 
0024+  0C56 A7 28 FA CD 
0024+  0C5A 9A EF FE 80 
0025+  0C5E 20 0A 3A 69                      .DB 020h, 00Ah, 03Ah, 069h, 0E1h, 0FEh, 007h, 028h, 0ECh, 03Ch, 018h, 0C4h, 0FEh, 081h, 020h, 00Ah, 03Ah, 069h, 0E1h, 0FEh, 001h, 028h, 0DEh, 03Dh
0025+  0C62 E1 FE 07 28 
0025+  0C66 EC 3C 18 C4 
0025+  0C6A FE 81 20 0A 
0025+  0C6E 3A 69 E1 FE 
0025+  0C72 01 28 DE 3D 
0026+  0C76 18 B6 FE 0D                      .DB 018h, 0B6h, 0FEh, 00Dh, 020h, 0D7h, 0F3h, 026h, 06Fh, 02Eh, 003h, 0CDh, 03Ch, 0F9h, 0D2h, 005h, 0E1h, 021h, 069h, 0E1h, 07Eh, 023h, 0F6h, 008h
0026+  0C7A 20 D7 F3 26 
0026+  0C7E 6F 2E 03 CD 
0026+  0C82 3C F9 D2 05 
0026+  0C86 E1 21 69 E1 
0026+  0C8A 7E 23 F6 08 
0027+  0C8E CD 50 F9 D2                      .DB 0CDh, 050h, 0F9h, 0D2h, 005h, 0E1h, 046h, 023h, 07Eh, 023h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0B0h, 0FEh, 0FFh, 0CAh, 000h, 0E1h
0027+  0C92 05 E1 46 23 
0027+  0C96 7E 23 CB 27 
0027+  0C9A CB 27 CB 27 
0027+  0C9E CB 27 B0 FE 
0027+  0CA2 FF CA 00 E1 
0028+  0CA6 CD 50 F9 D2                      .DB 0CDh, 050h, 0F9h, 0D2h, 005h, 0E1h, 018h, 0E6h, 0CDh, 004h, 0F9h, 0FBh, 0C9h, 0CDh, 004h, 0F9h, 0FBh, 0CDh, 0C9h, 0F3h, 00Dh, 052h, 054h, 043h
0028+  0CAA 05 E1 18 E6 
0028+  0CAE CD 04 F9 FB 
0028+  0CB2 C9 CD 04 F9 
0028+  0CB6 FB CD C9 F3 
0028+  0CBA 0D 52 54 43 
0029+  0CBE 20 45 72 72                      .DB 020h, 045h, 072h, 072h, 06Fh, 072h, 01Bh, 04Bh, 000h, 0C3h, 09Ah, 0EFh, 03Ah, 02Dh, 0FFh, 0C6h, 01Fh, 032h, 039h, 0E1h, 0CDh, 0C9h, 0F3h, 00Dh
0029+  0CC2 6F 72 1B 4B 
0029+  0CC6 00 C3 9A EF 
0029+  0CCA 3A 2D FF C6 
0029+  0CCE 1F 32 39 E1 
0029+  0CD2 CD C9 F3 0D 
0030+  0CD6 54 69 6D 65                      .DB 054h, 069h, 06Dh, 065h, 020h, 048h, 048h, 02Fh, 06Dh, 06Dh, 02Fh, 073h, 073h, 01Bh, 04Bh, 01Bh, 059h, 000h, 025h, 000h, 021h, 05Dh, 0E1h, 0CDh
0030+  0CDA 20 48 48 2F 
0030+  0CDE 6D 6D 2F 73 
0030+  0CE2 73 1B 4B 1B 
0030+  0CE6 59 00 25 00 
0030+  0CEA 21 5D E1 CD 
0031+  0CEE 71 E1 3A 6B                      .DB 071h, 0E1h, 03Ah, 06Bh, 0E1h, 0F6h, 008h, 032h, 06Bh, 0E1h, 0CDh, 09Ah, 0EFh, 0F3h, 026h, 06Fh, 02Eh, 000h, 0CDh, 03Ch, 0F9h, 0D2h, 005h, 0E1h
0031+  0CF2 E1 F6 08 32 
0031+  0CF6 6B E1 CD 9A 
0031+  0CFA EF F3 26 6F 
0031+  0CFE 2E 00 CD 3C 
0031+  0D02 F9 D2 05 E1 
0032+  0D06 21 6A E1 18                      .DB 021h, 06Ah, 0E1h, 018h, 089h, 009h, 005h, 009h, 005h, 003h, 002h, 001h, 003h, 002h, 001h, 009h, 009h, 001h, 000h, 000h, 000h, 000h, 000h, 000h
0032+  0D0A 89 09 05 09 
0032+  0D0E 05 03 02 01 
0032+  0D12 03 02 01 09 
0032+  0D16 09 01 00 00 
0032+  0D1A 00 00 00 00 
0033+  0D1E FF 11 6A E1                      .DB 0FFh, 011h, 06Ah, 0E1h, 001h, 006h, 000h, 0EDh, 0B0h, 02Bh, 01Bh, 006h, 006h, 0E5h, 0D5h, 0C5h, 0CDh, 09Ah, 0EFh, 0C1h, 0D1h, 0E1h, 0D6h, 030h
0033+  0D22 01 06 00 ED 
0033+  0D26 B0 2B 1B 06 
0033+  0D2A 06 E5 D5 C5 
0033+  0D2E CD 9A EF C1 
0033+  0D32 D1 E1 D6 30 
0034+  0D36 38 F3 4F 1A                      .DB 038h, 0F3h, 04Fh, 01Ah, 032h, 0A1h, 0E1h, 0B9h, 038h, 0EBh, 079h, 012h, 0C6h, 030h, 0CDh, 0D6h, 0F3h, 01Ah, 02Bh, 01Bh, 0CBh, 040h, 020h, 00Ah
0034+  0D3A 32 A1 E1 B9 
0034+  0D3E 38 EB 79 12 
0034+  0D42 C6 30 CD D6 
0034+  0D46 F3 1A 2B 1B 
0034+  0D4A CB 40 20 0A 
0035+  0D4E FE 00 28 03                      .DB 0FEh, 000h, 028h, 003h, 03Eh, 009h, 012h, 010h, 0D4h, 0C9h, 0CDh, 0C9h, 0F3h, 01Bh, 043h, 000h, 018h, 0F5h, 0AFh, 032h, 004h, 0E4h, 021h, 07Dh
0035+  0D52 3E 09 12 10 
0035+  0D56 D4 C9 CD C9 
0035+  0D5A F3 1B 43 00 
0035+  0D5E 18 F5 AF 32 
0035+  0D62 04 E4 21 7D 
0036+  0D66 E4 CD 42 E8                      .DB 0E4h, 0CDh, 042h, 0E8h, 03Ah, 004h, 0E4h, 0A7h, 0C8h, 0EDh, 05Bh, 001h, 0E4h, 03Ah, 003h, 0E4h, 021h, 06Fh, 0DEh, 0F3h, 0CDh, 0B1h, 0EAh, 0FBh
0036+  0D6A 3A 04 E4 A7 
0036+  0D6E C8 ED 5B 01 
0036+  0D72 E4 3A 03 E4 
0036+  0D76 21 6F DE F3 
0036+  0D7A CD B1 EA FB 
0037+  0D7E A7 CA 83 E2                      .DB 0A7h, 0CAh, 083h, 0E2h, 03Dh, 05Fh, 016h, 000h, 021h, 003h, 0E2h, 019h, 019h, 07Eh, 023h, 066h, 06Fh, 079h, 0C6h, 030h, 032h, 03Fh, 0E2h, 0E5h
0037+  0D82 3D 5F 16 00 
0037+  0D86 21 03 E2 19 
0037+  0D8A 19 7E 23 66 
0037+  0D8E 6F 79 C6 30 
0037+  0D92 32 3F E2 E5 
0038+  0D96 CD C9 F3 0D                      .DB 0CDh, 0C9h, 0F3h, 00Dh, 045h, 052h, 052h, 04Fh, 052h, 03Ah, 020h, 000h, 0E1h, 07Eh, 023h, 0A7h, 0CAh, 09Ah, 0EFh, 04Fh, 0E5h, 0CDh, 000h, 0F0h
0038+  0D9A 45 52 52 4F 
0038+  0D9E 52 3A 20 00 
0038+  0DA2 E1 7E 23 A7 
0038+  0DA6 CA 9A EF 4F 
0038+  0DAA E5 CD 00 F0 
0039+  0DAE E1 18 F2 13                      .DB 0E1h, 018h, 0F2h, 013h, 0E2h, 01Dh, 0E2h, 02Eh, 0E2h, 037h, 0E2h, 044h, 0E2h, 052h, 0E2h, 063h, 0E2h, 072h, 0E2h, 054h, 069h, 06Dh, 065h, 06Fh
0039+  0DB2 E2 1D E2 2E 
0039+  0DB6 E2 37 E2 44 
0039+  0DBA E2 52 E2 63 
0039+  0DBE E2 72 E2 54 
0039+  0DC2 69 6D 65 6F 
0040+  0DC6 75 74 1B 4B                      .DB 075h, 074h, 01Bh, 04Bh, 000h, 055h, 06Eh, 06Bh, 06Eh, 06Fh, 077h, 06Eh, 020h, 070h, 061h, 063h, 06Bh, 065h, 074h, 01Bh, 04Bh, 000h, 043h, 061h
0040+  0DCA 00 55 6E 6B 
0040+  0DCE 6E 6F 77 6E 
0040+  0DD2 20 70 61 63 
0040+  0DD6 6B 65 74 1B 
0040+  0DDA 4B 00 43 61 
0041+  0DDE 6E 63 65 6C                      .DB 06Eh, 063h, 065h, 06Ch, 01Bh, 04Bh, 000h, 050h, 061h, 063h, 06Bh, 065h, 074h, 020h, 028h, 030h, 029h, 01Bh, 04Bh, 000h, 046h, 069h, 06Ch, 065h
0041+  0DE2 1B 4B 00 50 
0041+  0DE6 61 63 6B 65 
0041+  0DEA 74 20 28 30 
0041+  0DEE 29 1B 4B 00 
0041+  0DF2 46 69 6C 65 
0042+  0DF6 20 6C 65 6E                      .DB 020h, 06Ch, 065h, 06Eh, 067h, 074h, 068h, 01Bh, 04Bh, 000h, 04Eh, 06Fh, 020h, 064h, 065h, 073h, 074h, 069h, 06Eh, 061h, 074h, 069h, 06Fh, 06Eh
0042+  0DFA 67 74 68 1B 
0042+  0DFE 4B 00 4E 6F 
0042+  0E02 20 64 65 73 
0042+  0E06 74 69 6E 61 
0042+  0E0A 74 69 6F 6E 
0043+  0E0E 1B 4B 00 53                      .DB 01Bh, 04Bh, 000h, 053h, 065h, 06Eh, 064h, 020h, 054h, 069h, 06Dh, 065h, 06Fh, 075h, 074h, 01Bh, 04Bh, 000h, 04Dh, 075h, 06Ch, 074h, 069h, 070h
0043+  0E12 65 6E 64 20 
0043+  0E16 54 69 6D 65 
0043+  0E1A 6F 75 74 1B 
0043+  0E1E 4B 00 4D 75 
0043+  0E22 6C 74 69 70 
0044+  0E26 6C 65 20 66                      .DB 06Ch, 065h, 020h, 066h, 069h, 06Ch, 065h, 073h, 01Bh, 04Bh, 000h, 0CDh, 0C9h, 0F3h, 00Dh, 04Fh, 04Bh, 020h, 000h, 03Ah, 073h, 0DEh, 0FEh, 0FFh
0044+  0E2A 69 6C 65 73 
0044+  0E2E 1B 4B 00 CD 
0044+  0E32 C9 F3 0D 4F 
0044+  0E36 4B 20 00 3A 
0044+  0E3A 73 DE FE FF 
0045+  0E3E 28 06 C6 30                      .DB 028h, 006h, 0C6h, 030h, 04Fh, 0CDh, 000h, 0F0h, 03Ah, 072h, 0DEh, 0CDh, 0D0h, 0E8h, 03Ah, 071h, 0DEh, 0CDh, 0D0h, 0E8h, 0CDh, 0C9h, 0F3h, 020h
0045+  0E42 4F CD 00 F0 
0045+  0E46 3A 72 DE CD 
0045+  0E4A D0 E8 3A 71 
0045+  0E4E DE CD D0 E8 
0045+  0E52 CD C9 F3 20 
0046+  0E56 42 59 54 45                      .DB 042h, 059h, 054h, 045h, 053h, 020h, 040h, 020h, 000h, 03Ah, 06Fh, 0DEh, 017h, 038h, 010h, 01Fh, 0CDh, 0D0h, 0E8h, 00Eh, 02Fh, 0CDh, 000h, 0F0h
0046+  0E5A 53 20 40 20 
0046+  0E5E 00 3A 6F DE 
0046+  0E62 17 38 10 1F 
0046+  0E66 CD D0 E8 0E 
0046+  0E6A 2F CD 00 F0 
0047+  0E6E 3A 79 DE D6                      .DB 03Ah, 079h, 0DEh, 0D6h, 040h, 018h, 003h, 03Ah, 079h, 0DEh, 0CDh, 0D0h, 0E8h, 03Ah, 078h, 0DEh, 0CDh, 0D0h, 0E8h, 0CDh, 0C9h, 0F3h, 01Bh, 04Bh
0047+  0E72 40 18 03 3A 
0047+  0E76 79 DE CD D0 
0047+  0E7A E8 3A 78 DE 
0047+  0E7E CD D0 E8 CD 
0047+  0E82 C9 F3 1B 4B 
0048+  0E86 00 CD 71 EF                      .DB 000h, 0CDh, 071h, 0EFh, 0A7h, 028h, 0FAh, 0CDh, 09Ah, 0EFh, 03Ah, 06Fh, 0DEh, 017h, 030h, 006h, 021h, 005h, 0E4h, 0C3h, 042h, 0E8h, 021h, 032h
0048+  0E8A A7 28 FA CD 
0048+  0E8E 9A EF 3A 6F 
0048+  0E92 DE 17 30 06 
0048+  0E96 21 05 E4 C3 
0048+  0E9A 42 E8 21 32 
0049+  0E9E E4 C3 42 E8                      .DB 0E4h, 0C3h, 042h, 0E8h, 02Ah, 078h, 0DEh, 022h, 072h, 0E5h, 0C3h, 051h, 0E6h, 02Ah, 078h, 0DEh, 0E5h, 0C9h, 0CDh, 0C9h, 0F3h, 00Dh, 00Ah, 050h
0049+  0EA2 2A 78 DE 22 
0049+  0EA6 72 E5 C3 51 
0049+  0EAA E6 2A 78 DE 
0049+  0EAE E5 C9 CD C9 
0049+  0EB2 F3 0D 0A 50 
0050+  0EB6 61 67 65 20                      .DB 061h, 067h, 065h, 020h, 030h, 030h, 02Dh, 031h, 066h, 020h, 03Eh, 01Bh, 04Bh, 000h, 006h, 002h, 0CDh, 0BCh, 0E7h, 0CDh, 02Eh, 0E8h, 03Ah, 02Ch
0050+  0EBA 30 30 2D 31 
0050+  0EBE 66 20 3E 1B 
0050+  0EC2 4B 00 06 02 
0050+  0EC6 CD BC E7 CD 
0050+  0ECA 2E E8 3A 2C 
0051+  0ECE E8 FE 1F 30                      .DB 0E8h, 0FEh, 01Fh, 030h, 0DDh, 0CDh, 0C9h, 0F3h, 020h, 059h, 02Fh, 04Eh, 03Fh, 000h, 0CDh, 09Ah, 0EFh, 0FEh, 079h, 020h, 0B9h, 0CDh, 0C9h, 0F3h
0051+  0ED2 DD CD C9 F3 
0051+  0ED6 20 59 2F 4E 
0051+  0EDA 3F 00 CD 9A 
0051+  0EDE EF FE 79 20 
0051+  0EE2 B9 CD C9 F3 
0052+  0EE6 0D 0A 57 72                      .DB 00Dh, 00Ah, 057h, 072h, 069h, 074h, 069h, 06Eh, 067h, 01Bh, 04Bh, 000h, 03Ah, 02Ch, 0E8h, 017h, 017h, 057h, 03Ah, 06Fh, 0DEh, 032h, 003h, 0E4h
0052+  0EEA 69 74 69 6E 
0052+  0EEE 67 1B 4B 00 
0052+  0EF2 3A 2C E8 17 
0052+  0EF6 17 57 3A 6F 
0052+  0EFA DE 32 03 E4 
0053+  0EFE D3 71 2A 72                      .DB 0D3h, 071h, 02Ah, 072h, 0DEh, 07Dh, 0E6h, 0C0h, 0B4h, 020h, 022h, 0EDh, 04Bh, 071h, 0DEh, 078h, 0B1h, 028h, 006h, 021h, 000h, 040h, 0CDh, 088h
0053+  0F02 DE 7D E6 C0 
0053+  0F06 B4 20 22 ED 
0053+  0F0A 4B 71 DE 78 
0053+  0F0E B1 28 06 21 
0053+  0F12 00 40 CD 88 
0054+  0F16 FD 3E 20 D3                      .DB 0FDh, 03Eh, 020h, 0D3h, 070h, 0CDh, 0C9h, 0F3h, 00Dh, 00Ah, 044h, 06Fh, 06Eh, 065h, 020h, 01Bh, 04Bh, 000h, 0C3h, 09Ah, 0EFh, 001h, 040h, 000h
0054+  0F1A 70 CD C9 F3 
0054+  0F1E 0D 0A 44 6F 
0054+  0F22 6E 65 20 1B 
0054+  0F26 4B 00 C3 9A 
0054+  0F2A EF 01 40 00 
0055+  0F2E AF ED 42 22                      .DB 0AFh, 0EDh, 042h, 022h, 072h, 0DEh, 021h, 000h, 040h, 044h, 04Dh, 0CDh, 088h, 0FDh, 014h, 03Ah, 003h, 0E4h, 03Ch, 018h, 0B8h, 03Ah, 073h, 0DEh
0055+  0F32 72 DE 21 00 
0055+  0F36 40 44 4D CD 
0055+  0F3A 88 FD 14 3A 
0055+  0F3E 03 E4 3C 18 
0055+  0F42 B8 3A 73 DE 
0056+  0F46 A7 20 52 3A                      .DB 0A7h, 020h, 052h, 03Ah, 072h, 0DEh, 0FEh, 040h, 030h, 04Bh, 0CDh, 0C9h, 0F3h, 00Dh, 057h, 072h, 069h, 074h, 065h, 020h, 066h, 069h, 072h, 06Dh
0056+  0F4A 72 DE FE 40 
0056+  0F4E 30 4B CD C9 
0056+  0F52 F3 0D 57 72 
0056+  0F56 69 74 65 20 
0056+  0F5A 66 69 72 6D 
0057+  0F5E 77 61 72 65                      .DB 077h, 061h, 072h, 065h, 02Ch, 020h, 059h, 02Fh, 04Eh, 03Fh, 01Bh, 04Bh, 000h, 0CDh, 09Ah, 0EFh, 0FEh, 079h, 0C2h, 0EEh, 0E2h, 0EDh, 04Bh, 071h
0057+  0F62 2C 20 59 2F 
0057+  0F66 4E 3F 1B 4B 
0057+  0F6A 00 CD 9A EF 
0057+  0F6E FE 79 C2 EE 
0057+  0F72 E2 ED 4B 71 
0058+  0F76 DE 3A 6F DE                      .DB 0DEh, 03Ah, 06Fh, 0DEh, 0D3h, 071h, 021h, 000h, 040h, 016h, 000h, 0CDh, 088h, 0FDh, 0CDh, 0C9h, 0F3h, 00Dh, 00Ah, 044h, 06Fh, 06Eh, 065h, 020h
0058+  0F7A D3 71 21 00 
0058+  0F7E 40 16 00 CD 
0058+  0F82 88 FD CD C9 
0058+  0F86 F3 0D 0A 44 
0058+  0F8A 6F 6E 65 20 
0059+  0F8E 1B 4B 00 ED                      .DB 01Bh, 04Bh, 000h, 0EDh, 05Bh, 071h, 0DEh, 0CDh, 0C9h, 0E8h, 0C3h, 09Ah, 0EFh, 0CDh, 0C9h, 0F3h, 00Dh, 00Ah, 054h, 06Fh, 06Fh, 020h, 06Ch, 061h
0059+  0F92 5B 71 DE CD 
0059+  0F96 C9 E8 C3 9A 
0059+  0F9A EF CD C9 F3 
0059+  0F9E 0D 0A 54 6F 
0059+  0FA2 6F 20 6C 61 
0060+  0FA6 72 67 65 1B                      .DB 072h, 067h, 065h, 01Bh, 04Bh, 000h, 0C3h, 09Ah, 0EFh, 000h, 000h, 000h, 000h, 046h, 069h, 06Ch, 065h, 020h, 061h, 063h, 074h, 069h, 06Fh, 06Eh
0060+  0FAA 4B 00 C3 9A 
0060+  0FAE EF 00 00 00 
0060+  0FB2 00 46 69 6C 
0060+  0FB6 65 20 61 63 
0060+  0FBA 74 69 6F 6E 
0061+  0FBE 73 00 F4 E2                      .DB 073h, 000h, 0F4h, 0E2h, 056h, 069h, 065h, 077h, 020h, 066h, 069h, 06Ch, 065h, 000h, 0FDh, 0E2h, 052h, 075h, 06Eh, 000h, 001h, 0E3h, 04Dh, 061h
0061+  0FC2 56 69 65 77 
0061+  0FC6 20 66 69 6C 
0061+  0FCA 65 00 FD E2 
0061+  0FCE 52 75 6E 00 
0061+  0FD2 01 E3 4D 61 
0062+  0FD6 69 6E 20 6D                      .DB 069h, 06Eh, 020h, 06Dh, 065h, 06Eh, 075h, 000h, 000h, 000h, 046h, 069h, 06Ch, 065h, 020h, 061h, 063h, 074h, 069h, 06Fh, 06Eh, 073h, 000h, 002h
0062+  0FDA 65 6E 75 00 
0062+  0FDE 00 00 46 69 
0062+  0FE2 6C 65 20 61 
0062+  0FE6 63 74 69 6F 
0062+  0FEA 6E 73 00 02 
0063+  0FEE E3 43 6F 70                      .DB 0E3h, 043h, 06Fh, 070h, 079h, 020h, 074h, 06Fh, 020h, 066h, 06Ch, 061h, 073h, 068h, 000h, 0F7h, 0DFh, 043h, 050h, 04Dh, 020h, 044h, 072h, 069h
0063+  0FF2 79 20 74 6F 
0063+  0FF6 20 66 6C 61 
0063+  0FFA 73 68 00 F7 
0063+  0FFE DF 43 50 4D 
0063+  1002 20 44 72 69 
0064+  1006 76 65 20 42                      .DB 076h, 065h, 020h, 042h, 000h, 095h, 0E3h, 055h, 070h, 064h, 061h, 074h, 065h, 020h, 066h, 069h, 072h, 06Dh, 077h, 061h, 072h, 065h, 000h, 001h
0064+  100A 00 95 E3 55 
0064+  100E 70 64 61 74 
0064+  1012 65 20 66 69 
0064+  1016 72 6D 77 61 
0064+  101A 72 65 00 01 
0065+  101E E3 4D 61 69                      .DB 0E3h, 04Dh, 061h, 069h, 06Eh, 020h, 06Dh, 065h, 06Eh, 075h, 000h, 000h, 000h, 044h, 06Fh, 077h, 06Eh, 06Ch, 06Fh, 061h, 064h, 020h, 06Fh, 070h
0065+  1022 6E 20 6D 65 
0065+  1026 6E 75 00 00 
0065+  102A 00 44 6F 77 
0065+  102E 6E 6C 6F 61 
0065+  1032 64 20 6F 70 
0066+  1036 74 69 6F 6E                      .DB 074h, 069h, 06Fh, 06Eh, 073h, 000h, 0CFh, 0E4h, 041h, 064h, 064h, 072h, 065h, 073h, 073h, 020h, 066h, 072h, 06Fh, 06Dh, 020h, 066h, 069h, 06Ch
0066+  103A 73 00 CF E4 
0066+  103E 41 64 64 72 
0066+  1042 65 73 73 20 
0066+  1046 66 72 6F 6D 
0066+  104A 20 66 69 6C 
0067+  104E 65 00 F0 E4                      .DB 065h, 000h, 0F0h, 0E4h, 043h, 050h, 055h, 020h, 028h, 04Ch, 06Fh, 067h, 069h, 063h, 061h, 06Ch, 029h, 020h, 061h, 064h, 064h, 072h, 065h, 073h
0067+  1052 43 50 55 20 
0067+  1056 28 4C 6F 67 
0067+  105A 69 63 61 6C 
0067+  105E 29 20 61 64 
0067+  1062 64 72 65 73 
0068+  1066 73 00 26 E5                      .DB 073h, 000h, 026h, 0E5h, 050h, 068h, 079h, 073h, 069h, 063h, 061h, 06Ch, 020h, 061h, 064h, 064h, 072h, 065h, 073h, 073h, 000h, 000h, 000h, 011h
0068+  106A 50 68 79 73 
0068+  106E 69 63 61 6C 
0068+  1072 20 61 64 64 
0068+  1076 72 65 73 73 
0068+  107A 00 00 00 11 
0069+  107E FF FF ED 53                      .DB 0FFh, 0FFh, 0EDh, 053h, 001h, 0E4h, 0EDh, 053h, 003h, 0E4h, 0CDh, 0C9h, 0F3h, 00Dh, 053h, 074h, 061h, 072h, 074h, 020h, 074h, 072h, 061h, 06Eh
0069+  1082 01 E4 ED 53 
0069+  1086 03 E4 CD C9 
0069+  108A F3 0D 53 74 
0069+  108E 61 72 74 20 
0069+  1092 74 72 61 6E 
0070+  1096 73 66 65 72                      .DB 073h, 066h, 065h, 072h, 01Bh, 04Bh, 000h, 0C9h, 0CDh, 0C9h, 0F3h, 00Dh, 041h, 064h, 064h, 072h, 065h, 073h, 073h, 020h, 030h, 030h, 030h, 030h
0070+  109A 1B 4B 00 C9 
0070+  109E CD C9 F3 0D 
0070+  10A2 41 64 64 72 
0070+  10A6 65 73 73 20 
0070+  10AA 30 30 30 30 
0071+  10AE 2D 46 46 46                      .DB 02Dh, 046h, 046h, 046h, 046h, 020h, 03Eh, 01Bh, 04Bh, 000h, 006h, 004h, 0CDh, 0BCh, 0E7h, 0CDh, 02Eh, 0E8h, 03Eh, 0FFh, 032h, 003h, 0E4h, 0EDh
0071+  10B2 46 20 3E 1B 
0071+  10B6 4B 00 06 04 
0071+  10BA CD BC E7 CD 
0071+  10BE 2E E8 3E FF 
0071+  10C2 32 03 E4 ED 
0072+  10C6 5B 2C E8 ED                      .DB 05Bh, 02Ch, 0E8h, 0EDh, 053h, 001h, 0E4h, 03Eh, 0FFh, 032h, 004h, 0E4h, 018h, 0B4h, 0CDh, 0C9h, 0F3h, 00Dh, 050h, 061h, 067h, 065h, 020h, 032h
0072+  10CA 53 01 E4 3E 
0072+  10CE FF 32 04 E4 
0072+  10D2 18 B4 CD C9 
0072+  10D6 F3 0D 50 61 
0072+  10DA 67 65 20 32 
0073+  10DE 30 2D 33 46                      .DB 030h, 02Dh, 033h, 046h, 020h, 03Eh, 01Bh, 04Bh, 000h, 006h, 002h, 0CDh, 0BCh, 0E7h, 0CDh, 02Eh, 0E8h, 03Ah, 02Ch, 0E8h, 032h, 003h, 0E4h, 0CDh
0073+  10E2 20 3E 1B 4B 
0073+  10E6 00 06 02 CD 
0073+  10EA BC E7 CD 2E 
0073+  10EE E8 3A 2C E8 
0073+  10F2 32 03 E4 CD 
0074+  10F6 C9 F3 0D 4F                      .DB 0C9h, 0F3h, 00Dh, 04Fh, 066h, 066h, 073h, 065h, 074h, 020h, 030h, 030h, 030h, 030h, 02Dh, 033h, 046h, 046h, 046h, 020h, 03Eh, 01Bh, 04Bh, 000h
0074+  10FA 66 66 73 65 
0074+  10FE 74 20 30 30 
0074+  1102 30 30 2D 33 
0074+  1106 46 46 46 20 
0074+  110A 3E 1B 4B 00 
0075+  110E 06 04 CD BC                      .DB 006h, 004h, 0CDh, 0BCh, 0E7h, 0CDh, 02Eh, 0E8h, 03Ah, 02Dh, 0E8h, 0F6h, 040h, 032h, 02Dh, 0E8h, 018h, 0A5h, 000h, 080h, 000h, 000h, 000h, 000h
0075+  1112 E7 CD 2E E8 
0075+  1116 3A 2D E8 F6 
0075+  111A 40 32 2D E8 
0075+  111E 18 A5 00 80 
0075+  1122 00 00 00 00 
0076+  1126 CD 0E E7 CD                      .DB 0CDh, 00Eh, 0E7h, 0CDh, 071h, 0EFh, 0A7h, 028h, 0FAh, 0CDh, 09Ah, 0EFh, 0FEh, 080h, 020h, 00Dh, 02Ah, 072h, 0E5h, 011h, 008h, 000h, 0EDh, 052h
0076+  112A 71 EF A7 28 
0076+  112E FA CD 9A EF 
0076+  1132 FE 80 20 0D 
0076+  1136 2A 72 E5 11 
0076+  113A 08 00 ED 52 
0077+  113E 22 72 E5 18                      .DB 022h, 072h, 0E5h, 018h, 0E3h, 0FEh, 081h, 020h, 00Ch, 02Ah, 072h, 0E5h, 011h, 008h, 000h, 019h, 022h, 072h, 0E5h, 018h, 0D3h, 0FEh, 020h, 020h
0077+  1142 E3 FE 81 20 
0077+  1146 0C 2A 72 E5 
0077+  114A 11 08 00 19 
0077+  114E 22 72 E5 18 
0077+  1152 D3 FE 20 20 
0078+  1156 09 3A 74 E5                      .DB 009h, 03Ah, 074h, 0E5h, 02Fh, 032h, 074h, 0E5h, 018h, 0C6h, 0FEh, 00Dh, 028h, 00Eh, 0FEh, 083h, 0CAh, 051h, 0E6h, 0FEh, 008h, 0C8h, 0FEh, 078h
0078+  115A 2F 32 74 E5 
0078+  115E 18 C6 FE 0D 
0078+  1162 28 0E FE 83 
0078+  1166 CA 51 E6 FE 
0078+  116A 08 C8 FE 78 
0079+  116E 28 1C 18 B7                      .DB 028h, 01Ch, 018h, 0B7h, 0AFh, 032h, 074h, 0E5h, 0CDh, 00Eh, 0E7h, 00Eh, 00Dh, 0CDh, 000h, 0F0h, 006h, 004h, 0CDh, 0BCh, 0E7h, 02Ah, 02Ch, 0E8h
0079+  1172 AF 32 74 E5 
0079+  1176 CD 0E E7 0E 
0079+  117A 0D CD 00 F0 
0079+  117E 06 04 CD BC 
0079+  1182 E7 2A 2C E8 
0080+  1186 22 72 E5 C3                      .DB 022h, 072h, 0E5h, 0C3h, 078h, 0E5h, 0AFh, 032h, 075h, 0E5h, 0CDh, 0C9h, 0F3h, 00Dh, 01Bh, 062h, 02Eh, 045h, 078h, 065h, 063h, 075h, 074h, 065h
0080+  118A 78 E5 AF 32 
0080+  118E 75 E5 CD C9 
0080+  1192 F3 0D 1B 62 
0080+  1196 2E 45 78 65 
0080+  119A 63 75 74 65 
0081+  119E 20 66 72 6F                      .DB 020h, 066h, 072h, 06Fh, 06Dh, 020h, 000h, 021h, 035h, 0E6h, 0E5h, 02Ah, 072h, 0E5h, 03Ah, 075h, 0E5h, 05Fh, 016h, 000h, 019h, 0E5h, 0EBh, 0CDh
0081+  11A2 6D 20 00 21 
0081+  11A6 35 E6 E5 2A 
0081+  11AA 72 E5 3A 75 
0081+  11AE E5 5F 16 00 
0081+  11B2 19 E5 EB CD 
0082+  11B6 C9 E8 CD C9                      .DB 0C9h, 0E8h, 0CDh, 0C9h, 0F3h, 020h, 059h, 02Fh, 04Eh, 03Fh, 01Bh, 04Bh, 000h, 0CDh, 09Ah, 0EFh, 0FEh, 079h, 028h, 009h, 0FEh, 06Eh, 020h, 0F5h
0082+  11BA F3 20 59 2F 
0082+  11BE 4E 3F 1B 4B 
0082+  11C2 00 CD 9A EF 
0082+  11C6 FE 79 28 09 
0082+  11CA FE 6E 20 F5 
0083+  11CE E1 E1 C3 78                      .DB 0E1h, 0E1h, 0C3h, 078h, 0E5h, 0CDh, 0C9h, 0F3h, 00Ah, 00Dh, 052h, 075h, 06Eh, 06Eh, 069h, 06Eh, 067h, 01Bh, 04Bh, 000h, 0C9h, 0F5h, 0CDh, 0C9h
0083+  11D2 E5 CD C9 F3 
0083+  11D6 0A 0D 52 75 
0083+  11DA 6E 6E 69 6E 
0083+  11DE 67 1B 4B 00 
0083+  11E2 C9 F5 CD C9 
0084+  11E6 F3 0A 0D 44                      .DB 0F3h, 00Ah, 00Dh, 044h, 06Fh, 06Eh, 065h, 02Eh, 020h, 041h, 03Dh, 000h, 0F1h, 0CDh, 0D0h, 0E8h, 0CDh, 0C9h, 0F3h, 01Bh, 04Bh, 000h, 0CDh, 09Ah
0084+  11EA 6F 6E 65 2E 
0084+  11EE 20 41 3D 00 
0084+  11F2 F1 CD D0 E8 
0084+  11F6 CD C9 F3 1B 
0084+  11FA 4B 00 CD 9A 
0085+  11FE EF AF 32 75                      .DB 0EFh, 0AFh, 032h, 075h, 0E5h, 0CDh, 00Eh, 0E7h, 03Ah, 075h, 0E5h, 087h, 04Fh, 03Ah, 074h, 0E5h, 0A7h, 020h, 004h, 03Eh, 005h, 081h, 04Fh, 03Ah
0085+  1202 E5 CD 0E E7 
0085+  1206 3A 75 E5 87 
0085+  120A 4F 3A 74 E5 
0085+  120E A7 20 04 3E 
0085+  1212 05 81 4F 3A 
0086+  1216 2D FF C6 1F                      .DB 02Dh, 0FFh, 0C6h, 01Fh, 032h, 07Dh, 0E6h, 079h, 0C6h, 020h, 032h, 07Eh, 0E6h, 0CDh, 0C9h, 0F3h, 01Bh, 062h, 027h, 01Bh, 059h, 000h, 000h, 000h
0086+  121A 32 7D E6 79 
0086+  121E C6 20 32 7E 
0086+  1222 E6 CD C9 F3 
0086+  1226 1B 62 27 1B 
0086+  122A 59 00 00 00 
0087+  122E 11 00 02 ED                      .DB 011h, 000h, 002h, 0EDh, 053h, 076h, 0E5h, 0CDh, 09Ah, 0EFh, 0FEh, 078h, 0CAh, 0E2h, 0E5h, 0FEh, 083h, 020h, 01Bh, 03Ah, 075h, 0E5h, 0FEh, 007h
0087+  1232 53 76 E5 CD 
0087+  1236 9A EF FE 78 
0087+  123A CA E2 E5 FE 
0087+  123E 83 20 1B 3A 
0087+  1242 75 E5 FE 07 
0088+  1246 28 03 3C 18                      .DB 028h, 003h, 03Ch, 018h, 0B5h, 0AFh, 032h, 075h, 0E5h, 011h, 008h, 000h, 02Ah, 072h, 0E5h, 019h, 022h, 072h, 0E5h, 0C3h, 055h, 0E6h, 0FEh, 082h
0088+  124A B5 AF 32 75 
0088+  124E E5 11 08 00 
0088+  1252 2A 72 E5 19 
0088+  1256 22 72 E5 C3 
0088+  125A 55 E6 FE 82 
0089+  125E 20 13 3A 75                      .DB 020h, 013h, 03Ah, 075h, 0E5h, 0A7h, 028h, 003h, 03Dh, 018h, 097h, 03Eh, 007h, 032h, 075h, 0E5h, 011h, 0F8h, 0FFh, 018h, 0DFh, 0FEh, 080h, 0CAh
0089+  1262 E5 A7 28 03 
0089+  1266 3D 18 97 3E 
0089+  126A 07 32 75 E5 
0089+  126E 11 F8 FF 18 
0089+  1272 DF FE 80 CA 
0090+  1276 C0 E6 FE 81                      .DB 0C0h, 0E6h, 0FEh, 081h, 0CAh, 0A1h, 0E6h, 0FEh, 008h, 0C2h, 0DFh, 0E6h, 03Ah, 077h, 0E5h, 0FEh, 002h, 0CAh, 078h, 0E5h, 0C3h, 055h, 0E6h, 0CDh
0090+  127A CA A1 E6 FE 
0090+  127E 08 C2 DF E6 
0090+  1282 3A 77 E5 FE 
0090+  1286 02 CA 78 E5 
0090+  128A C3 55 E6 CD 
0091+  128E F7 E8 38 A3                      .DB 0F7h, 0E8h, 038h, 0A3h, 04Fh, 0CDh, 007h, 0E9h, 0F5h, 0CDh, 000h, 0F0h, 0F1h, 0EDh, 05Bh, 076h, 0E5h, 0CBh, 023h, 0CBh, 023h, 0CBh, 023h, 0CBh
0091+  1292 4F CD 07 E9 
0091+  1296 F5 CD 00 F0 
0091+  129A F1 ED 5B 76 
0091+  129E E5 CB 23 CB 
0091+  12A2 23 CB 23 CB 
0092+  12A6 23 B3 5F 15                      .DB 023h, 0B3h, 05Fh, 015h, 020h, 085h, 03Ah, 075h, 0E5h, 04Fh, 006h, 000h, 02Ah, 072h, 0E5h, 009h, 073h, 0CDh, 00Eh, 0E7h, 018h, 085h, 00Eh, 00Dh
0092+  12AA 20 85 3A 75 
0092+  12AE E5 4F 06 00 
0092+  12B2 2A 72 E5 09 
0092+  12B6 73 CD 0E E7 
0092+  12BA 18 85 0E 0D 
0093+  12BE CD 00 F0 3A                      .DB 0CDh, 000h, 0F0h, 03Ah, 074h, 0E5h, 0A7h, 020h, 014h, 0CDh, 0C9h, 0F3h, 00Dh, 01Bh, 062h, 02Eh, 000h, 0EDh, 05Bh, 072h, 0E5h, 0CDh, 0C9h, 0E8h
0093+  12C2 74 E5 A7 20 
0093+  12C6 14 CD C9 F3 
0093+  12CA 0D 1B 62 2E 
0093+  12CE 00 ED 5B 72 
0093+  12D2 E5 CD C9 E8 
0094+  12D6 0E 20 CD 00                      .DB 00Eh, 020h, 0CDh, 000h, 0F0h, 0CDh, 0C9h, 0F3h, 01Bh, 062h, 027h, 000h, 02Ah, 072h, 0E5h, 006h, 008h, 07Eh, 0E5h, 0C5h, 0CDh, 0D0h, 0E8h, 0C1h
0094+  12DA F0 CD C9 F3 
0094+  12DE 1B 62 27 00 
0094+  12E2 2A 72 E5 06 
0094+  12E6 08 7E E5 C5 
0094+  12EA CD D0 E8 C1 
0095+  12EE E1 23 10 F5                      .DB 0E1h, 023h, 010h, 0F5h, 0CDh, 0C9h, 0F3h, 01Bh, 062h, 02Eh, 000h, 02Ah, 072h, 0E5h, 006h, 003h, 03Ah, 074h, 0E5h, 0A7h, 028h, 002h, 006h, 008h
0095+  12F2 CD C9 F3 1B 
0095+  12F6 62 2E 00 2A 
0095+  12FA 72 E5 06 03 
0095+  12FE 3A 74 E5 A7 
0095+  1302 28 02 06 08 
0096+  1306 7E FE 20 D2                      .DB 07Eh, 0FEh, 020h, 0D2h, 060h, 0E7h, 03Eh, 02Eh, 0FEh, 080h, 0DAh, 067h, 0E7h, 03Eh, 02Eh, 0E5h, 0C5h, 04Fh, 0CDh, 000h, 0F0h, 0C1h, 0E1h, 023h
0096+  130A 60 E7 3E 2E 
0096+  130E FE 80 DA 67 
0096+  1312 E7 3E 2E E5 
0096+  1316 C5 4F CD 00 
0096+  131A F0 C1 E1 23 
0097+  131E 10 E6 C9 3E                      .DB 010h, 0E6h, 0C9h, 03Eh, 001h, 04Fh, 0CDh, 0F4h, 0F2h, 021h, 080h, 000h, 022h, 0BAh, 0E7h, 054h, 05Dh, 013h, 03Eh, 0E5h, 077h, 001h, 07Fh, 000h
0097+  1322 01 4F CD F4 
0097+  1326 F2 21 80 00 
0097+  132A 22 BA E7 54 
0097+  132E 5D 13 3E E5 
0097+  1332 77 01 7F 00 
0098+  1336 ED B0 3E 02                      .DB 0EDh, 0B0h, 03Eh, 002h, 032h, 0B8h, 0E7h, 04Fh, 0CDh, 00Fh, 0F3h, 0AFh, 032h, 0B9h, 0E7h, 0FEh, 01Ah, 028h, 014h, 04Fh, 0CDh, 014h, 0F3h, 0EDh
0098+  133A 32 B8 E7 4F 
0098+  133E CD 0F F3 AF 
0098+  1342 32 B9 E7 FE 
0098+  1346 1A 28 14 4F 
0098+  134A CD 14 F3 ED 
0099+  134E 4B BA E7 CD                      .DB 04Bh, 0BAh, 0E7h, 0CDh, 019h, 0F3h, 0CDh, 057h, 0F3h, 03Ah, 0B9h, 0E7h, 03Ch, 018h, 0E5h, 03Ah, 0B8h, 0E7h, 0FEh, 04Fh, 0C8h, 03Ch, 018h, 0D4h
0099+  1352 19 F3 CD 57 
0099+  1356 F3 3A B9 E7 
0099+  135A 3C 18 E5 3A 
0099+  135E B8 E7 FE 4F 
0099+  1362 C8 3C 18 D4 
0100+  1366 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 078h, 032h, 001h, 0E8h, 021h, 000h, 000h, 022h, 02Ch, 0E8h, 0C5h, 0CDh, 0EBh, 0E8h, 0FEh, 008h, 028h, 034h, 04Fh, 0F5h
0100+  136A 78 32 01 E8 
0100+  136E 21 00 00 22 
0100+  1372 2C E8 C5 CD 
0100+  1376 EB E8 FE 08 
0100+  137A 28 34 4F F5 
0101+  137E CD 00 F0 F1                      .DB 0CDh, 000h, 0F0h, 0F1h, 0CDh, 007h, 0E9h, 02Ah, 02Ch, 0E8h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 015h, 0CBh, 014h
0101+  1382 CD 07 E9 2A 
0101+  1386 2C E8 CB 27 
0101+  138A CB 27 CB 27 
0101+  138E CB 27 CB 27 
0101+  1392 CB 15 CB 14 
0102+  1396 CB 27 CB 15                      .DB 0CBh, 027h, 0CBh, 015h, 0CBh, 014h, 0CBh, 027h, 0CBh, 015h, 0CBh, 014h, 0CBh, 027h, 0CBh, 015h, 0CBh, 014h, 022h, 02Ch, 0E8h, 0C1h, 010h, 0C6h
0102+  139A CB 14 CB 27 
0102+  139E CB 15 CB 14 
0102+  13A2 CB 27 CB 15 
0102+  13A6 CB 14 22 2C 
0102+  13AA E8 C1 10 C6 
0103+  13AE C9 00 C1 3A                      .DB 0C9h, 000h, 0C1h, 03Ah, 001h, 0E8h, 0B8h, 028h, 0BDh, 004h, 0C5h, 02Ah, 02Ch, 0E8h, 0CBh, 03Ch, 0CBh, 01Dh, 0CBh, 03Ch, 0CBh, 01Dh, 0CBh, 03Ch
0103+  13B2 01 E8 B8 28 
0103+  13B6 BD 04 C5 2A 
0103+  13BA 2C E8 CB 3C 
0103+  13BE CB 1D CB 3C 
0103+  13C2 CB 1D CB 3C 
0104+  13C6 CB 1D CB 3C                      .DB 0CBh, 01Dh, 0CBh, 03Ch, 0CBh, 01Dh, 022h, 02Ch, 0E8h, 0CDh, 0C9h, 0F3h, 01Bh, 044h, 020h, 01Bh, 044h, 000h, 018h, 09Bh, 000h, 000h, 0CDh, 09Ah
0104+  13CA CB 1D 22 2C 
0104+  13CE E8 CD C9 F3 
0104+  13D2 1B 44 20 1B 
0104+  13D6 44 00 18 9B 
0104+  13DA 00 00 CD 9A 
0105+  13DE EF FE 0D C8                      .DB 0EFh, 0FEh, 00Dh, 0C8h, 006h, 000h, 0FEh, 008h, 0CCh, 003h, 0E8h, 018h, 0F1h, 000h, 000h, 000h, 000h, 000h, 0AFh, 032h, 03Dh, 0E8h, 022h, 03Eh
0105+  13E2 06 00 FE 08 
0105+  13E6 CC 03 E8 18 
0105+  13EA F1 00 00 00 
0105+  13EE 00 00 AF 32 
0105+  13F2 3D E8 22 3E 
0106+  13F6 E8 CD 89 E8                      .DB 0E8h, 0CDh, 089h, 0E8h, 001h, 058h, 002h, 0CDh, 011h, 0E9h, 0CDh, 071h, 0EFh, 0A7h, 0C8h, 0CDh, 09Ah, 0EFh, 0FEh, 081h, 020h, 009h, 03Ah, 03Dh
0106+  13FA 01 58 02 CD 
0106+  13FE 11 E9 CD 71 
0106+  1402 EF A7 C8 CD 
0106+  1406 9A EF FE 81 
0106+  140A 20 09 3A 3D 
0107+  140E E8 3C 32 3D                      .DB 0E8h, 03Ch, 032h, 03Dh, 0E8h, 018h, 0E2h, 0FEh, 080h, 020h, 008h, 03Ah, 03Dh, 0E8h, 03Dh, 028h, 0D8h, 018h, 0EFh, 0FEh, 008h, 0C8h, 0FEh, 00Dh
0107+  1412 E8 18 E2 FE 
0107+  1416 80 20 08 3A 
0107+  141A 3D E8 3D 28 
0107+  141E D8 18 EF FE 
0107+  1422 08 C8 FE 0D 
0108+  1426 20 CF 3A 3D                      .DB 020h, 0CFh, 03Ah, 03Dh, 0E8h, 0A7h, 028h, 0C9h, 02Ah, 040h, 0E8h, 07Eh, 023h, 066h, 06Fh, 0E5h, 0C9h, 00Eh, 00Dh, 0CDh, 000h, 0F0h, 03Ah, 03Dh
0108+  142A E8 A7 28 C9 
0108+  142E 2A 40 E8 7E 
0108+  1432 23 66 6F E5 
0108+  1436 C9 0E 0D CD 
0108+  143A 00 F0 3A 3D 
0109+  143E E8 2A 3E E8                      .DB 0E8h, 02Ah, 03Eh, 0E8h, 0A7h, 028h, 012h, 047h, 07Eh, 023h, 0A7h, 020h, 0FBh, 022h, 040h, 0E8h, 07Eh, 023h, 05Eh, 023h, 0B3h, 028h, 019h, 010h
0109+  1442 A7 28 12 47 
0109+  1446 7E 23 A7 20 
0109+  144A FB 22 40 E8 
0109+  144E 7E 23 5E 23 
0109+  1452 B3 28 19 10 
0110+  1456 EF 7E A7 28                      .DB 0EFh, 07Eh, 0A7h, 028h, 009h, 04Fh, 0E5h, 0CDh, 000h, 0F0h, 0E1h, 023h, 018h, 0F3h, 00Eh, 01Bh, 0CDh, 000h, 0F0h, 00Eh, 04Bh, 0C3h, 000h, 0F0h
0110+  145A 09 4F E5 CD 
0110+  145E 00 F0 E1 23 
0110+  1462 18 F3 0E 1B 
0110+  1466 CD 00 F0 0E 
0110+  146A 4B C3 00 F0 
0111+  146E 3A 3D E8 3D                      .DB 03Ah, 03Dh, 0E8h, 03Dh, 032h, 03Dh, 0E8h, 018h, 0C0h, 0D5h, 07Ah, 0CDh, 0D0h, 0E8h, 0D1h, 07Bh, 04Fh, 0CBh, 03Fh, 0CBh, 03Fh, 0CBh, 03Fh, 0CBh
0111+  1472 32 3D E8 18 
0111+  1476 C0 D5 7A CD 
0111+  147A D0 E8 D1 7B 
0111+  147E 4F CB 3F CB 
0111+  1482 3F CB 3F CB 
0112+  1486 3F C5 CD DF                      .DB 03Fh, 0C5h, 0CDh, 0DFh, 0E8h, 0C1h, 079h, 0E6h, 00Fh, 0C6h, 090h, 027h, 0CEh, 040h, 027h, 04Fh, 0C3h, 000h, 0F0h, 0CDh, 09Ah, 0EFh, 0FEh, 008h
0112+  148A E8 C1 79 E6 
0112+  148E 0F C6 90 27 
0112+  1492 CE 40 27 4F 
0112+  1496 C3 00 F0 CD 
0112+  149A 9A EF FE 08 
0113+  149E C8 CD F7 E8                      .DB 0C8h, 0CDh, 0F7h, 0E8h, 038h, 0F5h, 0C9h, 0FEh, 030h, 0D8h, 0FEh, 03Ah, 03Fh, 0D0h, 0FEh, 061h, 0D8h, 0FEh, 067h, 0CBh, 0AFh, 03Fh, 0C9h, 0FEh
0113+  14A2 38 F5 C9 FE 
0113+  14A6 30 D8 FE 3A 
0113+  14AA 3F D0 FE 61 
0113+  14AE D8 FE 67 CB 
0113+  14B2 AF 3F C9 FE 
0114+  14B6 41 30 03 D6                      .DB 041h, 030h, 003h, 0D6h, 030h, 0C9h, 0D6h, 037h, 0C9h, 0EDh, 05Bh, 004h, 0FFh, 0C5h, 0D5h, 0CDh, 071h, 0EFh, 0D1h, 0C1h, 0A7h, 0C0h, 02Ah, 004h
0114+  14BA 30 C9 D6 37 
0114+  14BE C9 ED 5B 04 
0114+  14C2 FF C5 D5 CD 
0114+  14C6 71 EF D1 C1 
0114+  14CA A7 C0 2A 04 
0115+  14CE FF ED 52 ED                      .DB 0FFh, 0EDh, 052h, 0EDh, 042h, 038h, 0EEh, 0C9h, 001h, 000h, 000h, 057h, 03Ah, 004h, 0FFh, 0A2h, 0C8h, 003h, 079h, 0B0h, 020h, 0F6h, 0C9h, 0F3h
0115+  14D2 42 38 EE C9 
0115+  14D6 01 00 00 57 
0115+  14DA 3A 04 FF A2 
0115+  14DE C8 03 79 B0 
0115+  14E2 20 F6 C9 F3 
0116+  14E6 E5 2A 04 FF                      .DB 0E5h, 02Ah, 004h, 0FFh, 023h, 022h, 004h, 0FFh, 0E1h, 0FBh, 0EDh, 04Dh, 006h, 010h, 0AFh, 029h, 017h, 0B9h, 038h, 002h, 02Ch, 091h, 010h, 0F7h
0116+  14EA 23 22 04 FF 
0116+  14EE E1 FB ED 4D 
0116+  14F2 06 10 AF 29 
0116+  14F6 17 B9 38 02 
0116+  14FA 2C 91 10 F7 
0117+  14FE C9 AF 21 89                      .DB 0C9h, 0AFh, 021h, 089h, 0E9h, 006h, 005h, 077h, 023h, 010h, 0FCh, 006h, 010h, 00Eh, 005h, 021h, 089h, 0E9h, 07Eh, 0FEh, 005h, 038h, 003h, 0C6h
0117+  1502 E9 06 05 77 
0117+  1506 23 10 FC 06 
0117+  150A 10 0E 05 21 
0117+  150E 89 E9 7E FE 
0117+  1512 05 38 03 C6 
0118+  1516 03 77 23 0D                      .DB 003h, 077h, 023h, 00Dh, 020h, 0F4h, 021h, 089h, 0E9h, 00Eh, 005h, 0CBh, 023h, 0CBh, 012h, 07Eh, 0CBh, 017h, 0CBh, 067h, 028h, 003h, 0E6h, 00Fh
0118+  151A 20 F4 21 89 
0118+  151E E9 0E 05 CB 
0118+  1522 23 CB 12 7E 
0118+  1526 CB 17 CB 67 
0118+  152A 28 03 E6 0F 
0119+  152E 37 77 23 0D                      .DB 037h, 077h, 023h, 00Dh, 020h, 0F1h, 010h, 0D5h, 0C9h, 000h, 000h, 000h, 000h, 000h, 0CDh, 073h, 0EAh, 00Eh, 00Dh, 0CDh, 000h, 0F0h, 03Ah, 0E4h
0119+  1532 20 F1 10 D5 
0119+  1536 C9 00 00 00 
0119+  153A 00 00 CD 73 
0119+  153E EA 0E 0D CD 
0119+  1542 00 F0 3A E4 
0120+  1546 FC 21 27 EA                      .DB 0FCh, 021h, 027h, 0EAh, 0E6h, 007h, 04Fh, 0CDh, 011h, 0EAh, 0CDh, 0F2h, 0E9h, 03Ah, 0E5h, 0FCh, 0E6h, 03Fh, 0CDh, 0F7h, 0E9h, 0CDh, 0F2h, 0E9h
0120+  154A E6 07 4F CD 
0120+  154E 11 EA CD F2 
0120+  1552 E9 3A E5 FC 
0120+  1556 E6 3F CD F7 
0120+  155A E9 CD F2 E9 
0121+  155E 3A E6 FC 21                      .DB 03Ah, 0E6h, 0FCh, 021h, 043h, 0EAh, 0E6h, 01Fh, 0CBh, 067h, 028h, 002h, 0D6h, 006h, 04Fh, 0CDh, 011h, 0EAh, 0CDh, 0F2h, 0E9h, 03Eh, 020h, 0CDh
0121+  1562 43 EA E6 1F 
0121+  1566 CB 67 28 02 
0121+  156A D6 06 4F CD 
0121+  156E 11 EA CD F2 
0121+  1572 E9 3E 20 CD 
0122+  1576 F7 E9 3A E7                      .DB 0F7h, 0E9h, 03Ah, 0E7h, 0FCh, 0CDh, 0F7h, 0E9h, 0CDh, 0F2h, 0E9h, 03Ah, 0E3h, 0FCh, 0E6h, 03Fh, 0CDh, 0F7h, 0E9h, 0CDh, 0F2h, 0E9h, 03Ah, 0E2h
0122+  157A FC CD F7 E9 
0122+  157E CD F2 E9 3A 
0122+  1582 E3 FC E6 3F 
0122+  1586 CD F7 E9 CD 
0122+  158A F2 E9 3A E2 
0123+  158E FC E6 7F CD                      .DB 0FCh, 0E6h, 07Fh, 0CDh, 0F7h, 0E9h, 0CDh, 0F2h, 0E9h, 03Ah, 0E1h, 0FCh, 0E6h, 07Fh, 0CDh, 0F7h, 0E9h, 0C9h, 00Eh, 020h, 0C3h, 000h, 0F0h, 04Fh
0123+  1592 F7 E9 CD F2 
0123+  1596 E9 3A E1 FC 
0123+  159A E6 7F CD F7 
0123+  159E E9 C9 0E 20 
0123+  15A2 C3 00 F0 4F 
0124+  15A6 CB 3F CB 3F                      .DB 0CBh, 03Fh, 0CBh, 03Fh, 0CBh, 03Fh, 0CBh, 03Fh, 0C6h, 030h, 0C5h, 04Fh, 0CDh, 000h, 0F0h, 0C1h, 079h, 0E6h, 00Fh, 0C6h, 030h, 04Fh, 0C3h, 000h
0124+  15AA CB 3F CB 3F 
0124+  15AE C6 30 C5 4F 
0124+  15B2 CD 00 F0 C1 
0124+  15B6 79 E6 0F C6 
0124+  15BA 30 4F C3 00 
0125+  15BE F0 0D 20 0C                      .DB 0F0h, 00Dh, 020h, 00Ch, 07Eh, 023h, 0A7h, 0C8h, 04Fh, 0E5h, 0CDh, 000h, 0F0h, 0E1h, 018h, 0F4h, 07Eh, 023h, 0A7h, 020h, 0FBh, 018h, 0EAh, 04Dh
0125+  15C2 7E 23 A7 C8 
0125+  15C6 4F E5 CD 00 
0125+  15CA F0 E1 18 F4 
0125+  15CE 7E 23 A7 20 
0125+  15D2 FB 18 EA 4D 
0126+  15D6 6F 6E 00 54                      .DB 06Fh, 06Eh, 000h, 054h, 075h, 065h, 000h, 057h, 065h, 064h, 000h, 054h, 068h, 075h, 000h, 046h, 072h, 069h, 000h, 053h, 061h, 074h, 000h, 053h
0126+  15DA 75 65 00 57 
0126+  15DE 65 64 00 54 
0126+  15E2 68 75 00 46 
0126+  15E6 72 69 00 53 
0126+  15EA 61 74 00 53 
0127+  15EE 75 6E 00 4A                      .DB 075h, 06Eh, 000h, 04Ah, 061h, 06Eh, 000h, 046h, 065h, 062h, 000h, 04Dh, 061h, 072h, 000h, 041h, 070h, 072h, 000h, 04Dh, 061h, 079h, 000h, 04Ah
0127+  15F2 61 6E 00 46 
0127+  15F6 65 62 00 4D 
0127+  15FA 61 72 00 41 
0127+  15FE 70 72 00 4D 
0127+  1602 61 79 00 4A 
0128+  1606 75 6E 00 4A                      .DB 075h, 06Eh, 000h, 04Ah, 075h, 06Ch, 000h, 041h, 075h, 067h, 000h, 053h, 065h, 070h, 000h, 04Fh, 063h, 074h, 000h, 04Eh, 06Fh, 076h, 000h, 044h
0128+  160A 75 6C 00 41 
0128+  160E 75 67 00 53 
0128+  1612 65 70 00 4F 
0128+  1616 63 74 00 4E 
0128+  161A 6F 76 00 44 
0129+  161E 65 63 00 26                      .DB 065h, 063h, 000h, 026h, 06Fh, 02Eh, 000h, 0CDh, 01Bh, 0F9h, 030h, 018h, 021h, 0E1h, 0FCh, 006h, 007h, 018h, 008h, 0C5h, 0CDh, 070h, 0F9h, 0CDh
0129+  1622 6F 2E 00 CD 
0129+  1626 1B F9 30 18 
0129+  162A 21 E1 FC 06 
0129+  162E 07 18 08 C5 
0129+  1632 CD 70 F9 CD 
0130+  1636 5D F9 C1 77                      .DB 05Dh, 0F9h, 0C1h, 077h, 023h, 010h, 0F4h, 0CDh, 004h, 0F9h, 037h, 0C9h, 0CDh, 004h, 0F9h, 0CDh, 0C9h, 0F3h, 045h, 072h, 072h, 06Fh, 072h, 020h
0130+  163A 23 10 F4 CD 
0130+  163E 04 F9 37 C9 
0130+  1642 CD 04 F9 CD 
0130+  1646 C9 F3 45 72 
0130+  164A 72 6F 72 20 
0131+  164E 67 65 74 74                      .DB 067h, 065h, 074h, 074h, 069h, 06Eh, 067h, 020h, 074h, 069h, 06Dh, 065h, 00Dh, 00Ah, 000h, 0AFh, 0C9h, 001h, 011h, 000h, 009h, 0E5h, 0DDh, 0E1h
0131+  1652 69 6E 67 20 
0131+  1656 74 69 6D 65 
0131+  165A 0D 0A 00 AF 
0131+  165E C9 01 11 00 
0131+  1662 09 E5 DD E1 
0132+  1666 DD 77 F7 DD                      .DB 0DDh, 077h, 0F7h, 0DDh, 077h, 0EFh, 0AFh, 0DDh, 077h, 0F0h, 03Dh, 0DDh, 073h, 0F8h, 0DDh, 072h, 0F9h, 0AFh, 0DDh, 077h, 0FAh, 0FDh, 021h, 0FFh
0132+  166A 77 EF AF DD 
0132+  166E 77 F0 3D DD 
0132+  1672 73 F8 DD 72 
0132+  1676 F9 AF DD 77 
0132+  167A FA FD 21 FF 
0133+  167E FF CD 5E ED                      .DB 0FFh, 0CDh, 05Eh, 0EDh, 020h, 007h, 03Eh, 043h, 0CDh, 089h, 0EDh, 018h, 0F4h, 0FEh, 001h, 0C2h, 0EAh, 0EAh, 0DDh, 0E5h, 0E1h, 001h, 080h, 000h
0133+  1682 20 07 3E 43 
0133+  1686 CD 89 ED 18 
0133+  168A F4 FE 01 C2 
0133+  168E EA EA DD E5 
0133+  1692 E1 01 80 00 
0134+  1696 18 40 FE 02                      .DB 018h, 040h, 0FEh, 002h, 020h, 007h, 062h, 06Bh, 001h, 000h, 004h, 018h, 035h, 0FEh, 004h, 020h, 00Ah, 03Eh, 006h, 0CDh, 089h, 0EDh, 0DDh, 034h
0134+  169A 20 07 62 6B 
0134+  169E 01 00 04 18 
0134+  16A2 35 FE 04 20 
0134+  16A6 0A 3E 06 CD 
0134+  16AA 89 ED DD 34 
0135+  16AE F0 18 C6 FE                      .DB 0F0h, 018h, 0C6h, 0FEh, 018h, 020h, 01Eh, 0CDh, 069h, 0EDh, 0FEh, 018h, 03Eh, 004h, 020h, 010h, 03Eh, 006h, 0CDh, 089h, 0EDh, 0CDh, 05Eh, 0EDh
0135+  16B2 18 20 1E CD 
0135+  16B6 69 ED FE 18 
0135+  16BA 3E 04 20 10 
0135+  16BE 3E 06 CD 89 
0135+  16C2 ED CD 5E ED 
0136+  16C6 20 FB 3E 03                      .DB 020h, 0FBh, 03Eh, 003h, 0A7h, 0C9h, 03Eh, 005h, 04Fh, 03Eh, 004h, 0A7h, 0C9h, 04Fh, 03Eh, 002h, 0A7h, 0C9h, 0DDh, 077h, 0FBh, 0DDh, 07Eh, 0F7h
0136+  16CA A7 C9 3E 05 
0136+  16CE 4F 3E 04 A7 
0136+  16D2 C9 4F 3E 02 
0136+  16D6 A7 C9 DD 77 
0136+  16DA FB DD 7E F7 
0137+  16DE FE FF 28 02                      .DB 0FEh, 0FFh, 028h, 002h, 0D3h, 071h, 0AFh, 0DDh, 077h, 0F5h, 0DDh, 077h, 0F6h, 0DDh, 0BEh, 0FAh, 020h, 007h, 03Eh, 001h, 0DDh, 096h, 0FBh, 020h
0137+  16E2 D3 71 AF DD 
0137+  16E6 77 F5 DD 77 
0137+  16EA F6 DD BE FA 
0137+  16EE 20 07 3E 01 
0137+  16F2 DD 96 FB 20 
0138+  16F6 D5 DD 77 FF                      .DB 0D5h, 0DDh, 077h, 0FFh, 0DDh, 077h, 0FEh, 0CDh, 069h, 0EDh, 0DDh, 077h, 0FCh, 0CDh, 069h, 0EDh, 0DDh, 077h, 0FDh, 07Dh, 0A7h, 020h, 012h, 07Ch
0138+  16FA DD 77 FE CD 
0138+  16FE 69 ED DD 77 
0138+  1702 FC CD 69 ED 
0138+  1706 DD 77 FD 7D 
0138+  170A A7 20 12 7C 
0139+  170E FE 80 20 0D                      .DB 0FEh, 080h, 020h, 00Dh, 0DDh, 07Eh, 0F7h, 03Ch, 028h, 007h, 0DDh, 077h, 0F7h, 0D3h, 071h, 026h, 040h, 0CDh, 069h, 0EDh, 077h, 0CDh, 02Bh, 0EDh
0139+  1712 DD 7E F7 3C 
0139+  1716 28 07 DD 77 
0139+  171A F7 D3 71 26 
0139+  171E 40 CD 69 ED 
0139+  1722 77 CD 2B ED 
0140+  1726 C5 01 FF FF                      .DB 0C5h, 001h, 0FFh, 0FFh, 0FDh, 009h, 0C1h, 038h, 010h, 0DDh, 035h, 0F4h, 0F2h, 091h, 0EBh, 0DDh, 034h, 0F4h, 0FDh, 023h, 021h, 05Dh, 0EDh, 018h
0140+  172A FD 09 C1 38 
0140+  172E 10 DD 35 F4 
0140+  1732 F2 91 EB DD 
0140+  1736 34 F4 FD 23 
0140+  173A 21 5D ED 18 
0141+  173E 09 DD 34 F5                      .DB 009h, 0DDh, 034h, 0F5h, 020h, 003h, 0DDh, 034h, 0F6h, 023h, 00Bh, 078h, 0B1h, 020h, 0BCh, 0AFh, 0CDh, 02Bh, 0EDh, 0AFh, 0CDh, 02Bh, 0EDh, 0CDh
0141+  1742 20 03 DD 34 
0141+  1746 F6 23 0B 78 
0141+  174A B1 20 BC AF 
0141+  174E CD 2B ED AF 
0141+  1752 CD 2B ED CD 
0142+  1756 69 ED 47 CD                      .DB 069h, 0EDh, 047h, 0CDh, 069h, 0EDh, 04Fh, 0DDh, 07Eh, 0FCh, 02Fh, 0DDh, 0BEh, 0FDh, 03Eh, 001h, 0C2h, 020h, 0EBh, 0DDh, 07Eh, 0FFh, 0B8h, 03Eh
0142+  175A 69 ED 4F DD 
0142+  175E 7E FC 2F DD 
0142+  1762 BE FD 3E 01 
0142+  1766 C2 20 EB DD 
0142+  176A 7E FF B8 3E 
0143+  176E 02 C2 20 EB                      .DB 002h, 0C2h, 020h, 0EBh, 0DDh, 07Eh, 0FEh, 0B9h, 03Eh, 003h, 0C2h, 020h, 0EBh, 0DDh, 07Eh, 0FCh, 0DDh, 0BEh, 0FAh, 020h, 023h, 0DDh, 034h, 0FAh
0143+  1772 DD 7E FE B9 
0143+  1776 3E 03 C2 20 
0143+  177A EB DD 7E FC 
0143+  177E DD BE FA 20 
0143+  1782 23 DD 34 FA 
0144+  1786 A7 28 4A DD                      .DB 0A7h, 028h, 04Ah, 0DDh, 07Eh, 0FBh, 0FEh, 001h, 020h, 00Ch, 0DDh, 04Eh, 0F5h, 006h, 000h, 0DDh, 0E5h, 0E1h, 0EDh, 0B0h, 018h, 002h, 054h, 05Dh
0144+  178A 7E FB FE 01 
0144+  178E 20 0C DD 4E 
0144+  1792 F5 06 00 DD 
0144+  1796 E5 E1 ED B0 
0144+  179A 18 02 54 5D 
0145+  179E 3E 06 CD 89                      .DB 03Eh, 006h, 0CDh, 089h, 0EDh, 0C3h, 0D6h, 0EAh, 0AFh, 0EDh, 052h, 030h, 00Dh, 0DDh, 07Eh, 0F7h, 0FEh, 0FFh, 028h, 006h, 03Dh, 0DDh, 077h, 0F7h
0145+  17A2 ED C3 D6 EA 
0145+  17A6 AF ED 52 30 
0145+  17AA 0D DD 7E F7 
0145+  17AE FE FF 28 06 
0145+  17B2 3D DD 77 F7 
0146+  17B6 D3 71 DD 4E                      .DB 0D3h, 071h, 0DDh, 04Eh, 0F5h, 0DDh, 046h, 0F6h, 0FDh, 0E5h, 0E1h, 009h, 030h, 003h, 0DDh, 034h, 0F4h, 0E5h, 0FDh, 0E1h, 0CDh, 05Eh, 0EDh, 020h
0146+  17BA F5 DD 46 F6 
0146+  17BE FD E5 E1 09 
0146+  17C2 30 03 DD 34 
0146+  17C6 F4 E5 FD E1 
0146+  17CA CD 5E ED 20 
0147+  17CE FB 3E 15 18                      .DB 0FBh, 03Eh, 015h, 018h, 0CDh, 0DDh, 0E5h, 0E1h, 07Eh, 0A7h, 020h, 009h, 03Eh, 006h, 0CDh, 089h, 0EDh, 03Eh, 000h, 0A7h, 0C9h, 0DDh, 07Eh, 0F0h
0147+  17D2 CD DD E5 E1 
0147+  17D6 7E A7 20 09 
0147+  17DA 3E 06 CD 89 
0147+  17DE ED 3E 00 A7 
0147+  17E2 C9 DD 7E F0 
0148+  17E6 A7 28 04 3E                      .DB 0A7h, 028h, 004h, 03Eh, 008h, 0A7h, 0C9h, 07Eh, 023h, 0A7h, 028h, 071h, 0FEh, 05Fh, 020h, 0F7h, 07Eh, 04Fh, 023h, 0FEh, 06Dh, 020h, 007h, 006h
0148+  17EA 08 A7 C9 7E 
0148+  17EE 23 A7 28 71 
0148+  17F2 FE 5F 20 F7 
0148+  17F6 7E 4F 23 FE 
0148+  17FA 6D 20 07 06 
0149+  17FE 04 11 00 00                      .DB 004h, 011h, 000h, 000h, 018h, 009h, 0FEh, 070h, 020h, 0E7h, 006h, 002h, 011h, 000h, 000h, 07Eh, 023h, 0D6h, 030h, 038h, 048h, 0FEh, 00Ah, 038h
0149+  1802 18 09 FE 70 
0149+  1806 20 E7 06 02 
0149+  180A 11 00 00 7E 
0149+  180E 23 D6 30 38 
0149+  1812 48 FE 0A 38 
0150+  1816 08 D6 07 38                      .DB 008h, 0D6h, 007h, 038h, 040h, 0FEh, 010h, 030h, 03Ch, 0E5h, 062h, 06Bh, 029h, 029h, 029h, 029h, 0B5h, 054h, 05Fh, 0E1h, 010h, 0E1h, 079h, 0FEh
0150+  181A 40 FE 10 30 
0150+  181E 3C E5 62 6B 
0150+  1822 29 29 29 29 
0150+  1826 B5 54 5F E1 
0150+  182A 10 E1 79 FE 
0151+  182E 70 20 12 DD                      .DB 070h, 020h, 012h, 0DDh, 07Eh, 0F7h, 0FEh, 0FFh, 020h, 0B5h, 0DDh, 073h, 0EFh, 0DDh, 073h, 0F7h, 011h, 000h, 040h, 018h, 010h, 03Eh, 0FFh, 0DDh
0151+  1832 7E F7 FE FF 
0151+  1836 20 B5 DD 73 
0151+  183A EF DD 73 F7 
0151+  183E 11 00 40 18 
0151+  1842 10 3E FF DD 
0152+  1846 BE F8 20 A3                      .DB 0BEh, 0F8h, 020h, 0A3h, 0DDh, 0BEh, 0F9h, 020h, 09Eh, 0DDh, 036h, 0EFh, 0FEh, 0DDh, 073h, 0F8h, 0DDh, 072h, 0F9h, 018h, 092h, 0DDh, 05Eh, 0F8h
0152+  184A DD BE F9 20 
0152+  184E 9E DD 36 EF 
0152+  1852 FE DD 73 F8 
0152+  1856 DD 72 F9 18 
0152+  185A 92 DD 5E F8 
0153+  185E DD 56 F9 18                      .DB 0DDh, 056h, 0F9h, 018h, 08Ah, 03Eh, 0FFh, 0DDh, 0BEh, 0F8h, 020h, 009h, 0DDh, 0BEh, 0F9h, 020h, 004h, 03Eh, 006h, 0A7h, 0C9h, 03Eh, 0FFh, 0DDh
0153+  1862 8A 3E FF DD 
0153+  1866 BE F8 20 09 
0153+  186A DD BE F9 20 
0153+  186E 04 3E 06 A7 
0153+  1872 C9 3E FF DD 
0154+  1876 77 F1 DD 77                      .DB 077h, 0F1h, 0DDh, 077h, 0F2h, 0DDh, 077h, 0F3h, 0DDh, 077h, 0F4h, 0FDh, 021h, 0FFh, 0FFh, 044h, 04Dh, 021h, 000h, 000h, 00Ah, 0A7h, 0CAh, 0F0h
0154+  187A F2 DD 77 F3 
0154+  187E DD 77 F4 FD 
0154+  1882 21 FF FF 44 
0154+  1886 4D 21 00 00 
0154+  188A 0A A7 CA F0 
0155+  188E EB 0A 03 A7                      .DB 0EBh, 00Ah, 003h, 0A7h, 028h, 02Fh, 0FEh, 020h, 028h, 02Bh, 0D6h, 030h, 038h, 039h, 0FEh, 00Ah, 030h, 035h, 0C5h, 0D5h, 0F5h, 0EBh, 03Eh, 00Ah
0155+  1892 28 2F FE 20 
0155+  1896 28 2B D6 30 
0155+  189A 38 39 FE 0A 
0155+  189E 30 35 C5 D5 
0155+  18A2 F5 EB 3E 0A 
0156+  18A6 01 00 08 61                      .DB 001h, 000h, 008h, 061h, 069h, 029h, 017h, 030h, 002h, 019h, 089h, 010h, 0F8h, 0DDh, 077h, 0F3h, 0F1h, 05Fh, 051h, 019h, 030h, 003h, 0DDh, 034h
0156+  18AA 69 29 17 30 
0156+  18AE 02 19 89 10 
0156+  18B2 F8 DD 77 F3 
0156+  18B6 F1 5F 51 19 
0156+  18BA 30 03 DD 34 
0157+  18BE F3 D1 C1 18                      .DB 0F3h, 0D1h, 0C1h, 018h, 0CCh, 0E5h, 0FDh, 0E1h, 0DDh, 075h, 0F1h, 0DDh, 074h, 0F2h, 0DDh, 07Eh, 0F3h, 0DDh, 077h, 0F4h, 0C3h, 0F0h, 0EBh, 03Eh
0157+  18C2 CC E5 FD E1 
0157+  18C6 DD 75 F1 DD 
0157+  18CA 74 F2 DD 7E 
0157+  18CE F3 DD 77 F4 
0157+  18D2 C3 F0 EB 3E 
0158+  18D6 05 A7 C9 E5                      .DB 005h, 0A7h, 0C9h, 0E5h, 0C5h, 006h, 001h, 04Fh, 0DDh, 066h, 0FFh, 0DDh, 06Eh, 0FEh, 029h, 0F5h, 0CBh, 021h, 0CBh, 010h, 030h, 002h, 0CBh, 0C1h
0158+  18DA C5 06 01 4F 
0158+  18DE DD 66 FF DD 
0158+  18E2 6E FE 29 F5 
0158+  18E6 CB 21 CB 10 
0158+  18EA 30 02 CB C1 
0159+  18EE CB 40 28 01                      .DB 0CBh, 040h, 028h, 001h, 023h, 0F1h, 030h, 008h, 03Eh, 021h, 0ADh, 06Fh, 03Eh, 010h, 0ACh, 067h, 0CBh, 041h, 028h, 0E2h, 0DDh, 074h, 0FFh, 0DDh
0159+  18F2 23 F1 30 08 
0159+  18F6 3E 21 AD 6F 
0159+  18FA 3E 10 AC 67 
0159+  18FE CB 41 28 E2 
0159+  1902 DD 74 FF DD 
0160+  1906 75 FE C1 E1                      .DB 075h, 0FEh, 0C1h, 0E1h, 0C9h, 000h, 021h, 067h, 0EDh, 0E5h, 0CDh, 069h, 0EDh, 0E1h, 0C9h, 0AFh, 0C9h, 0C5h, 001h, 050h, 0C3h, 0DBh, 025h, 0CBh
0160+  190A C9 00 21 67 
0160+  190E ED E5 CD 69 
0160+  1912 ED E1 C9 AF 
0160+  1916 C9 C5 01 50 
0160+  191A C3 DB 25 CB 
0161+  191E 47 20 12 78                      .DB 047h, 020h, 012h, 078h, 006h, 00Ah, 0A7h, 010h, 0FDh, 047h, 00Bh, 078h, 0B1h, 020h, 0EEh, 0C1h, 0C1h, 03Eh, 001h, 0A7h, 0C9h, 0DBh, 020h, 0C1h
0161+  1922 06 0A A7 10 
0161+  1926 FD 47 0B 78 
0161+  192A B1 20 EE C1 
0161+  192E C1 3E 01 A7 
0161+  1932 C9 DB 20 C1 
0162+  1936 C9 C5 F5 01                      .DB 0C9h, 0C5h, 0F5h, 001h, 050h, 0C3h, 0DBh, 025h, 0CBh, 06Fh, 0C2h, 0A2h, 0EDh, 00Bh, 078h, 0B1h, 0C2h, 08Eh, 0EDh, 0F1h, 0C1h, 0C1h, 03Eh, 007h
0162+  193A 50 C3 DB 25 
0162+  193E CB 6F C2 A2 
0162+  1942 ED 0B 78 B1 
0162+  1946 C2 8E ED F1 
0162+  194A C1 C1 3E 07 
0163+  194E A7 C9 F1 C1                      .DB 0A7h, 0C9h, 0F1h, 0C1h, 0D3h, 020h, 0C9h, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh
0163+  1952 D3 20 C9 FF 
0163+  1956 FF FF FF FF 
0163+  195A FF FF FF FF 
0163+  195E FF FF FF FF 
0163+  1962 FF FF FF FF 
0164+  1966 FF FF FF FF                      .DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh
0164+  196A FF FF FF FF 
0164+  196E FF FF FF FF 
0164+  1972 FF FF FF FF 
0164+  1976 FF FF FF FF 
0164+  197A FF FF FF FF 
0165+  197E FF FF FF FF                      .DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh
0165+  1982 FF FF FF FF 
0165+  1986 FF FF FF FF 
0165+  198A FF FF FF FF 
0165+  198E FF FF FF FF 
0165+  1992 FF FF FF FF 
0166+  1996 FF FF FF FF                      .DB 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh, 0FFh
0166+  199A FF FF FF FF 
0166+  199E FF FF FF FF 
0166+  19A2 FF FF FF FF 
0166+  19A6 FF FF FF FF 
0166+  19AA FF FF FF FF 
0167+  19AE C3 F1 EE C3                      .DB 0C3h, 0F1h, 0EEh, 0C3h, 008h, 0EFh, 0C3h, 071h, 0EFh, 0C3h, 09Ah, 0EFh, 0C3h, 000h, 0F0h, 0C3h, 0EFh, 0F2h, 0C3h, 0F1h, 0F2h, 0C3h, 0F3h, 0F2h
0167+  19B2 08 EF C3 71 
0167+  19B6 EF C3 9A EF 
0167+  19BA C3 00 F0 C3 
0167+  19BE EF F2 C3 F1 
0167+  19C2 F2 C3 F3 F2 
0168+  19C6 C3 0D F3 C3                      .DB 0C3h, 00Dh, 0F3h, 0C3h, 0F4h, 0F2h, 0C3h, 00Fh, 0F3h, 0C3h, 014h, 0F3h, 0C3h, 019h, 0F3h, 0C3h, 01Eh, 0F3h, 0C3h, 057h, 0F3h, 0C3h, 0C4h, 0F3h
0168+  19CA F4 F2 C3 0F 
0168+  19CE F3 C3 14 F3 
0168+  19D2 C3 19 F3 C3 
0168+  19D6 1E F3 C3 57 
0168+  19DA F3 C3 C4 F3 
0169+  19DE C3 C6 F3 00                      .DB 0C3h, 0C6h, 0F3h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 071h, 0EEh, 053h, 0EEh, 000h, 000h, 044h, 0FFh, 000h, 000h, 000h, 000h, 000h
0169+  19E2 00 00 00 00 
0169+  19E6 00 00 00 71 
0169+  19EA EE 53 EE 00 
0169+  19EE 00 44 FF 00 
0169+  19F2 00 00 00 00 
0170+  19F6 00 00 00 71                      .DB 000h, 000h, 000h, 071h, 0EEh, 062h, 0EEh, 000h, 000h, 064h, 0FFh, 01Ah, 000h, 003h, 007h, 000h, 0F8h, 000h, 03Fh, 000h, 0C0h, 000h, 000h, 000h
0170+  19FA EE 62 EE 00 
0170+  19FE 00 64 FF 1A 
0170+  1A02 00 03 07 00 
0170+  1A06 F8 00 3F 00 
0170+  1A0A C0 00 00 00 
0171+  1A0E 02 00 1A 00                      .DB 002h, 000h, 01Ah, 000h, 003h, 007h, 000h, 0F8h, 000h, 03Fh, 000h, 0C0h, 000h, 000h, 000h, 002h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0171+  1A12 03 07 00 F8 
0171+  1A16 00 3F 00 C0 
0171+  1A1A 00 00 00 02 
0171+  1A1E 00 00 00 00 
0171+  1A22 00 00 00 00 
0172+  1A26 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0172+  1A2A 00 00 00 00 
0172+  1A2E 00 00 00 00 
0172+  1A32 00 00 00 00 
0172+  1A36 00 00 00 00 
0172+  1A3A 00 00 00 00 
0173+  1A3E 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0173+  1A42 00 00 00 00 
0173+  1A46 00 00 00 00 
0173+  1A4A 00 00 00 00 
0173+  1A4E 00 00 00 00 
0173+  1A52 00 00 00 00 
0174+  1A56 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0174+  1A5A 00 00 00 00 
0174+  1A5E 00 00 00 00 
0174+  1A62 00 00 00 00 
0174+  1A66 00 00 00 00 
0174+  1A6A 00 00 00 00 
0175+  1A6E 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0175+  1A72 00 00 00 00 
0175+  1A76 00 00 00 00 
0175+  1A7A 00 00 00 00 
0175+  1A7E 00 00 00 00 
0175+  1A82 00 00 00 00 
0176+  1A86 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0176+  1A8A 00 00 00 00 
0176+  1A8E 00 00 00 00 
0176+  1A92 00 00 00 00 
0176+  1A96 00 00 00 00 
0176+  1A9A 00 00 00 00 
0177+  1A9E 00 F3 31 00                      .DB 000h, 0F3h, 031h, 000h, 000h, 021h, 000h, 0EEh, 022h, 0FEh, 0FFh, 0CDh, 0E1h, 0F3h, 0AFh, 032h, 004h, 000h, 03Ch, 032h, 003h, 000h, 018h, 007h
0177+  1AA2 00 21 00 EE 
0177+  1AA6 22 FE FF CD 
0177+  1AAA E1 F3 AF 32 
0177+  1AAE 04 00 3C 32 
0177+  1AB2 03 00 18 07 
0178+  1AB6 F3 31 00 00                      .DB 0F3h, 031h, 000h, 000h, 0CDh, 031h, 0EFh, 0FBh, 021h, 080h, 000h, 022h, 03Fh, 0FFh, 03Eh, 0C3h, 032h, 000h, 000h, 021h, 003h, 0EEh, 022h, 001h
0178+  1ABA CD 31 EF FB 
0178+  1ABE 21 80 00 22 
0178+  1AC2 3F FF 3E C3 
0178+  1AC6 32 00 00 21 
0178+  1ACA 03 EE 22 01 
0179+  1ACE 00 32 05 00                      .DB 000h, 032h, 005h, 000h, 021h, 006h, 0E0h, 022h, 006h, 000h, 03Ah, 004h, 000h, 04Fh, 0C3h, 000h, 0D8h, 00Eh, 000h, 0CDh, 0F4h, 0F2h, 0CDh, 00Dh
0179+  1AD2 21 06 E0 22 
0179+  1AD6 06 00 3A 04 
0179+  1ADA 00 4F C3 00 
0179+  1ADE D8 0E 00 CD 
0179+  1AE2 F4 F2 CD 0D 
0180+  1AE6 F3 06 2C 0E                      .DB 0F3h, 006h, 02Ch, 00Eh, 000h, 016h, 000h, 021h, 000h, 0D8h, 0C5h, 0D5h, 0E5h, 04Ah, 0CDh, 014h, 0F3h, 0C1h, 0C5h, 0CDh, 019h, 0F3h, 0CDh, 01Eh
0180+  1AEA 00 16 00 21 
0180+  1AEE 00 D8 C5 D5 
0180+  1AF2 E5 4A CD 14 
0180+  1AF6 F3 C1 C5 CD 
0180+  1AFA 19 F3 CD 1E 
0181+  1AFE F3 A7 20 B4                      .DB 0F3h, 0A7h, 020h, 0B4h, 0E1h, 011h, 080h, 000h, 019h, 0D1h, 0C1h, 005h, 0C8h, 014h, 07Ah, 0FEh, 01Bh, 038h, 0DFh, 016h, 001h, 00Ch, 0C5h, 0D5h
0181+  1B02 E1 11 80 00 
0181+  1B06 19 D1 C1 05 
0181+  1B0A C8 14 7A FE 
0181+  1B0E 1B 38 DF 16 
0181+  1B12 01 0C C5 D5 
0182+  1B16 E5 CD 0F F3                      .DB 0E5h, 0CDh, 00Fh, 0F3h, 0E1h, 0D1h, 0C1h, 018h, 0D1h, 03Ah, 003h, 000h, 0E6h, 003h, 028h, 012h, 0FEh, 002h, 028h, 015h, 03Ah, 036h, 0FFh, 0A7h
0182+  1B1A E1 D1 C1 18 
0182+  1B1E D1 3A 03 00 
0182+  1B22 E6 03 28 12 
0182+  1B26 FE 02 28 15 
0182+  1B2A 3A 36 FF A7 
0183+  1B2E 20 05 3A 28                      .DB 020h, 005h, 03Ah, 028h, 0FFh, 0A7h, 0C8h, 03Eh, 0FFh, 0C9h, 0AFh, 0CDh, 076h, 0F8h, 0D0h, 03Dh, 0C9h, 03Ah, 003h, 000h, 0E6h, 00Ch, 028h, 0F2h
0183+  1B32 FF A7 C8 3E 
0183+  1B36 FF C9 AF CD 
0183+  1B3A 76 F8 D0 3D 
0183+  1B3E C9 3A 03 00 
0183+  1B42 E6 0C 28 F2 
0184+  1B46 18 E2 3A 03                      .DB 018h, 0E2h, 03Ah, 003h, 000h, 0E6h, 003h, 028h, 017h, 0FEh, 002h, 028h, 019h, 03Ah, 036h, 0FFh, 03Dh, 0FAh, 0C7h, 0EFh, 032h, 036h, 0FFh, 021h
0184+  1B4A 00 E6 03 28 
0184+  1B4E 17 FE 02 28 
0184+  1B52 19 3A 36 FF 
0184+  1B56 3D FA C7 EF 
0184+  1B5A 32 36 FF 21 
0185+  1B5E FD EF 4F 06                      .DB 0FDh, 0EFh, 04Fh, 006h, 000h, 009h, 07Eh, 0C9h, 0CDh, 085h, 0F8h, 0D8h, 018h, 0FAh, 03Ah, 003h, 000h, 0E6h, 00Ch, 028h, 0F3h, 018h, 0DEh, 03Ah
0185+  1B62 00 09 7E C9 
0185+  1B66 CD 85 F8 D8 
0185+  1B6A 18 FA 3A 03 
0185+  1B6E 00 E6 0C 28 
0185+  1B72 F3 18 DE 3A 
0186+  1B76 28 FF A7 28                      .DB 028h, 0FFh, 0A7h, 028h, 003h, 0C3h, 049h, 0F7h, 03Ah, 032h, 0FFh, 0F6h, 001h, 032h, 032h, 0FFh, 0F3h, 0EDh, 05Bh, 02Dh, 0FFh, 07Ah, 03Dh, 032h
0186+  1B7A 03 C3 49 F7 
0186+  1B7E 3A 32 FF F6 
0186+  1B82 01 32 32 FF 
0186+  1B86 F3 ED 5B 2D 
0186+  1B8A FF 7A 3D 32 
0187+  1B8E 2E FF CD 20                      .DB 02Eh, 0FFh, 0CDh, 020h, 0F1h, 0FBh, 0CDh, 049h, 0F7h, 047h, 03Ah, 032h, 0FFh, 0E6h, 0FEh, 032h, 032h, 0FFh, 0C5h, 01Eh, 000h, 0F3h, 0CDh, 09Fh
0187+  1B92 F1 FB CD 49 
0187+  1B96 F7 47 3A 32 
0187+  1B9A FF E6 FE 32 
0187+  1B9E 32 FF C5 1E 
0187+  1BA2 00 F3 CD 9F 
0188+  1BA6 F5 FB C1 78                      .DB 0F5h, 0FBh, 0C1h, 078h, 0C9h, 04Bh, 02Fh, 01Bh, 03Ah, 003h, 000h, 0E6h, 003h, 0FEh, 002h, 020h, 00Bh, 03Ah, 003h, 000h, 0E6h, 0C0h, 020h, 008h
0188+  1BAA C9 4B 2F 1B 
0188+  1BAE 3A 03 00 E6 
0188+  1BB2 03 FE 02 20 
0188+  1BB6 0B 3A 03 00 
0188+  1BBA E6 C0 20 08 
0189+  1BBE 79 C3 59 F8                      .DB 079h, 0C3h, 059h, 0F8h, 079h, 0CDh, 059h, 0F8h, 03Ah, 034h, 0FFh, 0B7h, 0C2h, 0D1h, 0F0h, 03Ah, 032h, 0FFh, 0E6h, 008h, 0CAh, 0BEh, 0F0h, 0EDh
0189+  1BC2 79 CD 59 F8 
0189+  1BC6 3A 34 FF B7 
0189+  1BCA C2 D1 F0 3A 
0189+  1BCE 32 FF E6 08 
0189+  1BD2 CA BE F0 ED 
0190+  1BD6 5B 2D FF 3A                      .DB 05Bh, 02Dh, 0FFh, 03Ah, 032h, 0FFh, 0E6h, 0F7h, 032h, 032h, 0FFh, 079h, 0FEh, 041h, 020h, 004h, 01Dh, 0C3h, 020h, 0F1h, 0FEh, 042h, 020h, 004h
0190+  1BDA 32 FF E6 F7 
0190+  1BDE 32 32 FF 79 
0190+  1BE2 FE 41 20 04 
0190+  1BE6 1D C3 20 F1 
0190+  1BEA FE 42 20 04 
0191+  1BEE 1C C3 20 F1                      .DB 01Ch, 0C3h, 020h, 0F1h, 0FEh, 043h, 020h, 009h, 03Ah, 030h, 0FFh, 0BAh, 0C8h, 014h, 0C3h, 020h, 0F1h, 0FEh, 044h, 020h, 005h, 015h, 0C8h, 0C3h
0191+  1BF2 FE 43 20 09 
0191+  1BF6 3A 30 FF BA 
0191+  1BFA C8 14 C3 20 
0191+  1BFE F1 FE 44 20 
0191+  1C02 05 15 C8 C3 
0192+  1C06 20 F1 FE 46                      .DB 020h, 0F1h, 0FEh, 046h, 0C8h, 0FEh, 047h, 0C8h, 0FEh, 048h, 020h, 006h, 011h, 001h, 001h, 0C3h, 020h, 0F1h, 0FEh, 049h, 0C8h, 0FEh, 04Ah, 020h
0192+  1C0A C8 FE 47 C8 
0192+  1C0E FE 48 20 06 
0192+  1C12 11 01 01 C3 
0192+  1C16 20 F1 FE 49 
0192+  1C1A C8 FE 4A 20 
0193+  1C1E 19 CD 94 F0                      .DB 019h, 0CDh, 094h, 0F0h, 0EDh, 04Bh, 02Dh, 0FFh, 00Eh, 000h, 004h, 03Ah, 02Fh, 0FFh, 0B8h, 0CAh, 0AAh, 0F1h, 0C5h, 078h, 0CDh, 0C8h, 0F2h, 0C1h
0193+  1C22 ED 4B 2D FF 
0193+  1C26 0E 00 04 3A 
0193+  1C2A 2F FF B8 CA 
0193+  1C2E AA F1 C5 78 
0193+  1C32 CD C8 F2 C1 
0194+  1C36 18 F0 FE 4B                      .DB 018h, 0F0h, 0FEh, 04Bh, 020h, 011h, 0CDh, 094h, 0F0h, 0C3h, 0AAh, 0F1h, 0EDh, 04Bh, 02Dh, 0FFh, 005h, 079h, 03Dh, 048h, 0C3h, 0C8h, 0F2h, 0FEh
0194+  1C3A 20 11 CD 94 
0194+  1C3E F0 C3 AA F1 
0194+  1C42 ED 4B 2D FF 
0194+  1C46 05 79 3D 48 
0194+  1C4A C3 C8 F2 FE 
0195+  1C4E 59 20 08 32                      .DB 059h, 020h, 008h, 032h, 034h, 0FFh, 0AFh, 032h, 035h, 0FFh, 0C9h, 0FEh, 05Ah, 020h, 006h, 03Eh, 003h, 032h, 036h, 0FFh, 0C9h, 0FEh, 062h, 028h
0195+  1C52 34 FF AF 32 
0195+  1C56 35 FF C9 FE 
0195+  1C5A 5A 20 06 3E 
0195+  1C5E 03 32 36 FF 
0195+  1C62 C9 FE 62 28 
0196+  1C66 EA FE 63 28                      .DB 0EAh, 0FEh, 063h, 028h, 0E6h, 0C9h, 079h, 0FEh, 01Bh, 0C2h, 071h, 0F2h, 03Ah, 032h, 0FFh, 0F6h, 008h, 032h, 032h, 0FFh, 0AFh, 032h, 034h, 0FFh
0196+  1C6A E6 C9 79 FE 
0196+  1C6E 1B C2 71 F2 
0196+  1C72 3A 32 FF F6 
0196+  1C76 08 32 32 FF 
0196+  1C7A AF 32 34 FF 
0197+  1C7E C9 3A 34 FF                      .DB 0C9h, 03Ah, 034h, 0FFh, 0FEh, 059h, 028h, 00Dh, 0FEh, 062h, 028h, 020h, 0FEh, 063h, 028h, 02Dh, 0AFh, 032h, 034h, 0FFh, 0C9h, 03Ah, 035h, 0FFh
0197+  1C82 FE 59 28 0D 
0197+  1C86 FE 62 28 20 
0197+  1C8A FE 63 28 2D 
0197+  1C8E AF 32 34 FF 
0197+  1C92 C9 3A 35 FF 
0198+  1C96 A7 20 05 79                      .DB 0A7h, 020h, 005h, 079h, 032h, 035h, 0FFh, 0C9h, 0D6h, 01Fh, 05Fh, 079h, 0D6h, 01Fh, 057h, 0CDh, 0E0h, 0F0h, 018h, 024h, 03Ah, 031h, 0FFh, 0E6h
0198+  1C9A 32 35 FF C9 
0198+  1C9E D6 1F 5F 79 
0198+  1CA2 D6 1F 57 CD 
0198+  1CA6 E0 F0 18 24 
0198+  1CAA 3A 31 FF E6 
0199+  1CAE F0 47 79 D6                      .DB 0F0h, 047h, 079h, 0D6h, 01Fh, 0E6h, 00Fh, 0B0h, 032h, 031h, 0FFh, 018h, 0D3h, 03Ah, 031h, 0FFh, 0E6h, 00Fh, 047h, 079h, 0D6h, 01Fh, 0CBh, 027h
0199+  1CB2 1F E6 0F B0 
0199+  1CB6 32 31 FF 18 
0199+  1CBA D3 3A 31 FF 
0199+  1CBE E6 0F 47 79 
0199+  1CC2 D6 1F CB 27 
0200+  1CC6 CB 27 CB 27                      .DB 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 018h, 0E7h, 02Ah, 02Bh, 0FFh, 0EDh, 04Bh, 02Dh, 0FFh, 07Bh, 0B9h, 032h, 02Dh, 0FFh, 020h, 009h, 07Ah, 0B8h
0200+  1CCA CB 27 18 E7 
0200+  1CCE 2A 2B FF ED 
0200+  1CD2 4B 2D FF 7B 
0200+  1CD6 B9 32 2D FF 
0200+  1CDA 20 09 7A B8 
0201+  1CDE 32 2E FF 20                      .DB 032h, 02Eh, 0FFh, 020h, 019h, 018h, 073h, 0A7h, 020h, 005h, 03Ch, 032h, 02Dh, 0FFh, 0AFh, 03Dh, 06Fh, 03Ah, 02Fh, 0FFh, 0BDh, 020h, 003h, 032h
0201+  1CE2 19 18 73 A7 
0201+  1CE6 20 05 3C 32 
0201+  1CEA 2D FF AF 3D 
0201+  1CEE 6F 3A 2F FF 
0201+  1CF2 BD 20 03 32 
0202+  1CF6 2D FF 7A 32                      .DB 02Dh, 0FFh, 07Ah, 032h, 02Eh, 0FFh, 07Ch, 03Ch, 092h, 030h, 018h, 03Ah, 032h, 0FFh, 0E6h, 001h, 03Eh, 001h, 028h, 001h, 03Dh, 0C6h, 018h, 047h
0202+  1CFA 2E FF 7C 3C 
0202+  1CFE 92 30 18 3A 
0202+  1D02 32 FF E6 01 
0202+  1D06 3E 01 28 01 
0202+  1D0A 3D C6 18 47 
0203+  1D0E 84 BA 30 0A                      .DB 084h, 0BAh, 030h, 00Ah, 07Ah, 090h, 030h, 005h, 0AFh, 018h, 002h, 07Ah, 03Dh, 067h, 07Dh, 0B7h, 0F2h, 087h, 0F1h, 0AFh, 06Fh, 03Ah, 02Ah, 0FFh
0203+  1D12 7A 90 30 05 
0203+  1D16 AF 18 02 7A 
0203+  1D1A 3D 67 7D B7 
0203+  1D1E F2 87 F1 AF 
0203+  1D22 6F 3A 2A FF 
0204+  1D26 3D E6 3F 32                      .DB 03Dh, 0E6h, 03Fh, 032h, 02Ah, 0FFh, 0E5h, 00Eh, 000h, 0CDh, 0C8h, 0F2h, 0E1h, 018h, 019h, 03Ah, 02Fh, 0FFh, 04Fh, 0BDh, 020h, 012h, 03Ah, 02Ah
0204+  1D2A 2A FF E5 0E 
0204+  1D2E 00 CD C8 F2 
0204+  1D32 E1 18 19 3A 
0204+  1D36 2F FF 4F BD 
0204+  1D3A 20 12 3A 2A 
0205+  1D3E FF 3C E6 3F                      .DB 0FFh, 03Ch, 0E6h, 03Fh, 032h, 02Ah, 0FFh, 079h, 0E5h, 00Eh, 000h, 0CDh, 0C8h, 0F2h, 0E1h, 02Dh, 03Ah, 032h, 0FFh, 0E6h, 002h, 028h, 003h, 022h
0205+  1D42 32 2A FF 79 
0205+  1D46 E5 0E 00 CD 
0205+  1D4A C8 F2 E1 2D 
0205+  1D4E 3A 32 FF E6 
0205+  1D52 02 28 03 22 
0206+  1D56 2B FF F3 CD                      .DB 02Bh, 0FFh, 0F3h, 0CDh, 0B0h, 0F1h, 0FBh, 0C9h, 02Ah, 02Bh, 0FFh, 03Ah, 02Ah, 0FFh, 085h, 0E6h, 03Fh, 0F6h, 040h, 057h, 07Ch, 0CBh, 027h, 05Fh
0206+  1D5A B0 F1 FB C9 
0206+  1D5E 2A 2B FF 3A 
0206+  1D62 2A FF 85 E6 
0206+  1D66 3F F6 40 57 
0206+  1D6A 7C CB 27 5F 
0207+  1D6E 21 84 FF 06                      .DB 021h, 084h, 0FFh, 006h, 018h, 00Eh, 000h, 03Ah, 032h, 0FFh, 0E6h, 004h, 028h, 001h, 005h, 03Ah, 029h, 0FFh, 0D3h, 071h, 01Ah, 0BEh, 028h, 00Ah
0207+  1D72 18 0E 00 3A 
0207+  1D76 32 FF E6 04 
0207+  1D7A 28 01 05 3A 
0207+  1D7E 29 FF D3 71 
0207+  1D82 1A BE 28 0A 
0208+  1D86 77 C5 E5 D5                      .DB 077h, 0C5h, 0E5h, 0D5h, 0CDh, 008h, 0FBh, 0D1h, 0E1h, 0C1h, 023h, 013h, 03Ah, 032h, 0FFh, 0E6h, 004h, 01Ah, 028h, 005h, 0CBh, 03Fh, 0CBh, 03Fh
0208+  1D8A CD 08 FB D1 
0208+  1D8E E1 C1 23 13 
0208+  1D92 3A 32 FF E6 
0208+  1D96 04 1A 28 05 
0208+  1D9A CB 3F CB 3F 
0209+  1D9E 3C BE 28 12                      .DB 03Ch, 0BEh, 028h, 012h, 077h, 0C5h, 0E5h, 0D5h, 079h, 04Eh, 0CBh, 021h, 0CBh, 021h, 0CBh, 021h, 0CDh, 0CAh, 0FAh, 0D1h, 0E1h, 0C1h, 023h, 013h
0209+  1DA2 77 C5 E5 D5 
0209+  1DA6 79 4E CB 21 
0209+  1DAA CB 21 CB 21 
0209+  1DAE CD CA FA D1 
0209+  1DB2 E1 C1 23 13 
0210+  1DB6 0C 10 C9 3A                      .DB 00Ch, 010h, 0C9h, 03Ah, 032h, 0FFh, 04Fh, 0E6h, 004h, 028h, 053h, 036h, 000h, 023h, 036h, 080h, 079h, 0E6h, 002h, 020h, 04Fh, 021h, 000h, 000h
0210+  1DBA 32 FF 4F E6 
0210+  1DBE 04 28 53 36 
0210+  1DC2 00 23 36 80 
0210+  1DC6 79 E6 02 20 
0210+  1DCA 4F 21 00 00 
0211+  1DCE ED 4B 2D FF                      .DB 0EDh, 04Bh, 02Dh, 0FFh, 00Dh, 0EDh, 05Bh, 02Bh, 0FFh, 07Bh, 0A7h, 020h, 005h, 021h, 001h, 000h, 018h, 00Ah, 03Ah, 02Fh, 0FFh, 03Dh, 0BBh, 020h
0211+  1DD2 0D ED 5B 2B 
0211+  1DD6 FF 7B A7 20 
0211+  1DDA 05 21 01 00 
0211+  1DDE 18 0A 3A 2F 
0211+  1DE2 FF 3D BB 20 
0212+  1DE6 03 21 08 00                      .DB 003h, 021h, 008h, 000h, 07Bh, 0B9h, 001h, 000h, 000h, 020h, 004h, 00Eh, 0C0h, 018h, 008h, 006h, 028h, 038h, 002h, 018h, 002h, 006h, 005h, 009h
0212+  1DEA 7B B9 01 00 
0212+  1DEE 00 20 04 0E 
0212+  1DF2 C0 18 08 06 
0212+  1DF6 28 38 02 18 
0212+  1DFA 02 06 05 09 
0213+  1DFE 3A 2C FF A7                      .DB 03Ah, 02Ch, 0FFh, 0A7h, 020h, 004h, 03Eh, 030h, 0B5h, 06Fh, 03Eh, 017h, 0CDh, 029h, 0FBh, 03Eh, 017h, 00Eh, 080h, 0CDh, 0CAh, 0FAh, 03Ah, 03Ah
0213+  1E02 20 04 3E 30 
0213+  1E06 B5 6F 3E 17 
0213+  1E0A CD 29 FB 3E 
0213+  1E0E 17 0E 80 CD 
0213+  1E12 CA FA 3A 3A 
0214+  1E16 FF D3 71 C9                      .DB 0FFh, 0D3h, 071h, 0C9h, 021h, 03Fh, 02Dh, 018h, 0E9h, 0EDh, 05Bh, 02Dh, 0FFh, 0FEh, 00Dh, 020h, 005h, 016h, 001h, 0C3h, 020h, 0F1h, 0FEh, 00Ah
0214+  1E1A 21 3F 2D 18 
0214+  1E1E E9 ED 5B 2D 
0214+  1E22 FF FE 0D 20 
0214+  1E26 05 16 01 C3 
0214+  1E2A 20 F1 FE 0A 
0215+  1E2E 20 04 1C C3                      .DB 020h, 004h, 01Ch, 0C3h, 020h, 0F1h, 0FEh, 008h, 020h, 005h, 015h, 0C2h, 020h, 0F1h, 0C9h, 0EDh, 05Bh, 02Dh, 0FFh, 015h, 01Dh, 03Ah, 02Ah, 0FFh
0215+  1E32 20 F1 FE 08 
0215+  1E36 20 05 15 C2 
0215+  1E3A 20 F1 C9 ED 
0215+  1E3E 5B 2D FF 15 
0215+  1E42 1D 3A 2A FF 
0216+  1E46 83 E6 3F F6                      .DB 083h, 0E6h, 03Fh, 0F6h, 040h, 067h, 07Ah, 0CBh, 027h, 06Fh, 03Ah, 029h, 0FFh, 0D3h, 071h, 071h, 03Ah, 031h, 0FFh, 023h, 077h, 03Ah, 03Ah, 0FFh
0216+  1E4A 40 67 7A CB 
0216+  1E4E 27 6F 3A 29 
0216+  1E52 FF D3 71 71 
0216+  1E56 3A 31 FF 23 
0216+  1E5A 77 3A 3A FF 
0217+  1E5E D3 71 ED 5B                      .DB 0D3h, 071h, 0EDh, 05Bh, 02Dh, 0FFh, 03Ah, 030h, 0FFh, 06Fh, 07Ah, 0BDh, 028h, 004h, 014h, 0C3h, 020h, 0F1h, 016h, 001h, 01Ch, 0C3h, 020h, 0F1h
0217+  1E62 2D FF 3A 30 
0217+  1E66 FF 6F 7A BD 
0217+  1E6A 28 04 14 C3 
0217+  1E6E 20 F1 16 01 
0217+  1E72 1C C3 20 F1 
0218+  1E76 67 3A 2A FF                      .DB 067h, 03Ah, 02Ah, 0FFh, 084h, 0E6h, 03Fh, 0F6h, 040h, 067h, 079h, 081h, 06Fh, 03Ah, 031h, 0FFh, 04Fh, 03Ah, 029h, 0FFh, 0D3h, 071h, 03Eh, 020h
0218+  1E7A 84 E6 3F F6 
0218+  1E7E 40 67 79 81 
0218+  1E82 6F 3A 31 FF 
0218+  1E86 4F 3A 29 FF 
0218+  1E8A D3 71 3E 20 
0219+  1E8E 77 2C 71 2C                      .DB 077h, 02Ch, 071h, 02Ch, 03Eh, 0FEh, 0BDh, 020h, 0F7h, 03Ah, 03Ah, 0FFh, 0D3h, 071h, 0C9h, 0AFh, 0C9h, 0AFh, 0C9h, 0C9h, 079h, 021h, 000h, 000h
0219+  1E92 3E FE BD 20 
0219+  1E96 F7 3A 3A FF 
0219+  1E9A D3 71 C9 AF 
0219+  1E9E C9 AF C9 C9 
0219+  1EA2 79 21 00 00 
0220+  1EA6 FE 02 D0 06                      .DB 0FEh, 002h, 0D0h, 006h, 000h, 0CBh, 021h, 0CBh, 021h, 0CBh, 021h, 0CBh, 021h, 021h, 033h, 0EEh, 009h, 032h, 043h, 0FFh, 0C9h, 00Eh, 000h, 079h
0220+  1EAA 00 CB 21 CB 
0220+  1EAE 21 CB 21 CB 
0220+  1EB2 21 21 33 EE 
0220+  1EB6 09 32 43 FF 
0220+  1EBA C9 0E 00 79 
0221+  1EBE 32 3C FF C9                      .DB 032h, 03Ch, 0FFh, 0C9h, 0EDh, 043h, 03Dh, 0FFh, 0C9h, 0EDh, 043h, 03Fh, 0FFh, 0C9h, 0CDh, 08Ah, 0F3h, 0F3h, 0D3h, 071h, 0CBh, 0F0h, 0C5h, 0E1h
0221+  1EC2 ED 43 3D FF 
0221+  1EC6 C9 ED 43 3F 
0221+  1ECA FF C9 CD 8A 
0221+  1ECE F3 F3 D3 71 
0221+  1ED2 CB F0 C5 E1 
0222+  1ED6 0E 80 ED 5B                      .DB 00Eh, 080h, 0EDh, 05Bh, 03Fh, 0FFh, 07Ah, 007h, 007h, 0E6h, 003h, 0F6h, 020h, 047h, 0D3h, 072h, 0CBh, 0FAh, 0CBh, 0B2h, 0EDh, 0A0h, 079h, 0B7h
0222+  1EDA 3F FF 7A 07 
0222+  1EDE 07 E6 03 F6 
0222+  1EE2 20 47 D3 72 
0222+  1EE6 CB FA CB B2 
0222+  1EEA ED A0 79 B7 
0223+  1EEE 28 08 CB 72                      .DB 028h, 008h, 0CBh, 072h, 028h, 0F6h, 004h, 078h, 018h, 0ECh, 03Ah, 03Ah, 0FFh, 0D3h, 071h, 03Ah, 03Bh, 0FFh, 0D3h, 072h, 0FBh, 0AFh, 0C9h, 03Ah
0223+  1EF2 28 F6 04 78 
0223+  1EF6 18 EC 3A 3A 
0223+  1EFA FF D3 71 3A 
0223+  1EFE 3B FF D3 72 
0223+  1F02 FB AF C9 3A 
0224+  1F06 43 FF B7 20                      .DB 043h, 0FFh, 0B7h, 020h, 002h, 03Ch, 0C9h, 0CDh, 08Ah, 0F3h, 0F3h, 0D3h, 071h, 0CBh, 0F0h, 0C5h, 0D1h, 00Eh, 080h, 02Ah, 03Fh, 0FFh, 07Ch, 007h
0224+  1F0A 02 3C C9 CD 
0224+  1F0E 8A F3 F3 D3 
0224+  1F12 71 CB F0 C5 
0224+  1F16 D1 0E 80 2A 
0224+  1F1A 3F FF 7C 07 
0225+  1F1E 07 E6 03 F6                      .DB 007h, 0E6h, 003h, 0F6h, 020h, 047h, 0D3h, 072h, 0CBh, 0FCh, 0CBh, 0B4h, 0EDh, 0A0h, 079h, 0B7h, 028h, 0C8h, 0CBh, 074h, 028h, 0F6h, 004h, 078h
0225+  1F22 20 47 D3 72 
0225+  1F26 CB FC CB B4 
0225+  1F2A ED A0 79 B7 
0225+  1F2E 28 C8 CB 74 
0225+  1F32 28 F6 04 78 
0226+  1F36 18 EC 21 00                      .DB 018h, 0ECh, 021h, 000h, 000h, 0EDh, 04Bh, 03Ch, 0FFh, 068h, 044h, 0CBh, 021h, 0CBh, 010h, 009h, 0CBh, 021h, 0CBh, 010h, 0CBh, 021h, 0CBh, 010h
0226+  1F3A 00 ED 4B 3C 
0226+  1F3E FF 68 44 CB 
0226+  1F42 21 CB 10 09 
0226+  1F46 CB 21 CB 10 
0226+  1F4A CB 21 CB 10 
0227+  1F4E 09 CB 21 CB                      .DB 009h, 0CBh, 021h, 0CBh, 010h, 009h, 07Dh, 0E6h, 07Fh, 047h, 00Eh, 000h, 0CBh, 038h, 0CBh, 019h, 0CBh, 025h, 0CBh, 014h, 03Ah, 043h, 0FFh, 0B7h
0227+  1F52 10 09 7D E6 
0227+  1F56 7F 47 0E 00 
0227+  1F5A CB 38 CB 19 
0227+  1F5E CB 25 CB 14 
0227+  1F62 3A 43 FF B7 
0228+  1F66 28 05 3A 38                      .DB 028h, 005h, 03Ah, 038h, 0FFh, 084h, 0C9h, 03Ah, 037h, 0FFh, 084h, 0C9h, 0AFh, 0C9h, 069h, 060h, 0C9h, 0E3h, 07Eh, 023h, 0A7h, 028h, 005h, 0CDh
0228+  1F6A FF 84 C9 3A 
0228+  1F6E 37 FF 84 C9 
0228+  1F72 AF C9 69 60 
0228+  1F76 C9 E3 7E 23 
0228+  1F7A A7 28 05 CD 
0229+  1F7E D6 F3 18 F6                      .DB 0D6h, 0F3h, 018h, 0F6h, 0E3h, 0C9h, 0E5h, 0D5h, 0C5h, 04Fh, 0CDh, 000h, 0F0h, 0C1h, 0D1h, 0E1h, 0C9h, 0F3h, 03Eh, 020h, 0D3h, 070h, 032h, 039h
0229+  1F82 E3 C9 E5 D5 
0229+  1F86 C5 4F CD 00 
0229+  1F8A F0 C1 D1 E1 
0229+  1F8E C9 F3 3E 20 
0229+  1F92 D3 70 32 39 
0230+  1F96 FF 3C D3 71                      .DB 0FFh, 03Ch, 0D3h, 071h, 032h, 03Ah, 0FFh, 03Ch, 0D3h, 072h, 032h, 03Bh, 0FFh, 021h, 000h, 0FEh, 006h, 000h, 036h, 0FDh, 023h, 010h, 0FBh, 0CDh
0230+  1F9A 32 3A FF 3C 
0230+  1F9E D3 72 32 3B 
0230+  1FA2 FF 21 00 FE 
0230+  1FA6 06 00 36 FD 
0230+  1FAA 23 10 FB CD 
0231+  1FAE C9 F5 3E C3                      .DB 0C9h, 0F5h, 03Eh, 0C3h, 032h, 0FDh, 0FDh, 021h, 0B6h, 0F4h, 022h, 0FEh, 0FDh, 03Eh, 002h, 0D3h, 013h, 03Eh, 0B7h, 0D3h, 013h, 000h, 03Eh, 0CFh
0231+  1FB2 32 FD FD 21 
0231+  1FB6 B6 F4 22 FE 
0231+  1FBA FD 3E 02 D3 
0231+  1FBE 13 3E B7 D3 
0231+  1FC2 13 00 3E CF 
0232+  1FC6 D3 13 3E FE                      .DB 0D3h, 013h, 03Eh, 0FEh, 0EDh, 047h, 0EDh, 05Eh, 0CDh, 07Ah, 0F4h, 03Eh, 004h, 032h, 037h, 0FFh, 0FBh, 03Eh, 000h, 0CDh, 02Dh, 0F8h, 0CDh, 03Ch
0232+  1FCA ED 47 ED 5E 
0232+  1FCE CD 7A F4 3E 
0232+  1FD2 04 32 37 FF 
0232+  1FD6 FB 3E 00 CD 
0232+  1FDA 2D F8 CD 3C 
0233+  1FDE FC 06 04 C5                      .DB 0FCh, 006h, 004h, 0C5h, 026h, 06Fh, 02Eh, 007h, 0CDh, 03Ch, 0F9h, 030h, 00Bh, 03Eh, 044h, 0CDh, 050h, 0F9h, 030h, 004h, 0AFh, 0CDh, 050h, 0F9h
0233+  1FE2 26 6F 2E 07 
0233+  1FE6 CD 3C F9 30 
0233+  1FEA 0B 3E 44 CD 
0233+  1FEE 50 F9 30 04 
0233+  1FF2 AF CD 50 F9 
0234+  1FF6 CD 04 F9 CD                      .DB 0CDh, 004h, 0F9h, 0CDh, 056h, 0F4h, 0CDh, 05Bh, 0F4h, 0C1h, 0C8h, 010h, 0DEh, 0C9h, 006h, 000h, 010h, 0FEh, 0C9h, 026h, 06Fh, 02Eh, 007h, 0CDh
0234+  1FFA 56 F4 CD 5B 
0234+  1FFE F4 C1 C8 10 
0234+  2002 DE C9 06 00 
0234+  2006 10 FE C9 26 
0234+  200A 6F 2E 07 CD 
0235+  200E 1B F9 16 02                      .DB 01Bh, 0F9h, 016h, 002h, 030h, 011h, 05Fh, 0CDh, 070h, 0F9h, 0CDh, 05Dh, 0F9h, 057h, 0CDh, 004h, 0F9h, 07Bh, 006h, 004h, 0FEh, 044h, 0C0h, 07Ah
0235+  2012 30 11 5F CD 
0235+  2016 70 F9 CD 5D 
0235+  201A F9 57 CD 04 
0235+  201E F9 7B 06 04 
0235+  2022 FE 44 C0 7A 
0236+  2026 A7 C9 11 29                      .DB 0A7h, 0C9h, 011h, 029h, 0FFh, 021h, 0A8h, 0F4h, 001h, 00Eh, 000h, 0EDh, 0B0h, 03Ah, 029h, 0FFh, 0D3h, 071h, 021h, 000h, 040h, 011h, 002h, 040h
0236+  202A FF 21 A8 F4 
0236+  202E 01 0E 00 ED 
0236+  2032 B0 3A 29 FF 
0236+  2036 D3 71 21 00 
0236+  203A 40 11 02 40 
0237+  203E 0E 20 3A 31                      .DB 00Eh, 020h, 03Ah, 031h, 0FFh, 047h, 0EDh, 043h, 000h, 040h, 001h, 0FAh, 03Fh, 0EDh, 0B0h, 0CDh, 06Eh, 0FBh, 03Ah, 03Ah, 0FFh, 0D3h, 071h, 0C9h
0237+  2042 FF 47 ED 43 
0237+  2046 00 40 01 FA 
0237+  204A 3F ED B0 CD 
0237+  204E 6E FB 3A 3A 
0237+  2052 FF D3 71 C9 
0238+  2056 3F 00 00 00                      .DB 03Fh, 000h, 000h, 000h, 001h, 001h, 018h, 040h, 00Fh, 002h, 000h, 000h, 000h, 000h, 0F3h, 0EDh, 073h, 0D4h, 0FFh, 031h, 0D4h, 0FFh, 0F5h, 0D9h
0238+  205A 01 01 18 40 
0238+  205E 0F 02 00 00 
0238+  2062 00 00 F3 ED 
0238+  2066 73 D4 FF 31 
0238+  206A D4 FF F5 D9 
0239+  206E CD DF F5 3A                      .DB 0CDh, 0DFh, 0F5h, 03Ah, 013h, 0FFh, 0A7h, 0C4h, 00Fh, 0F5h, 03Ah, 033h, 0FFh, 03Dh, 0FAh, 0E1h, 0F4h, 032h, 033h, 0FFh, 020h, 00Bh, 03Ah, 032h
0239+  2072 13 FF A7 C4 
0239+  2076 0F F5 3A 33 
0239+  207A FF 3D FA E1 
0239+  207E F4 32 33 FF 
0239+  2082 20 0B 3A 32 
0240+  2086 FF E6 FB 32                      .DB 0FFh, 0E6h, 0FBh, 032h, 032h, 0FFh, 0CDh, 0B0h, 0F1h, 02Ah, 004h, 0FFh, 05Dh, 023h, 022h, 004h, 0FFh, 07Ch, 0B5h, 020h, 007h, 02Ah, 006h, 0FFh
0240+  208A 32 FF CD B0 
0240+  208E F1 2A 04 FF 
0240+  2092 5D 23 22 04 
0240+  2096 FF 7C B5 20 
0240+  209A 07 2A 06 FF 
0241+  209E 23 22 06 FF                      .DB 023h, 022h, 006h, 0FFh, 03Ah, 032h, 0FFh, 0E6h, 001h, 028h, 00Bh, 03Ah, 004h, 0FFh, 0ABh, 0E6h, 020h, 028h, 003h, 0CDh, 09Fh, 0F5h, 0D9h, 0F1h
0241+  20A2 3A 32 FF E6 
0241+  20A6 01 28 0B 3A 
0241+  20AA 04 FF AB E6 
0241+  20AE 20 28 03 CD 
0241+  20B2 9F F5 D9 F1 
0242+  20B6 ED 7B D4 FF                      .DB 0EDh, 07Bh, 0D4h, 0FFh, 0FBh, 0EDh, 04Dh, 0FEh, 090h, 020h, 025h, 03Ah, 02Bh, 0FFh, 03Dh, 0FAh, 09Ah, 0F5h, 0F5h, 01Eh, 000h, 0CDh, 09Fh, 0F5h
0242+  20BA FB ED 4D FE 
0242+  20BE 90 20 25 3A 
0242+  20C2 2B FF 3D FA 
0242+  20C6 9A F5 F5 1E 
0242+  20CA 00 CD 9F F5 
0243+  20CE F1 32 2B FF                      .DB 0F1h, 032h, 02Bh, 0FFh, 03Ah, 032h, 0FFh, 0E6h, 0FDh, 0F6h, 004h, 032h, 032h, 0FFh, 03Eh, 03Ch, 032h, 033h, 0FFh, 0CDh, 0B0h, 0F1h, 018h, 062h
0243+  20D2 3A 32 FF E6 
0243+  20D6 FD F6 04 32 
0243+  20DA 32 FF 3E 3C 
0243+  20DE 32 33 FF CD 
0243+  20E2 B0 F1 18 62 
0244+  20E6 FE 91 20 0D                      .DB 0FEh, 091h, 020h, 00Dh, 03Ah, 02Fh, 0FFh, 04Fh, 03Ah, 02Bh, 0FFh, 03Ch, 0B9h, 028h, 053h, 018h, 0D1h, 0FEh, 093h, 020h, 00Fh, 03Ah, 030h, 0FFh
0244+  20EA 3A 2F FF 4F 
0244+  20EE 3A 2B FF 3C 
0244+  20F2 B9 28 53 18 
0244+  20F6 D1 FE 93 20 
0244+  20FA 0F 3A 30 FF 
0245+  20FE D6 17 4F 3A                      .DB 0D6h, 017h, 04Fh, 03Ah, 02Ch, 0FFh, 03Ch, 0B9h, 028h, 040h, 018h, 00Bh, 0FEh, 092h, 020h, 013h, 03Ah, 02Ch, 0FFh, 03Dh, 0FAh, 09Ah, 0F5h, 0F5h
0245+  2102 2C FF 3C B9 
0245+  2106 28 40 18 0B 
0245+  210A FE 92 20 13 
0245+  210E 3A 2C FF 3D 
0245+  2112 FA 9A F5 F5 
0246+  2116 1E 00 CD 9F                      .DB 01Eh, 000h, 0CDh, 09Fh, 0F5h, 0F1h, 032h, 02Ch, 0FFh, 018h, 0B1h, 0FEh, 094h, 020h, 019h, 03Ah, 02Dh, 0FFh, 03Dh, 032h, 02Bh, 0FFh, 03Ah, 02Eh
0246+  211A F5 F1 32 2C 
0246+  211E FF 18 B1 FE 
0246+  2122 94 20 19 3A 
0246+  2126 2D FF 3D 32 
0246+  212A 2B FF 3A 2E 
0247+  212E FF D6 16 30                      .DB 0FFh, 0D6h, 016h, 030h, 001h, 0AFh, 032h, 02Ch, 0FFh, 03Ah, 032h, 0FFh, 0F6h, 002h, 018h, 099h, 0FEh, 095h, 020h, 006h, 0AFh, 032h, 02Ch, 0FFh
0247+  2132 01 AF 32 2C 
0247+  2136 FF 3A 32 FF 
0247+  213A F6 02 18 99 
0247+  213E FE 95 20 06 
0247+  2142 AF 32 2C FF 
0248+  2146 18 A2 AF 32                      .DB 018h, 0A2h, 0AFh, 032h, 013h, 0FFh, 0C9h, 03Ah, 02Bh, 0FFh, 047h, 03Ah, 02Dh, 0FFh, 03Dh, 0B8h, 0C0h, 03Ah, 02Ch, 0FFh, 047h, 03Ah, 02Eh, 0FFh
0248+  214A 13 FF C9 3A 
0248+  214E 2B FF 47 3A 
0248+  2152 2D FF 3D B8 
0248+  2156 C0 3A 2C FF 
0248+  215A 47 3A 2E FF 
0249+  215E 3D 90 F8 FE                      .DB 03Dh, 090h, 0F8h, 0FEh, 018h, 0D0h, 04Fh, 006h, 000h, 021h, 084h, 0FFh, 009h, 009h, 07Bh, 0E6h, 020h, 07Eh, 028h, 002h, 03Eh, 05Fh, 0C3h, 008h
0249+  2162 18 D0 4F 06 
0249+  2166 00 21 84 FF 
0249+  216A 09 09 7B E6 
0249+  216E 20 7E 28 02 
0249+  2172 3E 5F C3 08 
0250+  2176 FB 21 08 FF                      .DB 0FBh, 021h, 008h, 0FFh, 006h, 020h, 0AFh, 077h, 023h, 005h, 020h, 0FBh, 0AFh, 032h, 028h, 0FFh, 032h, 027h, 0FFh, 032h, 026h, 0FFh, 0C9h, 001h
0250+  217A 06 20 AF 77 
0250+  217E 23 05 20 FB 
0250+  2182 AF 32 28 FF 
0250+  2186 32 27 FF 32 
0250+  218A 26 FF C9 01 
0251+  218E 00 FD 3A 12                      .DB 000h, 0FDh, 03Ah, 012h, 0FFh, 0E6h, 0FCh, 057h, 0EDh, 078h, 0E6h, 020h, 020h, 004h, 03Eh, 001h, 0B2h, 057h, 001h, 000h, 0FEh, 0EDh, 078h, 0E6h
0251+  2192 FF E6 FC 57 
0251+  2196 ED 78 E6 20 
0251+  219A 20 04 3E 01 
0251+  219E B2 57 01 00 
0251+  21A2 FE ED 78 E6 
0252+  21A6 10 20 04 3E                      .DB 010h, 020h, 004h, 03Eh, 002h, 0B2h, 057h, 07Ah, 032h, 012h, 0FFh, 021h, 06Dh, 0F7h, 0EDh, 078h, 016h, 001h, 05Fh, 022h, 010h, 0FFh, 0A2h, 020h
0252+  21AA 02 B2 57 7A 
0252+  21AE 32 12 FF 21 
0252+  21B2 6D F7 ED 78 
0252+  21B6 16 01 5F 22 
0252+  21BA 10 FF A2 20 
0253+  21BE 3F C5 7E 21                      .DB 03Fh, 0C5h, 07Eh, 021h, 008h, 0FFh, 006h, 008h, 0BEh, 0CAh, 069h, 0F6h, 023h, 005h, 020h, 0F8h, 021h, 008h, 0FFh, 006h, 008h, 04Fh, 0AFh, 0BEh
0253+  21C2 08 FF 06 08 
0253+  21C6 BE CA 69 F6 
0253+  21CA 23 05 20 F8 
0253+  21CE 21 08 FF 06 
0253+  21D2 08 4F AF BE 
0254+  21D6 28 07 23 05                      .DB 028h, 007h, 023h, 005h, 020h, 0F9h, 0C3h, 069h, 0F6h, 071h, 02Ah, 010h, 0FFh, 001h, 030h, 000h, 03Ah, 012h, 0FFh, 0A7h, 028h, 004h, 009h, 03Dh
0254+  21DA 20 F9 C3 69 
0254+  21DE F6 71 2A 10 
0254+  21E2 FF 01 30 00 
0254+  21E6 3A 12 FF A7 
0254+  21EA 28 04 09 3D 
0255+  21EE 20 FC 7E 32                      .DB 020h, 0FCh, 07Eh, 032h, 014h, 0FFh, 0CDh, 099h, 0F6h, 0AFh, 032h, 015h, 0FFh, 0C1h, 018h, 01Ah, 0C5h, 07Eh, 0A7h, 028h, 014h, 021h, 008h, 0FFh
0255+  21F2 14 FF CD 99 
0255+  21F6 F6 AF 32 15 
0255+  21FA FF C1 18 1A 
0255+  21FE C5 7E A7 28 
0255+  2202 14 21 08 FF 
0256+  2206 06 08 BE 28                      .DB 006h, 008h, 0BEh, 028h, 006h, 023h, 005h, 020h, 0F9h, 018h, 006h, 04Fh, 0AFh, 077h, 032h, 014h, 0FFh, 0C1h, 02Ah, 010h, 0FFh, 07Bh, 023h, 0CBh
0256+  220A 06 23 05 20 
0256+  220E F9 18 06 4F 
0256+  2212 AF 77 32 14 
0256+  2216 FF C1 2A 10 
0256+  221A FF 7B 23 CB 
0257+  221E 22 CB 72 CA                      .DB 022h, 0CBh, 072h, 0CAh, 00Bh, 0F6h, 0CBh, 000h, 03Eh, 0FEh, 0B8h, 0C2h, 006h, 0F6h, 03Ah, 014h, 0FFh, 0A7h, 0C8h, 03Ah, 015h, 0FFh, 03Ch, 032h
0257+  2222 0B F6 CB 00 
0257+  2226 3E FE B8 C2 
0257+  222A 06 F6 3A 14 
0257+  222E FF A7 C8 3A 
0257+  2232 15 FF 3C 32 
0258+  2236 15 FF FE 28                      .DB 015h, 0FFh, 0FEh, 028h, 028h, 008h, 0FEh, 02Fh, 0C0h, 03Eh, 028h, 032h, 015h, 0FFh, 03Ah, 014h, 0FFh, 04Fh, 0E6h, 0F8h, 0FEh, 090h, 020h, 005h
0258+  223A 28 08 FE 2F 
0258+  223E C0 3E 28 32 
0258+  2242 15 FF 3A 14 
0258+  2246 FF 4F E6 F8 
0258+  224A FE 90 20 05 
0259+  224E 79 32 13 FF                      .DB 079h, 032h, 013h, 0FFh, 0C9h, 079h, 0A7h, 0C8h, 06Fh, 03Ah, 028h, 0FFh, 0FEh, 010h, 0C8h, 03Ch, 032h, 028h, 0FFh, 006h, 000h, 03Ah, 027h, 0FFh
0259+  2252 C9 79 A7 C8 
0259+  2256 6F 3A 28 FF 
0259+  225A FE 10 C8 3C 
0259+  225E 32 28 FF 06 
0259+  2262 00 3A 27 FF 
0260+  2266 4F 7D 21 16                      .DB 04Fh, 07Dh, 021h, 016h, 0FFh, 009h, 077h, 00Ch, 03Eh, 00Fh, 0A1h, 032h, 027h, 0FFh, 0C9h, 03Ah, 028h, 0FFh, 0A7h, 0C8h, 0F3h, 03Ah, 028h, 0FFh
0260+  226A FF 09 77 0C 
0260+  226E 3E 0F A1 32 
0260+  2272 27 FF C9 3A 
0260+  2276 28 FF A7 C8 
0260+  227A F3 3A 28 FF 
0261+  227E 3D 32 28 FF                      .DB 03Dh, 032h, 028h, 0FFh, 03Ah, 026h, 0FFh, 04Fh, 03Ch, 0E6h, 00Fh, 032h, 026h, 0FFh, 006h, 000h, 021h, 016h, 0FFh, 009h, 07Eh, 0B7h, 0FBh, 0C9h
0261+  2282 3A 26 FF 4F 
0261+  2286 3C E6 0F 32 
0261+  228A 26 FF 06 00 
0261+  228E 21 16 FF 09 
0261+  2292 7E B7 FB C9 
0262+  2296 3E 07 92 16                      .DB 03Eh, 007h, 092h, 016h, 000h, 021h, 02Fh, 0F7h, 019h, 019h, 05Eh, 023h, 056h, 0A7h, 028h, 007h, 0CBh, 03Ah, 0CBh, 01Bh, 03Dh, 018h, 0F6h, 041h
0262+  229A 00 21 2F F7 
0262+  229E 19 19 5E 23 
0262+  22A2 56 A7 28 07 
0262+  22A6 CB 3A CB 1B 
0262+  22AA 3D 18 F6 41 
0263+  22AE 4F CB 20 CB                      .DB 04Fh, 0CBh, 020h, 0CBh, 020h, 0CBh, 020h, 0CBh, 020h, 0DBh, 024h, 032h, 01Ch, 0F7h, 0F3h, 019h, 01Fh, 0CBh, 02Fh, 0CBh, 02Fh, 0CBh, 02Fh, 0CBh
0263+  22B2 20 CB 20 CB 
0263+  22B6 20 DB 24 32 
0263+  22BA 1C F7 F3 19 
0263+  22BE 1F CB 2F CB 
0263+  22C2 2F CB 2F CB 
0264+  22C6 2F E6 08 EE                      .DB 02Fh, 0E6h, 008h, 0EEh, 000h, 032h, 01Ch, 0F7h, 0D3h, 024h, 078h, 006h, 005h, 010h, 0FEh, 047h, 00Bh, 078h, 0B1h, 020h, 0E2h, 0FBh, 0C9h, 0EBh
0264+  22CA 00 32 1C F7 
0264+  22CE D3 24 78 06 
0264+  22D2 05 10 FE 47 
0264+  22D6 0B 78 B1 20 
0264+  22DA E2 FB C9 EB 
0265+  22DE 18 65 1A F6                      .DB 018h, 065h, 01Ah, 0F6h, 01Bh, 0A1h, 01Dh, 063h, 01Fh, 040h, 021h, 03Fh, 023h, 051h, 025h, 08Ch, 027h, 0EAh, 029h, 060h, 02Ch, 00Dh, 02Fh, 000h
0265+  22E2 1B A1 1D 63 
0265+  22E6 1F 40 21 3F 
0265+  22EA 23 51 25 8C 
0265+  22EE 27 EA 29 60 
0265+  22F2 2C 0D 2F 00 
0266+  22F6 00 CD C7 F6                      .DB 000h, 0CDh, 0C7h, 0F6h, 006h, 000h, 010h, 0FEh, 028h, 0F7h, 0C9h, 0CDh, 0C7h, 0F6h, 006h, 000h, 010h, 0FEh, 028h, 0F7h, 0CDh, 0C7h, 0F6h, 020h
0266+  22FA 06 00 10 FE 
0266+  22FE 28 F7 C9 CD 
0266+  2302 C7 F6 06 00 
0266+  2306 10 FE 28 F7 
0266+  230A CD C7 F6 20 
0267+  230E FB 01 00 00                      .DB 0FBh, 001h, 000h, 000h, 0EDh, 078h, 0E6h, 03Fh, 0FEh, 03Fh, 020h, 0F0h, 0C9h, 076h, 063h, 078h, 07Ah, 000h, 000h, 067h, 066h, 064h, 073h, 061h
0267+  2312 ED 78 E6 3F 
0267+  2316 FE 3F 20 F0 
0267+  231A C9 76 63 78 
0267+  231E 7A 00 00 67 
0267+  2322 66 64 73 61 
0268+  2326 00 74 72 65                      .DB 000h, 074h, 072h, 065h, 077h, 071h, 081h, 035h, 034h, 033h, 032h, 031h, 080h, 036h, 037h, 038h, 039h, 030h, 008h, 079h, 075h, 069h, 06Fh, 070h
0268+  232A 77 71 81 35 
0268+  232E 34 33 32 31 
0268+  2332 80 36 37 38 
0268+  2336 39 30 08 79 
0268+  233A 75 69 6F 70 
0269+  233E 3A 68 6A 6B                      .DB 03Ah, 068h, 06Ah, 06Bh, 06Ch, 02Eh, 00Dh, 062h, 06Eh, 06Dh, 020h, 082h, 083h, 056h, 043h, 058h, 05Ah, 000h, 000h, 047h, 046h, 044h, 053h, 041h
0269+  2342 6C 2E 0D 62 
0269+  2346 6E 6D 20 82 
0269+  234A 83 56 43 58 
0269+  234E 5A 00 00 47 
0269+  2352 46 44 53 41 
0270+  2356 00 54 52 45                      .DB 000h, 054h, 052h, 045h, 057h, 051h, 000h, 025h, 024h, 023h, 022h, 021h, 000h, 05Eh, 026h, 02Ah, 028h, 029h, 000h, 059h, 055h, 049h, 04Fh, 050h
0270+  235A 57 51 00 25 
0270+  235E 24 23 22 21 
0270+  2362 00 5E 26 2A 
0270+  2366 28 29 00 59 
0270+  236A 55 49 4F 50 
0271+  236E 3B 48 4A 4B                      .DB 03Bh, 048h, 04Ah, 04Bh, 04Ch, 02Ch, 000h, 042h, 04Eh, 04Dh, 000h, 000h, 000h, 000h, 003h, 018h, 01Ah, 000h, 000h, 000h, 000h, 000h, 013h, 000h
0271+  2372 4C 2C 00 42 
0271+  2376 4E 4D 00 00 
0271+  237A 00 00 03 18 
0271+  237E 1A 00 00 00 
0271+  2382 00 00 13 00 
0272+  2386 00 00 12 05                      .DB 000h, 000h, 012h, 005h, 000h, 000h, 091h, 000h, 000h, 000h, 027h, 07Ch, 090h, 07Bh, 07Dh, 060h, 05Bh, 05Dh, 07Fh, 000h, 015h, 02Bh, 03Dh, 02Dh
0272+  238A 00 00 91 00 
0272+  238E 00 00 27 7C 
0272+  2392 90 7B 7D 60 
0272+  2396 5B 5D 7F 00 
0272+  239A 15 2B 3D 2D 
0273+  239E 00 00 3C 40                      .DB 000h, 000h, 03Ch, 040h, 03Eh, 05Fh, 094h, 05Ch, 03Fh, 02Fh, 095h, 092h, 093h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0273+  23A2 3E 5F 94 5C 
0273+  23A6 3F 2F 95 92 
0273+  23AA 93 00 00 00 
0273+  23AE 00 00 00 00 
0273+  23B2 00 00 00 00 
0274+  23B6 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 010h
0274+  23BA 00 00 00 00 
0274+  23BE 00 00 00 00 
0274+  23C2 00 00 00 00 
0274+  23C6 00 00 00 00 
0274+  23CA 00 00 00 10 
0275+  23CE 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 001h, 006h, 000h, 0DBh, 026h, 0E6h, 010h, 028h, 002h, 006h, 022h
0275+  23D2 00 00 00 00 
0275+  23D6 00 00 00 00 
0275+  23DA 00 01 06 00 
0275+  23DE DB 26 E6 10 
0275+  23E2 28 02 06 22 
0276+  23E6 3E 80 D3 23                      .DB 03Eh, 080h, 0D3h, 023h, 000h, 000h, 079h, 0D3h, 020h, 000h, 000h, 0AFh, 0D3h, 021h, 000h, 000h, 03Eh, 003h, 0D3h, 023h, 03Eh, 007h, 0D3h, 022h
0276+  23EA 00 00 79 D3 
0276+  23EE 20 00 00 AF 
0276+  23F2 D3 21 00 00 
0276+  23F6 3E 03 D3 23 
0276+  23FA 3E 07 D3 22 
0277+  23FE 78 A7 28 02                      .DB 078h, 0A7h, 028h, 002h, 0D3h, 024h, 000h, 000h, 0C9h, 0C5h, 0F5h, 001h, 050h, 0C3h, 0DBh, 025h, 0CBh, 06Fh, 0C2h, 070h, 0F8h, 00Bh, 078h, 0B1h
0277+  2402 D3 24 00 00 
0277+  2406 C9 C5 F5 01 
0277+  240A 50 C3 DB 25 
0277+  240E CB 6F C2 70 
0277+  2412 F8 0B 78 B1 
0278+  2416 C2 5E F8 F1                      .DB 0C2h, 05Eh, 0F8h, 0F1h, 0C1h, 037h, 03Fh, 0C9h, 0F1h, 0C1h, 0D3h, 020h, 037h, 0C9h, 0F5h, 0DBh, 025h, 0CBh, 047h, 0CAh, 081h, 0F8h, 0F1h, 037h
0278+  241A C1 37 3F C9 
0278+  241E F1 C1 D3 20 
0278+  2422 37 C9 F5 DB 
0278+  2426 25 CB 47 CA 
0278+  242A 81 F8 F1 37 
0279+  242E C9 F1 37 3F                      .DB 0C9h, 0F1h, 037h, 03Fh, 0C9h, 0DBh, 025h, 0CBh, 047h, 0CAh, 090h, 0F8h, 0DBh, 020h, 037h, 0C9h, 037h, 03Fh, 0C9h, 0F5h, 0CBh, 02Fh, 0CBh, 02Fh
0279+  2432 C9 DB 25 CB 
0279+  2436 47 CA 90 F8 
0279+  243A DB 20 37 C9 
0279+  243E 37 3F C9 F5 
0279+  2442 CB 2F CB 2F 
0280+  2446 CB 2F CB 2F                      .DB 0CBh, 02Fh, 0CBh, 02Fh, 0CDh, 0A9h, 0F8h, 0CDh, 059h, 0F8h, 0F1h, 0CDh, 0A9h, 0F8h, 0C3h, 059h, 0F8h, 0E6h, 00Fh, 0C6h, 090h, 027h, 0CEh, 040h
0280+  244A CD A9 F8 CD 
0280+  244E 59 F8 F1 CD 
0280+  2452 A9 F8 C3 59 
0280+  2456 F8 E6 0F C6 
0280+  245A 90 27 CE 40 
0281+  245E 27 C9 E3 CD                      .DB 027h, 0C9h, 0E3h, 0CDh, 0C1h, 0F8h, 0DAh, 0BFh, 0F8h, 07Eh, 023h, 0A7h, 0C2h, 0B9h, 0F8h, 0E3h, 0C9h, 07Eh, 023h, 0A7h, 0CAh, 0CEh, 0F8h, 0CDh
0281+  2462 C1 F8 DA BF 
0281+  2466 F8 7E 23 A7 
0281+  246A C2 B9 F8 E3 
0281+  246E C9 7E 23 A7 
0281+  2472 CA CE F8 CD 
0282+  2476 59 F8 DA C1                      .DB 059h, 0F8h, 0DAh, 0C1h, 0F8h, 0C9h, 037h, 0C9h, 03Eh, 0CFh, 032h, 000h, 0FFh, 0D3h, 013h, 03Eh, 0FFh, 032h, 001h, 0FFh, 0D3h, 013h, 03Eh, 03Fh
0282+  247A F8 C9 37 C9 
0282+  247E 3E CF 32 00 
0282+  2482 FF D3 13 3E 
0282+  2486 FF 32 01 FF 
0282+  248A D3 13 3E 3F 
0283+  248E 32 02 FF D3                      .DB 032h, 002h, 0FFh, 0D3h, 011h, 0C9h, 006h, 00Ah, 0CDh, 0FBh, 0F9h, 010h, 0FBh, 0CDh, 0EBh, 0F9h, 006h, 0F0h, 010h, 0FEh, 0C9h, 0CDh, 0CBh, 0F9h
0283+  2492 11 C9 06 0A 
0283+  2496 CD FB F9 10 
0283+  249A FB CD EB F9 
0283+  249E 06 F0 10 FE 
0283+  24A2 C9 CD CB F9 
0284+  24A6 CD EB F9 CD                      .DB 0CDh, 0EBh, 0F9h, 0CDh, 0DBh, 0F9h, 0C3h, 0BBh, 0F9h, 0CDh, 01Bh, 0F9h, 0CDh, 0DBh, 0F9h, 0CDh, 0EBh, 0F9h, 0C3h, 0CBh, 0F9h, 0C5h, 0CDh, 03Ch
0284+  24AA DB F9 C3 BB 
0284+  24AE F9 CD 1B F9 
0284+  24B2 CD DB F9 CD 
0284+  24B6 EB F9 C3 CB 
0284+  24BA F9 C5 CD 3C 
0285+  24BE F9 C1 D2 04                      .DB 0F9h, 0C1h, 0D2h, 004h, 0F9h, 079h, 0CDh, 050h, 0F9h, 018h, 0E9h, 0CDh, 0F5h, 0F8h, 07Ch, 0CDh, 04Eh, 0F9h, 030h, 017h, 07Dh, 0CDh, 050h, 0F9h
0285+  24C2 F9 79 CD 50 
0285+  24C6 F9 18 E9 CD 
0285+  24CA F5 F8 7C CD 
0285+  24CE 4E F9 30 17 
0285+  24D2 7D CD 50 F9 
0286+  24D6 30 11 06 32                      .DB 030h, 011h, 006h, 032h, 010h, 0FEh, 0CDh, 0F5h, 0F8h, 07Ch, 0CDh, 048h, 0F9h, 030h, 004h, 0CDh, 05Dh, 0F9h, 037h, 0C9h, 0CDh, 0F5h, 0F8h, 07Ch
0286+  24DA 10 FE CD F5 
0286+  24DE F8 7C CD 48 
0286+  24E2 F9 30 04 CD 
0286+  24E6 5D F9 37 C9 
0286+  24EA CD F5 F8 7C 
0287+  24EE CD 4E F9 D0                      .DB 0CDh, 04Eh, 0F9h, 0D0h, 07Dh, 0C3h, 050h, 0F9h, 0CBh, 027h, 0F6h, 001h, 018h, 002h, 0CBh, 027h, 0CDh, 078h, 0F9h, 0CBh, 07Ah, 037h, 0C8h, 0CDh
0287+  24F2 7D C3 50 F9 
0287+  24F6 CB 27 F6 01 
0287+  24FA 18 02 CB 27 
0287+  24FE CD 78 F9 CB 
0287+  2502 7A 37 C8 CD 
0288+  2506 04 F9 37 3F                      .DB 004h, 0F9h, 037h, 03Fh, 0C9h, 006h, 008h, 0DBh, 011h, 037h, 0CBh, 07Fh, 020h, 001h, 03Fh, 0CBh, 011h, 0CDh, 0FBh, 0F9h, 010h, 0F1h, 079h, 0C9h
0288+  250A C9 06 08 DB 
0288+  250E 11 37 CB 7F 
0288+  2512 20 01 3F CB 
0288+  2516 11 CD FB F9 
0288+  251A 10 F1 79 C9 
0289+  251E CD DB F9 CD                      .DB 0CDh, 0DBh, 0F9h, 0CDh, 0FBh, 0F9h, 018h, 053h, 0E5h, 0D5h, 02Ah, 000h, 0FFh, 057h, 03Eh, 03Fh, 0A4h, 0CBh, 027h, 067h, 00Eh, 013h, 006h, 008h
0289+  2522 FB F9 18 53 
0289+  2526 E5 D5 2A 00 
0289+  252A FF 57 3E 3F 
0289+  252E A4 CB 27 67 
0289+  2532 0E 13 06 08 
0290+  2536 1E 40 7C CB                      .DB 01Eh, 040h, 07Ch, 0CBh, 022h, 0CBh, 01Fh, 0EDh, 069h, 0D3h, 013h, 0B3h, 0EDh, 069h, 0D3h, 013h, 0ABh, 0EDh, 069h, 0D3h, 013h, 010h, 0EBh, 07Ch
0290+  253A 22 CB 1F ED 
0290+  253E 69 D3 13 B3 
0290+  2542 ED 69 D3 13 
0290+  2546 AB ED 69 D3 
0290+  254A 13 10 EB 7C 
0291+  254E 37 CB 1F ED                      .DB 037h, 0CBh, 01Fh, 0EDh, 069h, 0D3h, 013h, 0B3h, 0EDh, 069h, 0D3h, 013h, 0EDh, 069h, 0ABh, 06Fh, 032h, 001h, 0FFh, 0DBh, 011h, 0EDh, 069h, 0D1h
0291+  2552 69 D3 13 B3 
0291+  2556 ED 69 D3 13 
0291+  255A ED 69 AB 6F 
0291+  255E 32 01 FF DB 
0291+  2562 11 ED 69 D1 
0292+  2566 E1 57 C9 3A                      .DB 0E1h, 057h, 0C9h, 03Ah, 000h, 0FFh, 0D3h, 013h, 03Ah, 001h, 0FFh, 0CBh, 0B7h, 0D3h, 013h, 032h, 001h, 0FFh, 0C9h, 03Ah, 000h, 0FFh, 0D3h, 013h
0292+  256A 00 FF D3 13 
0292+  256E 3A 01 FF CB 
0292+  2572 B7 D3 13 32 
0292+  2576 01 FF C9 3A 
0292+  257A 00 FF D3 13 
0293+  257E 3A 01 FF CB                      .DB 03Ah, 001h, 0FFh, 0CBh, 0FFh, 0D3h, 013h, 032h, 001h, 0FFh, 0C9h, 03Ah, 000h, 0FFh, 0D3h, 013h, 03Ah, 001h, 0FFh, 0CBh, 0BFh, 0D3h, 013h, 032h
0293+  2582 FF D3 13 32 
0293+  2586 01 FF C9 3A 
0293+  258A 00 FF D3 13 
0293+  258E 3A 01 FF CB 
0293+  2592 BF D3 13 32 
0294+  2596 01 FF C9 3A                      .DB 001h, 0FFh, 0C9h, 03Ah, 000h, 0FFh, 0D3h, 013h, 03Ah, 001h, 0FFh, 0CBh, 0F7h, 0D3h, 013h, 032h, 001h, 0FFh, 0C9h, 0C5h, 001h, 013h, 000h, 03Ah
0294+  259A 00 FF D3 13 
0294+  259E 3A 01 FF CB 
0294+  25A2 F7 D3 13 32 
0294+  25A6 01 FF C9 C5 
0294+  25AA 01 13 00 3A 
0295+  25AE 00 FF 57 3A                      .DB 000h, 0FFh, 057h, 03Ah, 001h, 0FFh, 0CBh, 0B7h, 032h, 001h, 0FFh, 0EDh, 051h, 0D3h, 013h, 0CBh, 0F7h, 0EDh, 051h, 0D3h, 013h, 0DBh, 011h, 0EDh
0295+  25B2 01 FF CB B7 
0295+  25B6 32 01 FF ED 
0295+  25BA 51 D3 13 CB 
0295+  25BE F7 ED 51 D3 
0295+  25C2 13 DB 11 ED 
0296+  25C6 51 57 3A 01                      .DB 051h, 057h, 03Ah, 001h, 0FFh, 0D3h, 013h, 0C1h, 0C9h, 0CDh, 06Eh, 0FBh, 01Eh, 080h, 0CDh, 061h, 0FAh, 0CDh, 035h, 0FAh, 0CDh, 041h, 0FAh, 0CDh
0296+  25CA FF D3 13 C1 
0296+  25CE C9 CD 6E FB 
0296+  25D2 1E 80 CD 61 
0296+  25D6 FA CD 35 FA 
0296+  25DA CD 41 FA CD 
0297+  25DE 3B FA CD 41                      .DB 03Bh, 0FAh, 0CDh, 041h, 0FAh, 03Eh, 050h, 032h, 003h, 0FFh, 0C9h, 03Eh, 053h, 032h, 003h, 0FFh, 0C9h, 02Eh, 003h, 0CDh, 09Ch, 0FAh, 0CDh, 0F5h
0297+  25E2 FA 3E 50 32 
0297+  25E6 03 FF C9 3E 
0297+  25EA 53 32 03 FF 
0297+  25EE C9 2E 03 CD 
0297+  25F2 9C FA CD F5 
0298+  25F6 F8 3A 03 FF                      .DB 0F8h, 03Ah, 003h, 0FFh, 0CDh, 04Eh, 0F9h, 03Eh, 000h, 0CDh, 050h, 0F9h, 03Eh, 001h, 0CDh, 050h, 0F9h, 03Eh, 078h, 0CDh, 050h, 0F9h, 0C3h, 004h
0298+  25FA CD 4E F9 3E 
0298+  25FE 00 CD 50 F9 
0298+  2602 3E 01 CD 50 
0298+  2606 F9 3E 78 CD 
0298+  260A 50 F9 C3 04 
0299+  260E F9 CD 35 FA                      .DB 0F9h, 0CDh, 035h, 0FAh, 0CDh, 06Ah, 0FAh, 0CDh, 03Bh, 0FAh, 02Eh, 001h, 0CDh, 09Ch, 0FAh, 02Eh, 00Ch, 0CDh, 0F5h, 0F8h, 03Ah, 003h, 0FFh, 0CDh
0299+  2612 CD 6A FA CD 
0299+  2616 3B FA 2E 01 
0299+  261A CD 9C FA 2E 
0299+  261E 0C CD F5 F8 
0299+  2622 3A 03 FF CD 
0300+  2626 4E F9 7D 3D                      .DB 04Eh, 0F9h, 07Dh, 03Dh, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CDh, 050h, 0F9h, 026h, 010h, 07Bh, 0CDh, 050h, 0F9h, 025h, 020h, 0F9h
0300+  262A CB 27 CB 27 
0300+  262E CB 27 CB 27 
0300+  2632 CD 50 F9 26 
0300+  2636 10 7B CD 50 
0300+  263A F9 25 20 F9 
0301+  263E CD 04 F9 2D                      .DB 0CDh, 004h, 0F9h, 02Dh, 020h, 0DBh, 02Eh, 000h, 0CDh, 09Ch, 0FAh, 0C9h, 0CDh, 0B4h, 0FAh, 0CDh, 0F5h, 0F8h, 03Ah, 003h, 0FFh, 0CDh, 04Eh, 0F9h
0301+  2642 20 DB 2E 00 
0301+  2646 CD 9C FA C9 
0301+  264A CD B4 FA CD 
0301+  264E F5 F8 3A 03 
0301+  2652 FF CD 4E F9 
0302+  2656 3E FD CD 50                      .DB 03Eh, 0FDh, 0CDh, 050h, 0F9h, 07Dh, 0CDh, 050h, 0F9h, 0C3h, 004h, 0F9h, 0CDh, 0F5h, 0F8h, 03Ah, 003h, 0FFh, 0CDh, 04Eh, 0F9h, 03Eh, 0FEh, 0CDh
0302+  265A F9 7D CD 50 
0302+  265E F9 C3 04 F9 
0302+  2662 CD F5 F8 3A 
0302+  2666 03 FF CD 4E 
0302+  266A F9 3E FE CD 
0303+  266E 50 F9 3E C5                      .DB 050h, 0F9h, 03Eh, 0C5h, 0CDh, 050h, 0F9h, 0C3h, 004h, 0F9h, 0C5h, 006h, 050h, 0FEh, 00Ch, 0DAh, 0D6h, 0FAh, 006h, 053h, 0D6h, 00Ch, 05Fh, 078h
0303+  2672 CD 50 F9 C3 
0303+  2676 04 F9 C5 06 
0303+  267A 50 FE 0C DA 
0303+  267E D6 FA 06 53 
0303+  2682 D6 0C 5F 78 
0304+  2686 32 03 FF 2E                      .DB 032h, 003h, 0FFh, 02Eh, 001h, 0CDh, 09Ch, 0FAh, 0CDh, 0F5h, 0F8h, 03Ah, 003h, 0FFh, 0CDh, 04Eh, 0F9h, 07Bh, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h
0304+  268A 01 CD 9C FA 
0304+  268E CD F5 F8 3A 
0304+  2692 03 FF CD 4E 
0304+  2696 F9 7B CB 27 
0304+  269A CB 27 CB 27 
0305+  269E CB 27 CD 50                      .DB 0CBh, 027h, 0CDh, 050h, 0F9h, 0E1h, 026h, 010h, 07Dh, 0CDh, 050h, 0F9h, 025h, 020h, 0F9h, 0CDh, 004h, 0F9h, 02Eh, 000h, 0CDh, 09Ch, 0FAh, 0C9h
0305+  26A2 F9 E1 26 10 
0305+  26A6 7D CD 50 F9 
0305+  26AA 25 20 F9 CD 
0305+  26AE 04 F9 2E 00 
0305+  26B2 CD 9C FA C9 
0306+  26B6 FE 20 F2 14                      .DB 0FEh, 020h, 0F2h, 014h, 0FBh, 021h, 061h, 048h, 079h, 0C3h, 029h, 0FBh, 0CBh, 07Fh, 0C2h, 00Dh, 0FBh, 0D6h, 020h, 016h, 000h, 05Fh, 0CBh, 023h
0306+  26BA FB 21 61 48 
0306+  26BE 79 C3 29 FB 
0306+  26C2 CB 7F C2 0D 
0306+  26C6 FB D6 20 16 
0306+  26CA 00 5F CB 23 
0307+  26CE 21 7C FB 19                      .DB 021h, 07Ch, 0FBh, 019h, 056h, 023h, 066h, 06Ah, 079h, 0F5h, 006h, 050h, 0FEh, 00Ch, 0DAh, 035h, 0FBh, 006h, 053h, 0D6h, 00Ch, 05Fh, 0CDh, 0F5h
0307+  26D2 56 23 66 6A 
0307+  26D6 79 F5 06 50 
0307+  26DA FE 0C DA 35 
0307+  26DE FB 06 53 D6 
0307+  26E2 0C 5F CD F5 
0308+  26E6 F8 78 CD 4E                      .DB 0F8h, 078h, 0CDh, 04Eh, 0F9h, 07Bh, 0CBh, 027h, 0CDh, 050h, 0F9h, 07Dh, 0CDh, 050h, 0F9h, 07Ch, 0CDh, 050h, 0F9h, 0CDh, 004h, 0F9h, 0F1h, 03Ch
0308+  26EA F9 7B CB 27 
0308+  26EE CD 50 F9 7D 
0308+  26F2 CD 50 F9 7C 
0308+  26F6 CD 50 F9 CD 
0308+  26FA 04 F9 F1 3C 
0309+  26FE C9 C3 29 FB                      .DB 0C9h, 0C3h, 029h, 0FBh, 0CDh, 06Eh, 0FBh, 0AFh, 0E3h, 0CDh, 05Fh, 0FBh, 023h, 0E3h, 0C9h, 04Fh, 07Eh, 0B7h, 0C2h, 066h, 0FBh, 0C9h, 0E5h, 0CDh
0309+  2702 CD 6E FB AF 
0309+  2706 E3 CD 5F FB 
0309+  270A 23 E3 C9 4F 
0309+  270E 7E B7 C2 66 
0309+  2712 FB C9 E5 CD 
0310+  2716 08 FB E1 23                      .DB 008h, 0FBh, 0E1h, 023h, 018h, 0F1h, 03Eh, 000h, 021h, 000h, 000h, 0CDh, 029h, 0FBh, 0FEh, 018h, 0C2h, 073h, 0FBh, 0C9h, 000h, 000h, 000h, 049h
0310+  271A 18 F1 3E 00 
0310+  271E 21 00 00 CD 
0310+  2722 29 FB FE 18 
0310+  2726 C2 73 FB C9 
0310+  272A 00 00 00 49 
0311+  272E 02 02 CE 12                      .DB 002h, 002h, 0CEh, 012h, 0EDh, 012h, 0E4h, 02Dh, 059h, 00Bh, 000h, 002h, 000h, 00Ch, 000h, 021h, 0C0h, 03Fh, 0C0h, 012h, 000h, 020h, 0C0h, 000h
0311+  2732 ED 12 E4 2D 
0311+  2736 59 0B 00 02 
0311+  273A 00 0C 00 21 
0311+  273E C0 3F C0 12 
0311+  2742 00 20 C0 00 
0312+  2746 00 40 00 24                      .DB 000h, 040h, 000h, 024h, 03Fh, 024h, 006h, 004h, 0DBh, 000h, 08Fh, 000h, 0E6h, 000h, 069h, 008h, 0FDh, 000h, 001h, 014h, 0FFh, 000h, 0EFh, 000h
0312+  274A 3F 24 06 04 
0312+  274E DB 00 8F 00 
0312+  2752 E6 00 69 08 
0312+  2756 FD 00 01 14 
0312+  275A FF 00 EF 00 
0313+  275E 40 00 00 22                      .DB 040h, 000h, 000h, 022h, 040h, 00Ch, 0C8h, 000h, 080h, 021h, 083h, 050h, 0BBh, 002h, 0F7h, 000h, 08Fh, 012h, 039h, 000h, 00Fh, 012h, 079h, 000h
0313+  2762 40 0C C8 00 
0313+  2766 80 21 83 50 
0313+  276A BB 02 F7 00 
0313+  276E 8F 12 39 00 
0313+  2772 0F 12 79 00 
0314+  2776 71 00 BD 00                      .DB 071h, 000h, 0BDh, 000h, 0F6h, 000h, 009h, 012h, 01Eh, 000h, 070h, 00Ch, 038h, 000h, 036h, 005h, 036h, 009h, 03Fh, 000h, 0F3h, 000h, 03Fh, 008h
0314+  277A F6 00 09 12 
0314+  277E 1E 00 70 0C 
0314+  2782 38 00 36 05 
0314+  2786 36 09 3F 00 
0314+  278A F3 00 3F 08 
0315+  278E F3 08 ED 00                      .DB 0F3h, 008h, 0EDh, 000h, 001h, 012h, 03Eh, 000h, 030h, 024h, 036h, 028h, 000h, 02Dh, 0EEh, 000h, 009h, 024h, 039h, 000h, 000h, 009h, 00Fh, 000h
0315+  2792 01 12 3E 00 
0315+  2796 30 24 36 28 
0315+  279A 00 2D EE 00 
0315+  279E 09 24 39 00 
0315+  27A2 00 09 0F 00 
0316+  27A6 00 28 08 00                      .DB 000h, 028h, 008h, 000h, 000h, 001h, 08Ch, 020h, 078h, 008h, 0D8h, 000h, 08Eh, 020h, 058h, 020h, 0C0h, 014h, 08Eh, 004h, 070h, 010h, 000h, 010h
0316+  27AA 00 01 8C 20 
0316+  27AE 78 08 D8 00 
0316+  27B2 8E 20 58 20 
0316+  27B6 C0 14 8E 04 
0316+  27BA 70 10 00 10 
0317+  27BE 10 22 00 1E                      .DB 010h, 022h, 000h, 01Eh, 000h, 012h, 0D4h, 010h, 050h, 010h, 0DCh, 000h, 070h, 001h, 086h, 004h, 050h, 000h, 088h, 008h, 078h, 000h, 01Ch, 000h
0317+  27C2 00 12 D4 10 
0317+  27C6 50 10 DC 00 
0317+  27CA 70 01 86 04 
0317+  27CE 50 00 88 08 
0317+  27D2 78 00 1C 00 
0318+  27D6 10 20 14 28                      .DB 010h, 020h, 014h, 028h, 000h, 02Dh, 08Eh, 002h, 048h, 020h, 049h, 021h, 000h, 012h, 089h, 00Ch, 0C0h, 024h, 000h, 000h, 0CDh, 0C9h, 0F3h, 00Ah
0318+  27DA 00 2D 8E 02 
0318+  27DE 48 20 49 21 
0318+  27E2 00 12 89 0C 
0318+  27E6 C0 24 00 00 
0318+  27EA CD C9 F3 0A 
0319+  27EE 0D 43 68 65                      .DB 00Dh, 043h, 068h, 065h, 063h, 06Bh, 020h, 052h, 054h, 043h, 000h, 0CDh, 0C0h, 0FCh, 0CDh, 0BBh, 0FCh, 0CBh, 07Bh, 0C0h, 0CDh, 0C9h, 0F3h, 00Ah
0319+  27F2 63 6B 20 52 
0319+  27F6 54 43 00 CD 
0319+  27FA C0 FC CD BB 
0319+  27FE FC CB 7B C0 
0319+  2802 CD C9 F3 0A 
0320+  2806 0D 52 65 73                      .DB 00Dh, 052h, 065h, 073h, 065h, 074h, 020h, 052h, 054h, 043h, 000h, 026h, 06Fh, 02Eh, 000h, 0CDh, 03Ch, 0F9h, 0D2h, 0CEh, 0FCh, 021h, 0E1h, 0FCh
0320+  280A 65 74 20 52 
0320+  280E 54 43 00 26 
0320+  2812 6F 2E 00 CD 
0320+  2816 3C F9 D2 CE 
0320+  281A FC 21 E1 FC 
0321+  281E 7E 23 FE FF                      .DB 07Eh, 023h, 0FEh, 0FFh, 0CAh, 07Fh, 0FCh, 0CDh, 050h, 0F9h, 0D2h, 0CEh, 0FCh, 018h, 0F1h, 0CDh, 004h, 0F9h, 026h, 06Fh, 02Eh, 003h, 0CDh, 01Bh
0321+  2822 CA 7F FC CD 
0321+  2826 50 F9 D2 CE 
0321+  282A FC 18 F1 CD 
0321+  282E 04 F9 26 6F 
0321+  2832 2E 03 CD 1B 
0322+  2836 F9 D2 CE FC                      .DB 0F9h, 0D2h, 0CEh, 0FCh, 05Fh, 0CDh, 004h, 0F9h, 0CBh, 0DBh, 0CDh, 0BBh, 0FCh, 0CDh, 03Ch, 0F9h, 0D2h, 0CEh, 0FCh, 07Bh, 0CDh, 050h, 0F9h, 0D2h
0322+  283A 5F CD 04 F9 
0322+  283E CB DB CD BB 
0322+  2842 FC CD 3C F9 
0322+  2846 D2 CE FC 7B 
0322+  284A CD 50 F9 D2 
0323+  284E CE FC CD 04                      .DB 0CEh, 0FCh, 0CDh, 004h, 0F9h, 0CDh, 0C0h, 0FCh, 0CBh, 0FBh, 0CDh, 03Ch, 0F9h, 0D2h, 0CEh, 0FCh, 07Bh, 0CDh, 050h, 0F9h, 0D2h, 0CEh, 0FCh, 0CDh
0323+  2852 F9 CD C0 FC 
0323+  2856 CB FB CD 3C 
0323+  285A F9 D2 CE FC 
0323+  285E 7B CD 50 F9 
0323+  2862 D2 CE FC CD 
0324+  2866 04 F9 C9 06                      .DB 004h, 0F9h, 0C9h, 006h, 000h, 010h, 0FEh, 0C9h, 026h, 06Fh, 02Eh, 000h, 0CDh, 01Bh, 0F9h, 0D2h, 0CEh, 0FCh, 05Fh, 0C3h, 004h, 0F9h, 0CDh, 004h
0324+  286A 00 10 FE C9 
0324+  286E 26 6F 2E 00 
0324+  2872 CD 1B F9 D2 
0324+  2876 CE FC 5F C3 
0324+  287A 04 F9 CD 04 
0325+  287E F9 CD C9 F3                      .DB 0F9h, 0CDh, 0C9h, 0F3h, 00Ah, 00Dh, 052h, 054h, 043h, 020h, 050h, 061h, 06Eh, 069h, 063h, 000h, 0C9h, 023h, 059h, 008h, 006h, 005h, 011h, 022h
0325+  2882 0A 0D 52 54 
0325+  2886 43 20 50 61 
0325+  288A 6E 69 63 00 
0325+  288E C9 23 59 08 
0325+  2892 06 05 11 22 
0326+  2896 FF F3 E5 C5                      .DB 0FFh, 0F3h, 0E5h, 0C5h, 0D5h, 0E6h, 07Fh, 057h, 0CBh, 03Ah, 0CBh, 03Ah, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0E6h, 030h, 05Fh, 00Eh
0326+  289A D5 E6 7F 57 
0326+  289E CB 3A CB 3A 
0326+  28A2 CB 27 CB 27 
0326+  28A6 CB 27 CB 27 
0326+  28AA E6 30 5F 0E 
0327+  28AE 70 3E 01 ED                      .DB 070h, 03Eh, 001h, 0EDh, 079h, 021h, 055h, 015h, 036h, 0AAh, 03Eh, 000h, 0EDh, 079h, 021h, 0AAh, 02Ah, 036h, 055h, 03Eh, 001h, 0EDh, 079h, 021h
0327+  28B2 79 21 55 15 
0327+  28B6 36 AA 3E 00 
0327+  28BA ED 79 21 AA 
0327+  28BE 2A 36 55 3E 
0327+  28C2 01 ED 79 21 
0328+  28C6 55 15 36 80                      .DB 055h, 015h, 036h, 080h, 03Eh, 001h, 0EDh, 079h, 021h, 055h, 015h, 036h, 0AAh, 03Eh, 000h, 0EDh, 079h, 021h, 0AAh, 02Ah, 036h, 055h, 0EDh, 051h
0328+  28CA 3E 01 ED 79 
0328+  28CE 21 55 15 36 
0328+  28D2 AA 3E 00 ED 
0328+  28D6 79 21 AA 2A 
0328+  28DA 36 55 ED 51 
0329+  28DE 63 36 30 7E                      .DB 063h, 036h, 030h, 07Eh, 0CBh, 007h, 030h, 0FBh, 0D1h, 0C1h, 0E1h, 0FBh, 0C9h, 0F3h, 05Fh, 07Ch, 0E6h, 00Fh, 067h, 07Ah, 0E6h, 07Fh, 057h, 047h
0329+  28E2 CB 07 30 FB 
0329+  28E6 D1 C1 E1 FB 
0329+  28EA C9 F3 5F 7C 
0329+  28EE E6 0F 67 7A 
0329+  28F2 E6 7F 57 47 
0330+  28F6 7A E6 03 CB                      .DB 07Ah, 0E6h, 003h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0CBh, 027h, 0B4h, 067h, 0CBh, 03Ah, 0CBh, 03Ah, 0E5h, 00Eh, 070h, 03Eh, 001h, 0EDh, 079h
0330+  28FA 27 CB 27 CB 
0330+  28FE 27 CB 27 B4 
0330+  2902 67 CB 3A CB 
0330+  2906 3A E5 0E 70 
0330+  290A 3E 01 ED 79 
0331+  290E 21 55 15 36                      .DB 021h, 055h, 015h, 036h, 0AAh, 03Eh, 000h, 0EDh, 079h, 021h, 0AAh, 02Ah, 036h, 055h, 03Eh, 001h, 0EDh, 079h, 021h, 055h, 015h, 036h, 0A0h, 0EDh
0331+  2912 AA 3E 00 ED 
0331+  2916 79 21 AA 2A 
0331+  291A 36 55 3E 01 
0331+  291E ED 79 21 55 
0331+  2922 15 36 A0 ED 
0332+  2926 51 E1 73 7E                      .DB 051h, 0E1h, 073h, 07Eh, 0ABh, 0CBh, 007h, 030h, 0FAh, 07Ch, 0E6h, 00Fh, 067h, 050h, 0FBh, 0C9h, 0DDh, 0E5h, 0E5h, 0DDh, 0E1h, 021h, 000h, 000h
0332+  292A AB CB 07 30 
0332+  292E FA 7C E6 0F 
0332+  2932 67 50 FB C9 
0332+  2936 DD E5 E5 DD 
0332+  293A E1 21 00 00 
0333+  293E 7A CD E9 FC                      .DB 07Ah, 0CDh, 0E9h, 0FCh, 0DDh, 07Eh, 000h, 0C5h, 0CDh, 03Dh, 0FDh, 0C1h, 0DDh, 023h, 00Bh, 078h, 0B1h, 028h, 00Eh, 023h, 07Dh, 0A7h, 020h, 0ECh
0333+  2942 DD 7E 00 C5 
0333+  2946 CD 3D FD C1 
0333+  294A DD 23 0B 78 
0333+  294E B1 28 0E 23 
0333+  2952 7D A7 20 EC 
0334+  2956 7C E6 0F 67                      .DB 07Ch, 0E6h, 00Fh, 067h, 020h, 0E6h, 014h, 018h, 0DFh, 0DDh, 0E1h, 0C9h, 0FEh, 003h, 0D0h, 04Fh, 006h, 000h, 021h, 039h, 0FFh, 009h, 073h, 0C6h
0334+  295A 20 E6 14 18 
0334+  295E DF DD E1 C9 
0334+  2962 FE 03 D0 4F 
0334+  2966 06 00 21 39 
0334+  296A FF 09 73 C6 
0335+  296E 70 4F ED 59                      .DB 070h, 04Fh, 0EDh, 059h, 037h, 0C9h, 03Eh, 016h, 0C9h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
0335+  2972 37 C9 3E 16 
0335+  2976 C9 00 00 00 
0335+  297A 00 00 00 00 
0335+  297E 00 00 00 00 
0335+  2982 00 00 00 00 
0336+  2986 00 00 00 00                      .DB 000h, 000h, 000h, 000h, 0C3h, 0C9h, 0F3h, 0C3h, 0B4h, 0FDh, 0C3h, 0F5h, 0F8h, 0C3h, 004h, 0F9h, 0C3h, 050h, 0F9h, 0C3h, 05Dh, 0F9h, 0C3h, 03Ch
0336+  298A C3 C9 F3 C3 
0336+  298E B4 FD C3 F5 
0336+  2992 F8 C3 04 F9 
0336+  2996 C3 50 F9 C3 
0336+  299A 5D F9 C3 3C 
0337+  299E F9 C3 1B F9                      .DB 0F9h, 0C3h, 01Bh, 0F9h, 0C3h, 053h, 0F7h, 0C3h, 0E8h, 0F6h, 0C3h, 0C6h, 0FDh
0337+  29A2 C3 53 F7 C3 
0337+  29A6 E8 F6 C3 C6 
0337+  29AA FD 
0189   29AB             .END
tasm: Number of errors = 0
